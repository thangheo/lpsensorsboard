ARM GAS  /tmp/cc5sz7xa.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB55:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/cc5sz7xa.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** ADC_HandleTypeDef hadc;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** LPTIM_HandleTypeDef hlptim1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** UART_HandleTypeDef hlpuart1;
  49:Core/Src/main.c **** UART_HandleTypeDef huart1;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_ADC_Init(void);
  61:Core/Src/main.c **** static void MX_I2C1_Init(void);
  62:Core/Src/main.c **** static void MX_LPTIM1_Init(void);
  63:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void);
  64:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  65:Core/Src/main.c **** static void MX_RTC_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END 0 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /**
  76:Core/Src/main.c ****   * @brief  The application entry point.
  77:Core/Src/main.c ****   * @retval int
  78:Core/Src/main.c ****   */
  79:Core/Src/main.c **** int main(void)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END 1 */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.c ****   HAL_Init();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN Init */
ARM GAS  /tmp/cc5sz7xa.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END Init */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Configure the system clock */
  95:Core/Src/main.c ****   SystemClock_Config();
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END SysInit */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Initialize all configured peripherals */
 102:Core/Src/main.c ****   MX_GPIO_Init();
 103:Core/Src/main.c ****   MX_ADC_Init();
 104:Core/Src/main.c ****   MX_I2C1_Init();
 105:Core/Src/main.c ****   MX_LPTIM1_Init();
 106:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 107:Core/Src/main.c ****   MX_USART1_UART_Init();
 108:Core/Src/main.c ****   MX_RTC_Init();
 109:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c ****   while (1)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     /* USER CODE END WHILE */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 139:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 144:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_3;
ARM GAS  /tmp/cc5sz7xa.s 			page 4


 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 149:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 150:Core/Src/main.c ****   {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 157:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 161:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_LPUART1
 168:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_RTC
 169:Core/Src/main.c ****                               |RCC_PERIPHCLK_LPTIM1;
 170:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 171:Core/Src/main.c ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 172:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 173:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 174:Core/Src/main.c ****   PeriphClkInit.LptimClockSelection = RCC_LPTIM1CLKSOURCE_LSI;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c **** /**
 183:Core/Src/main.c ****   * @brief ADC Initialization Function
 184:Core/Src/main.c ****   * @param None
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** static void MX_ADC_Init(void)
 188:Core/Src/main.c **** {
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 0 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END ADC_Init 0 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 1 */
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* USER CODE END ADC_Init 1 */
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c ****   hadc.Instance = ADC1;
 203:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 204:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
ARM GAS  /tmp/cc5sz7xa.s 			page 5


 205:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 206:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 207:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 208:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 209:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 210:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 212:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 213:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 214:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 215:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 216:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 217:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = DISABLE;
 218:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 219:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 220:Core/Src/main.c ****   {
 221:Core/Src/main.c ****     Error_Handler();
 222:Core/Src/main.c ****   }
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 227:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 228:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 229:Core/Src/main.c ****   {
 230:Core/Src/main.c ****     Error_Handler();
 231:Core/Src/main.c ****   }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 234:Core/Src/main.c ****   */
 235:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_2;
 236:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Configure for the selected ADC regular channel to be converted.
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 244:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   /* USER CODE BEGIN ADC_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END ADC_Init 2 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** }
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 256:Core/Src/main.c ****   * @param None
 257:Core/Src/main.c ****   * @retval None
 258:Core/Src/main.c ****   */
 259:Core/Src/main.c **** static void MX_I2C1_Init(void)
 260:Core/Src/main.c **** {
 261:Core/Src/main.c **** 
ARM GAS  /tmp/cc5sz7xa.s 			page 6


 262:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 269:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 270:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000090F;
 271:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 272:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 273:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 274:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 275:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 276:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 277:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 278:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /** Configure Analogue filter
 284:Core/Src/main.c ****   */
 285:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 286:Core/Src/main.c ****   {
 287:Core/Src/main.c ****     Error_Handler();
 288:Core/Src/main.c ****   }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /** Configure Digital filter
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** }
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** /**
 303:Core/Src/main.c ****   * @brief LPTIM1 Initialization Function
 304:Core/Src/main.c ****   * @param None
 305:Core/Src/main.c ****   * @retval None
 306:Core/Src/main.c ****   */
 307:Core/Src/main.c **** static void MX_LPTIM1_Init(void)
 308:Core/Src/main.c **** {
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 0 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 1 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 1 */
 317:Core/Src/main.c ****   hlptim1.Instance = LPTIM1;
 318:Core/Src/main.c ****   hlptim1.Init.Clock.Source = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
ARM GAS  /tmp/cc5sz7xa.s 			page 7


 319:Core/Src/main.c ****   hlptim1.Init.Clock.Prescaler = LPTIM_PRESCALER_DIV128;
 320:Core/Src/main.c ****   hlptim1.Init.Trigger.Source = LPTIM_TRIGSOURCE_SOFTWARE;
 321:Core/Src/main.c ****   hlptim1.Init.OutputPolarity = LPTIM_OUTPUTPOLARITY_HIGH;
 322:Core/Src/main.c ****   hlptim1.Init.UpdateMode = LPTIM_UPDATE_IMMEDIATE;
 323:Core/Src/main.c ****   hlptim1.Init.CounterSource = LPTIM_COUNTERSOURCE_INTERNAL;
 324:Core/Src/main.c ****   if (HAL_LPTIM_Init(&hlptim1) != HAL_OK)
 325:Core/Src/main.c ****   {
 326:Core/Src/main.c ****     Error_Handler();
 327:Core/Src/main.c ****   }
 328:Core/Src/main.c ****   /* USER CODE BEGIN LPTIM1_Init 2 */
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /* USER CODE END LPTIM1_Init 2 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** }
 333:Core/Src/main.c **** 
 334:Core/Src/main.c **** /**
 335:Core/Src/main.c ****   * @brief LPUART1 Initialization Function
 336:Core/Src/main.c ****   * @param None
 337:Core/Src/main.c ****   * @retval None
 338:Core/Src/main.c ****   */
 339:Core/Src/main.c **** static void MX_LPUART1_UART_Init(void)
 340:Core/Src/main.c **** {
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 0 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 0 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 1 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 1 */
 349:Core/Src/main.c ****   hlpuart1.Instance = LPUART1;
 350:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 209700;
 351:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_7B;
 352:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 353:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 354:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 355:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 356:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 357:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 358:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   /* USER CODE BEGIN LPUART1_Init 2 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END LPUART1_Init 2 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c **** }
 367:Core/Src/main.c **** 
 368:Core/Src/main.c **** /**
 369:Core/Src/main.c ****   * @brief USART1 Initialization Function
 370:Core/Src/main.c ****   * @param None
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 374:Core/Src/main.c **** {
 375:Core/Src/main.c **** 
ARM GAS  /tmp/cc5sz7xa.s 			page 8


 376:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 383:Core/Src/main.c ****   huart1.Instance = USART1;
 384:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 385:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 386:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 387:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 388:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 389:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 390:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 391:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 392:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 393:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 394:Core/Src/main.c ****   {
 395:Core/Src/main.c ****     Error_Handler();
 396:Core/Src/main.c ****   }
 397:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** }
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** /**
 404:Core/Src/main.c ****   * @brief RTC Initialization Function
 405:Core/Src/main.c ****   * @param None
 406:Core/Src/main.c ****   * @retval None
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_RTC_Init(void)
 409:Core/Src/main.c **** {
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /** Initialize RTC Only
 420:Core/Src/main.c ****   */
 421:Core/Src/main.c ****   hrtc.Instance = RTC;
 422:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 423:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 424:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 425:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_WAKEUP;
 426:Core/Src/main.c ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 427:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 428:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 429:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 430:Core/Src/main.c ****   {
 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
ARM GAS  /tmp/cc5sz7xa.s 			page 9


 433:Core/Src/main.c **** 
 434:Core/Src/main.c ****   /** Enable the WakeUp
 435:Core/Src/main.c ****   */
 436:Core/Src/main.c ****   if (HAL_RTCEx_SetWakeUpTimer(&hrtc, 120, RTC_WAKEUPCLOCK_CK_SPRE_16BITS) != HAL_OK)
 437:Core/Src/main.c ****   {
 438:Core/Src/main.c ****     Error_Handler();
 439:Core/Src/main.c ****   }
 440:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c **** }
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /**
 447:Core/Src/main.c ****   * @brief GPIO Initialization Function
 448:Core/Src/main.c ****   * @param None
 449:Core/Src/main.c ****   * @retval None
 450:Core/Src/main.c ****   */
 451:Core/Src/main.c **** static void MX_GPIO_Init(void)
 452:Core/Src/main.c **** {
  26              		.loc 1 452 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 C646     		mov	lr, r8
  39 0004 00B5     		push	{lr}
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 8, -24
  43 0006 8AB0     		sub	sp, sp, #40
  44              	.LCFI2:
  45              		.cfi_def_cfa_offset 64
 453:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  46              		.loc 1 453 3 view .LVU1
  47              		.loc 1 453 20 is_stmt 0 view .LVU2
  48 0008 1422     		movs	r2, #20
  49 000a 0021     		movs	r1, #0
  50 000c 05A8     		add	r0, sp, #20
  51 000e FFF7FEFF 		bl	memset
  52              	.LVL0:
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 456:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 456 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 456 3 view .LVU4
  56              		.loc 1 456 3 view .LVU5
  57 0012 2D4B     		ldr	r3, .L2
  58 0014 D96A     		ldr	r1, [r3, #44]
ARM GAS  /tmp/cc5sz7xa.s 			page 10


  59 0016 0422     		movs	r2, #4
  60 0018 1143     		orrs	r1, r2
  61 001a D962     		str	r1, [r3, #44]
  62              		.loc 1 456 3 view .LVU6
  63 001c D96A     		ldr	r1, [r3, #44]
  64 001e 0A40     		ands	r2, r1
  65 0020 0192     		str	r2, [sp, #4]
  66              		.loc 1 456 3 view .LVU7
  67 0022 019A     		ldr	r2, [sp, #4]
  68              	.LBE4:
  69              		.loc 1 456 3 view .LVU8
 457:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  70              		.loc 1 457 3 view .LVU9
  71              	.LBB5:
  72              		.loc 1 457 3 view .LVU10
  73              		.loc 1 457 3 view .LVU11
  74 0024 D96A     		ldr	r1, [r3, #44]
  75 0026 8022     		movs	r2, #128
  76 0028 1143     		orrs	r1, r2
  77 002a D962     		str	r1, [r3, #44]
  78              		.loc 1 457 3 view .LVU12
  79 002c D96A     		ldr	r1, [r3, #44]
  80 002e 0A40     		ands	r2, r1
  81 0030 0292     		str	r2, [sp, #8]
  82              		.loc 1 457 3 view .LVU13
  83 0032 029A     		ldr	r2, [sp, #8]
  84              	.LBE5:
  85              		.loc 1 457 3 view .LVU14
 458:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  86              		.loc 1 458 3 view .LVU15
  87              	.LBB6:
  88              		.loc 1 458 3 view .LVU16
  89              		.loc 1 458 3 view .LVU17
  90 0034 DA6A     		ldr	r2, [r3, #44]
  91 0036 0127     		movs	r7, #1
  92 0038 3A43     		orrs	r2, r7
  93 003a DA62     		str	r2, [r3, #44]
  94              		.loc 1 458 3 view .LVU18
  95 003c DA6A     		ldr	r2, [r3, #44]
  96 003e 3A40     		ands	r2, r7
  97 0040 0392     		str	r2, [sp, #12]
  98              		.loc 1 458 3 view .LVU19
  99 0042 039A     		ldr	r2, [sp, #12]
 100              	.LBE6:
 101              		.loc 1 458 3 view .LVU20
 459:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 102              		.loc 1 459 3 view .LVU21
 103              	.LBB7:
 104              		.loc 1 459 3 view .LVU22
 105              		.loc 1 459 3 view .LVU23
 106 0044 D96A     		ldr	r1, [r3, #44]
 107 0046 0222     		movs	r2, #2
 108 0048 1143     		orrs	r1, r2
 109 004a D962     		str	r1, [r3, #44]
 110              		.loc 1 459 3 view .LVU24
 111 004c DB6A     		ldr	r3, [r3, #44]
 112 004e 1A40     		ands	r2, r3
ARM GAS  /tmp/cc5sz7xa.s 			page 11


 113 0050 0492     		str	r2, [sp, #16]
 114              		.loc 1 459 3 view .LVU25
 115 0052 049B     		ldr	r3, [sp, #16]
 116              	.LBE7:
 117              		.loc 1 459 3 view .LVU26
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 462:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_15, GPIO_PIN_RESET);
 118              		.loc 1 462 3 view .LVU27
 119 0054 8023     		movs	r3, #128
 120 0056 1B02     		lsls	r3, r3, #8
 121 0058 9846     		mov	r8, r3
 122 005a 1C4E     		ldr	r6, .L2+4
 123 005c 0022     		movs	r2, #0
 124 005e 1900     		movs	r1, r3
 125 0060 3000     		movs	r0, r6
 126 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL1:
 463:Core/Src/main.c **** 
 464:Core/Src/main.c ****   /*Configure GPIO pin : PC14 */
 465:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14;
 128              		.loc 1 465 3 view .LVU28
 129              		.loc 1 465 23 is_stmt 0 view .LVU29
 130 0066 8023     		movs	r3, #128
 131 0068 DB01     		lsls	r3, r3, #7
 132 006a 0593     		str	r3, [sp, #20]
 466:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 133              		.loc 1 466 3 is_stmt 1 view .LVU30
 134              		.loc 1 466 24 is_stmt 0 view .LVU31
 135 006c 0325     		movs	r5, #3
 136 006e 0695     		str	r5, [sp, #24]
 467:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 137              		.loc 1 467 3 is_stmt 1 view .LVU32
 138              		.loc 1 467 24 is_stmt 0 view .LVU33
 139 0070 0024     		movs	r4, #0
 140 0072 0794     		str	r4, [sp, #28]
 468:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 141              		.loc 1 468 3 is_stmt 1 view .LVU34
 142 0074 05A9     		add	r1, sp, #20
 143 0076 3000     		movs	r0, r6
 144 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 145              	.LVL2:
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /*Configure GPIO pin : PC15 */
 471:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_15;
 146              		.loc 1 471 3 view .LVU35
 147              		.loc 1 471 23 is_stmt 0 view .LVU36
 148 007c 4346     		mov	r3, r8
 149 007e 0593     		str	r3, [sp, #20]
 472:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 150              		.loc 1 472 3 is_stmt 1 view .LVU37
 151              		.loc 1 472 24 is_stmt 0 view .LVU38
 152 0080 0697     		str	r7, [sp, #24]
 473:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 153              		.loc 1 473 3 is_stmt 1 view .LVU39
 154              		.loc 1 473 24 is_stmt 0 view .LVU40
 155 0082 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/cc5sz7xa.s 			page 12


 474:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 156              		.loc 1 474 3 is_stmt 1 view .LVU41
 157              		.loc 1 474 25 is_stmt 0 view .LVU42
 158 0084 0894     		str	r4, [sp, #32]
 475:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 159              		.loc 1 475 3 is_stmt 1 view .LVU43
 160 0086 05A9     		add	r1, sp, #20
 161 0088 3000     		movs	r0, r6
 162 008a FFF7FEFF 		bl	HAL_GPIO_Init
 163              	.LVL3:
 476:Core/Src/main.c **** 
 477:Core/Src/main.c ****   /*Configure GPIO pins : PH0 PH1 */
 478:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 164              		.loc 1 478 3 view .LVU44
 165              		.loc 1 478 23 is_stmt 0 view .LVU45
 166 008e 0595     		str	r5, [sp, #20]
 479:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 167              		.loc 1 479 3 is_stmt 1 view .LVU46
 168              		.loc 1 479 24 is_stmt 0 view .LVU47
 169 0090 0695     		str	r5, [sp, #24]
 480:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 480 3 is_stmt 1 view .LVU48
 171              		.loc 1 480 24 is_stmt 0 view .LVU49
 172 0092 0794     		str	r4, [sp, #28]
 481:Core/Src/main.c ****   HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 173              		.loc 1 481 3 is_stmt 1 view .LVU50
 174 0094 05A9     		add	r1, sp, #20
 175 0096 0E48     		ldr	r0, .L2+8
 176 0098 FFF7FEFF 		bl	HAL_GPIO_Init
 177              	.LVL4:
 482:Core/Src/main.c **** 
 483:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA3 PA4 PA5
 484:Core/Src/main.c ****                            PA6 PA7 PA8 PA11
 485:Core/Src/main.c ****                            PA12 PA15 */
 486:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5
 178              		.loc 1 486 3 view .LVU51
 179              		.loc 1 486 23 is_stmt 0 view .LVU52
 180 009c 0D4B     		ldr	r3, .L2+12
 181 009e 0593     		str	r3, [sp, #20]
 487:Core/Src/main.c ****                           |GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_11
 488:Core/Src/main.c ****                           |GPIO_PIN_12|GPIO_PIN_15;
 489:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 182              		.loc 1 489 3 is_stmt 1 view .LVU53
 183              		.loc 1 489 24 is_stmt 0 view .LVU54
 184 00a0 0695     		str	r5, [sp, #24]
 490:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 185              		.loc 1 490 3 is_stmt 1 view .LVU55
 186              		.loc 1 490 24 is_stmt 0 view .LVU56
 187 00a2 0794     		str	r4, [sp, #28]
 491:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 188              		.loc 1 491 3 is_stmt 1 view .LVU57
 189 00a4 A020     		movs	r0, #160
 190 00a6 05A9     		add	r1, sp, #20
 191 00a8 C005     		lsls	r0, r0, #23
 192 00aa FFF7FEFF 		bl	HAL_GPIO_Init
 193              	.LVL5:
 492:Core/Src/main.c **** 
ARM GAS  /tmp/cc5sz7xa.s 			page 13


 493:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 PB2 PB12
 494:Core/Src/main.c ****                            PB13 PB14 PB15 PB3
 495:Core/Src/main.c ****                            PB4 PB5 PB8 PB9 */
 496:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_12
 194              		.loc 1 496 3 view .LVU58
 195              		.loc 1 496 23 is_stmt 0 view .LVU59
 196 00ae 0A4B     		ldr	r3, .L2+16
 197 00b0 0593     		str	r3, [sp, #20]
 497:Core/Src/main.c ****                           |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_3
 498:Core/Src/main.c ****                           |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9;
 499:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 198              		.loc 1 499 3 is_stmt 1 view .LVU60
 199              		.loc 1 499 24 is_stmt 0 view .LVU61
 200 00b2 0695     		str	r5, [sp, #24]
 500:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 201              		.loc 1 500 3 is_stmt 1 view .LVU62
 202              		.loc 1 500 24 is_stmt 0 view .LVU63
 203 00b4 0794     		str	r4, [sp, #28]
 501:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 204              		.loc 1 501 3 is_stmt 1 view .LVU64
 205 00b6 05A9     		add	r1, sp, #20
 206 00b8 0848     		ldr	r0, .L2+20
 207 00ba FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL6:
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** }
 209              		.loc 1 503 1 is_stmt 0 view .LVU65
 210 00be 0AB0     		add	sp, sp, #40
 211              		@ sp needed
 212 00c0 80BC     		pop	{r7}
 213 00c2 B846     		mov	r8, r7
 214 00c4 F0BD     		pop	{r4, r5, r6, r7, pc}
 215              	.L3:
 216 00c6 C046     		.align	2
 217              	.L2:
 218 00c8 00100240 		.word	1073876992
 219 00cc 00080050 		.word	1342179328
 220 00d0 001C0050 		.word	1342184448
 221 00d4 F9990000 		.word	39417
 222 00d8 3FF30000 		.word	62271
 223 00dc 00040050 		.word	1342178304
 224              		.cfi_endproc
 225              	.LFE55:
 227              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 228              		.align	1
 229              		.global	HAL_TIM_PeriodElapsedCallback
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 234              	HAL_TIM_PeriodElapsedCallback:
 235              	.LVL7:
 236              	.LFB56:
 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 506:Core/Src/main.c **** 
 507:Core/Src/main.c **** /* USER CODE END 4 */
 508:Core/Src/main.c **** 
ARM GAS  /tmp/cc5sz7xa.s 			page 14


 509:Core/Src/main.c **** /**
 510:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 511:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 512:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 513:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 514:Core/Src/main.c ****   * @param  htim : TIM handle
 515:Core/Src/main.c ****   * @retval None
 516:Core/Src/main.c ****   */
 517:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 518:Core/Src/main.c **** {
 237              		.loc 1 518 1 is_stmt 1 view -0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		.loc 1 518 1 is_stmt 0 view .LVU67
 242 0000 10B5     		push	{r4, lr}
 243              	.LCFI3:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 4, -8
 246              		.cfi_offset 14, -4
 519:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 520:Core/Src/main.c **** 
 521:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 522:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 247              		.loc 1 522 3 is_stmt 1 view .LVU68
 248              		.loc 1 522 11 is_stmt 0 view .LVU69
 249 0002 0268     		ldr	r2, [r0]
 250              		.loc 1 522 6 view .LVU70
 251 0004 034B     		ldr	r3, .L7
 252 0006 9A42     		cmp	r2, r3
 253 0008 00D0     		beq	.L6
 254              	.LVL8:
 255              	.L4:
 523:Core/Src/main.c ****     HAL_IncTick();
 524:Core/Src/main.c ****   }
 525:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 526:Core/Src/main.c **** 
 527:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 528:Core/Src/main.c **** }
 256              		.loc 1 528 1 view .LVU71
 257              		@ sp needed
 258 000a 10BD     		pop	{r4, pc}
 259              	.LVL9:
 260              	.L6:
 523:Core/Src/main.c ****     HAL_IncTick();
 261              		.loc 1 523 5 is_stmt 1 view .LVU72
 262 000c FFF7FEFF 		bl	HAL_IncTick
 263              	.LVL10:
 264              		.loc 1 528 1 is_stmt 0 view .LVU73
 265 0010 FBE7     		b	.L4
 266              	.L8:
 267 0012 C046     		.align	2
 268              	.L7:
 269 0014 00100040 		.word	1073745920
 270              		.cfi_endproc
 271              	.LFE56:
 273              		.section	.text.Error_Handler,"ax",%progbits
ARM GAS  /tmp/cc5sz7xa.s 			page 15


 274              		.align	1
 275              		.global	Error_Handler
 276              		.syntax unified
 277              		.code	16
 278              		.thumb_func
 280              	Error_Handler:
 281              	.LFB57:
 529:Core/Src/main.c **** 
 530:Core/Src/main.c **** /**
 531:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 532:Core/Src/main.c ****   * @retval None
 533:Core/Src/main.c ****   */
 534:Core/Src/main.c **** void Error_Handler(void)
 535:Core/Src/main.c **** {
 282              		.loc 1 535 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ Volatile: function does not return.
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 536:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 537:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 538:Core/Src/main.c ****   __disable_irq();
 288              		.loc 1 538 3 view .LVU75
 289              	.LBB8:
 290              	.LBI8:
 291              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/cc5sz7xa.s 			page 16


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/cc5sz7xa.s 			page 17


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 292              		.loc 2 140 27 view .LVU76
 293              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /tmp/cc5sz7xa.s 			page 18


 294              		.loc 2 142 3 view .LVU77
 295              		.syntax divided
 296              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 297 0000 72B6     		cpsid i
 298              	@ 0 "" 2
 299              		.thumb
 300              		.syntax unified
 301              	.L10:
 302              	.LBE9:
 303              	.LBE8:
 539:Core/Src/main.c ****   while (1)
 304              		.loc 1 539 3 discriminator 1 view .LVU78
 540:Core/Src/main.c ****   {
 541:Core/Src/main.c ****   }
 305              		.loc 1 541 3 discriminator 1 view .LVU79
 539:Core/Src/main.c ****   while (1)
 306              		.loc 1 539 9 discriminator 1 view .LVU80
 307 0002 FEE7     		b	.L10
 308              		.cfi_endproc
 309              	.LFE57:
 311              		.section	.text.MX_ADC_Init,"ax",%progbits
 312              		.align	1
 313              		.syntax unified
 314              		.code	16
 315              		.thumb_func
 317              	MX_ADC_Init:
 318              	.LFB49:
 188:Core/Src/main.c **** 
 319              		.loc 1 188 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 8
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 00B5     		push	{lr}
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 4
 326              		.cfi_offset 14, -4
 327 0002 83B0     		sub	sp, sp, #12
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 16
 194:Core/Src/main.c **** 
 330              		.loc 1 194 3 view .LVU82
 194:Core/Src/main.c **** 
 331              		.loc 1 194 26 is_stmt 0 view .LVU83
 332 0004 0822     		movs	r2, #8
 333 0006 0021     		movs	r1, #0
 334 0008 6846     		mov	r0, sp
 335 000a FFF7FEFF 		bl	memset
 336              	.LVL11:
 202:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 337              		.loc 1 202 3 is_stmt 1 view .LVU84
 202:Core/Src/main.c ****   hadc.Init.OversamplingMode = DISABLE;
 338              		.loc 1 202 17 is_stmt 0 view .LVU85
 339 000e 2348     		ldr	r0, .L20
 340 0010 234B     		ldr	r3, .L20+4
 341 0012 0360     		str	r3, [r0]
 203:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 342              		.loc 1 203 3 is_stmt 1 view .LVU86
ARM GAS  /tmp/cc5sz7xa.s 			page 19


 203:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 343              		.loc 1 203 30 is_stmt 0 view .LVU87
 344 0014 0023     		movs	r3, #0
 345 0016 C363     		str	r3, [r0, #60]
 204:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 346              		.loc 1 204 3 is_stmt 1 view .LVU88
 204:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 347              		.loc 1 204 28 is_stmt 0 view .LVU89
 348 0018 8022     		movs	r2, #128
 349 001a D205     		lsls	r2, r2, #23
 350 001c 4260     		str	r2, [r0, #4]
 205:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 351              		.loc 1 205 3 is_stmt 1 view .LVU90
 205:Core/Src/main.c ****   hadc.Init.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 352              		.loc 1 205 24 is_stmt 0 view .LVU91
 353 001e 8360     		str	r3, [r0, #8]
 206:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 354              		.loc 1 206 3 is_stmt 1 view .LVU92
 206:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 355              		.loc 1 206 26 is_stmt 0 view .LVU93
 356 0020 8363     		str	r3, [r0, #56]
 207:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 357              		.loc 1 207 3 is_stmt 1 view .LVU94
 207:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 358              		.loc 1 207 26 is_stmt 0 view .LVU95
 359 0022 0122     		movs	r2, #1
 360 0024 0261     		str	r2, [r0, #16]
 208:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 361              		.loc 1 208 3 is_stmt 1 view .LVU96
 208:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 362              		.loc 1 208 23 is_stmt 0 view .LVU97
 363 0026 C360     		str	r3, [r0, #12]
 209:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 364              		.loc 1 209 3 is_stmt 1 view .LVU98
 209:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 365              		.loc 1 209 32 is_stmt 0 view .LVU99
 366 0028 1F32     		adds	r2, r2, #31
 367 002a 8354     		strb	r3, [r0, r2]
 210:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 368              		.loc 1 210 3 is_stmt 1 view .LVU100
 210:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 369              		.loc 1 210 35 is_stmt 0 view .LVU101
 370 002c 0132     		adds	r2, r2, #1
 371 002e 8354     		strb	r3, [r0, r2]
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 372              		.loc 1 211 3 is_stmt 1 view .LVU102
 211:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 373              		.loc 1 211 34 is_stmt 0 view .LVU103
 374 0030 8362     		str	r3, [r0, #40]
 212:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 375              		.loc 1 212 3 is_stmt 1 view .LVU104
 212:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
 376              		.loc 1 212 30 is_stmt 0 view .LVU105
 377 0032 C222     		movs	r2, #194
 378 0034 FF32     		adds	r2, r2, #255
 379 0036 4262     		str	r2, [r0, #36]
 213:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
ARM GAS  /tmp/cc5sz7xa.s 			page 20


 380              		.loc 1 213 3 is_stmt 1 view .LVU106
 213:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 381              		.loc 1 213 35 is_stmt 0 view .LVU107
 382 0038 963A     		subs	r2, r2, #150
 383 003a FF3A     		subs	r2, r2, #255
 384 003c 8354     		strb	r3, [r0, r2]
 214:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 385              		.loc 1 214 3 is_stmt 1 view .LVU108
 214:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 386              		.loc 1 214 26 is_stmt 0 view .LVU109
 387 003e 283A     		subs	r2, r2, #40
 388 0040 4261     		str	r2, [r0, #20]
 215:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 389              		.loc 1 215 3 is_stmt 1 view .LVU110
 215:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 390              		.loc 1 215 21 is_stmt 0 view .LVU111
 391 0042 0363     		str	r3, [r0, #48]
 216:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = DISABLE;
 392              		.loc 1 216 3 is_stmt 1 view .LVU112
 216:Core/Src/main.c ****   hadc.Init.LowPowerFrequencyMode = DISABLE;
 393              		.loc 1 216 30 is_stmt 0 view .LVU113
 394 0044 8361     		str	r3, [r0, #24]
 217:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 395              		.loc 1 217 3 is_stmt 1 view .LVU114
 217:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 396              		.loc 1 217 35 is_stmt 0 view .LVU115
 397 0046 4363     		str	r3, [r0, #52]
 218:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 398              		.loc 1 218 3 is_stmt 1 view .LVU116
 218:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
 399              		.loc 1 218 34 is_stmt 0 view .LVU117
 400 0048 C361     		str	r3, [r0, #28]
 219:Core/Src/main.c ****   {
 401              		.loc 1 219 3 is_stmt 1 view .LVU118
 219:Core/Src/main.c ****   {
 402              		.loc 1 219 7 is_stmt 0 view .LVU119
 403 004a FFF7FEFF 		bl	HAL_ADC_Init
 404              	.LVL12:
 219:Core/Src/main.c ****   {
 405              		.loc 1 219 6 view .LVU120
 406 004e 0028     		cmp	r0, #0
 407 0050 1CD1     		bne	.L16
 226:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 408              		.loc 1 226 3 is_stmt 1 view .LVU121
 226:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 409              		.loc 1 226 19 is_stmt 0 view .LVU122
 410 0052 144B     		ldr	r3, .L20+8
 411 0054 0093     		str	r3, [sp]
 227:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 412              		.loc 1 227 3 is_stmt 1 view .LVU123
 227:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 413              		.loc 1 227 16 is_stmt 0 view .LVU124
 414 0056 8023     		movs	r3, #128
 415 0058 5B01     		lsls	r3, r3, #5
 416 005a 0193     		str	r3, [sp, #4]
 228:Core/Src/main.c ****   {
 417              		.loc 1 228 3 is_stmt 1 view .LVU125
ARM GAS  /tmp/cc5sz7xa.s 			page 21


 228:Core/Src/main.c ****   {
 418              		.loc 1 228 7 is_stmt 0 view .LVU126
 419 005c 6946     		mov	r1, sp
 420 005e 0F48     		ldr	r0, .L20
 421 0060 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 422              	.LVL13:
 228:Core/Src/main.c ****   {
 423              		.loc 1 228 6 view .LVU127
 424 0064 0028     		cmp	r0, #0
 425 0066 13D1     		bne	.L17
 235:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 426              		.loc 1 235 3 is_stmt 1 view .LVU128
 235:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 427              		.loc 1 235 19 is_stmt 0 view .LVU129
 428 0068 0F4B     		ldr	r3, .L20+12
 429 006a 0093     		str	r3, [sp]
 236:Core/Src/main.c ****   {
 430              		.loc 1 236 3 is_stmt 1 view .LVU130
 236:Core/Src/main.c ****   {
 431              		.loc 1 236 7 is_stmt 0 view .LVU131
 432 006c 6946     		mov	r1, sp
 433 006e 0B48     		ldr	r0, .L20
 434 0070 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 435              	.LVL14:
 236:Core/Src/main.c ****   {
 436              		.loc 1 236 6 view .LVU132
 437 0074 0028     		cmp	r0, #0
 438 0076 0DD1     		bne	.L18
 243:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 439              		.loc 1 243 3 is_stmt 1 view .LVU133
 243:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 440              		.loc 1 243 19 is_stmt 0 view .LVU134
 441 0078 0C4B     		ldr	r3, .L20+16
 442 007a 0093     		str	r3, [sp]
 244:Core/Src/main.c ****   {
 443              		.loc 1 244 3 is_stmt 1 view .LVU135
 244:Core/Src/main.c ****   {
 444              		.loc 1 244 7 is_stmt 0 view .LVU136
 445 007c 6946     		mov	r1, sp
 446 007e 0748     		ldr	r0, .L20
 447 0080 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 448              	.LVL15:
 244:Core/Src/main.c ****   {
 449              		.loc 1 244 6 view .LVU137
 450 0084 0028     		cmp	r0, #0
 451 0086 07D1     		bne	.L19
 252:Core/Src/main.c **** 
 452              		.loc 1 252 1 view .LVU138
 453 0088 03B0     		add	sp, sp, #12
 454              		@ sp needed
 455 008a 00BD     		pop	{pc}
 456              	.L16:
 221:Core/Src/main.c ****   }
 457              		.loc 1 221 5 is_stmt 1 view .LVU139
 458 008c FFF7FEFF 		bl	Error_Handler
 459              	.LVL16:
 460              	.L17:
ARM GAS  /tmp/cc5sz7xa.s 			page 22


 230:Core/Src/main.c ****   }
 461              		.loc 1 230 5 view .LVU140
 462 0090 FFF7FEFF 		bl	Error_Handler
 463              	.LVL17:
 464              	.L18:
 238:Core/Src/main.c ****   }
 465              		.loc 1 238 5 view .LVU141
 466 0094 FFF7FEFF 		bl	Error_Handler
 467              	.LVL18:
 468              	.L19:
 246:Core/Src/main.c ****   }
 469              		.loc 1 246 5 view .LVU142
 470 0098 FFF7FEFF 		bl	Error_Handler
 471              	.LVL19:
 472              	.L21:
 473              		.align	2
 474              	.L20:
 475 009c 00000000 		.word	.LANCHOR0
 476 00a0 00240140 		.word	1073816576
 477 00a4 02000004 		.word	67108866
 478 00a8 04000008 		.word	134217732
 479 00ac 00000448 		.word	1208221696
 480              		.cfi_endproc
 481              	.LFE49:
 483              		.section	.text.MX_I2C1_Init,"ax",%progbits
 484              		.align	1
 485              		.syntax unified
 486              		.code	16
 487              		.thumb_func
 489              	MX_I2C1_Init:
 490              	.LFB50:
 260:Core/Src/main.c **** 
 491              		.loc 1 260 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 10B5     		push	{r4, lr}
 496              	.LCFI6:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 4, -8
 499              		.cfi_offset 14, -4
 269:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000090F;
 500              		.loc 1 269 3 view .LVU144
 269:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000090F;
 501              		.loc 1 269 18 is_stmt 0 view .LVU145
 502 0002 1248     		ldr	r0, .L29
 503 0004 124B     		ldr	r3, .L29+4
 504 0006 0360     		str	r3, [r0]
 270:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 505              		.loc 1 270 3 is_stmt 1 view .LVU146
 270:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 506              		.loc 1 270 21 is_stmt 0 view .LVU147
 507 0008 124B     		ldr	r3, .L29+8
 508 000a 4360     		str	r3, [r0, #4]
 271:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 509              		.loc 1 271 3 is_stmt 1 view .LVU148
 271:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
ARM GAS  /tmp/cc5sz7xa.s 			page 23


 510              		.loc 1 271 26 is_stmt 0 view .LVU149
 511 000c 0023     		movs	r3, #0
 512 000e 8360     		str	r3, [r0, #8]
 272:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 513              		.loc 1 272 3 is_stmt 1 view .LVU150
 272:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 514              		.loc 1 272 29 is_stmt 0 view .LVU151
 515 0010 0122     		movs	r2, #1
 516 0012 C260     		str	r2, [r0, #12]
 273:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 517              		.loc 1 273 3 is_stmt 1 view .LVU152
 273:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 518              		.loc 1 273 30 is_stmt 0 view .LVU153
 519 0014 0361     		str	r3, [r0, #16]
 274:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 520              		.loc 1 274 3 is_stmt 1 view .LVU154
 274:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 521              		.loc 1 274 26 is_stmt 0 view .LVU155
 522 0016 4361     		str	r3, [r0, #20]
 275:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 523              		.loc 1 275 3 is_stmt 1 view .LVU156
 275:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 524              		.loc 1 275 31 is_stmt 0 view .LVU157
 525 0018 8361     		str	r3, [r0, #24]
 276:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 526              		.loc 1 276 3 is_stmt 1 view .LVU158
 276:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 527              		.loc 1 276 30 is_stmt 0 view .LVU159
 528 001a C361     		str	r3, [r0, #28]
 277:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 529              		.loc 1 277 3 is_stmt 1 view .LVU160
 277:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 530              		.loc 1 277 28 is_stmt 0 view .LVU161
 531 001c 0362     		str	r3, [r0, #32]
 278:Core/Src/main.c ****   {
 532              		.loc 1 278 3 is_stmt 1 view .LVU162
 278:Core/Src/main.c ****   {
 533              		.loc 1 278 7 is_stmt 0 view .LVU163
 534 001e FFF7FEFF 		bl	HAL_I2C_Init
 535              	.LVL20:
 278:Core/Src/main.c ****   {
 536              		.loc 1 278 6 view .LVU164
 537 0022 0028     		cmp	r0, #0
 538 0024 0CD1     		bne	.L26
 285:Core/Src/main.c ****   {
 539              		.loc 1 285 3 is_stmt 1 view .LVU165
 285:Core/Src/main.c ****   {
 540              		.loc 1 285 7 is_stmt 0 view .LVU166
 541 0026 0021     		movs	r1, #0
 542 0028 0848     		ldr	r0, .L29
 543 002a FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 544              	.LVL21:
 285:Core/Src/main.c ****   {
 545              		.loc 1 285 6 view .LVU167
 546 002e 0028     		cmp	r0, #0
 547 0030 08D1     		bne	.L27
 292:Core/Src/main.c ****   {
ARM GAS  /tmp/cc5sz7xa.s 			page 24


 548              		.loc 1 292 3 is_stmt 1 view .LVU168
 292:Core/Src/main.c ****   {
 549              		.loc 1 292 7 is_stmt 0 view .LVU169
 550 0032 0021     		movs	r1, #0
 551 0034 0548     		ldr	r0, .L29
 552 0036 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 553              	.LVL22:
 292:Core/Src/main.c ****   {
 554              		.loc 1 292 6 view .LVU170
 555 003a 0028     		cmp	r0, #0
 556 003c 04D1     		bne	.L28
 300:Core/Src/main.c **** 
 557              		.loc 1 300 1 view .LVU171
 558              		@ sp needed
 559 003e 10BD     		pop	{r4, pc}
 560              	.L26:
 280:Core/Src/main.c ****   }
 561              		.loc 1 280 5 is_stmt 1 view .LVU172
 562 0040 FFF7FEFF 		bl	Error_Handler
 563              	.LVL23:
 564              	.L27:
 287:Core/Src/main.c ****   }
 565              		.loc 1 287 5 view .LVU173
 566 0044 FFF7FEFF 		bl	Error_Handler
 567              	.LVL24:
 568              	.L28:
 294:Core/Src/main.c ****   }
 569              		.loc 1 294 5 view .LVU174
 570 0048 FFF7FEFF 		bl	Error_Handler
 571              	.LVL25:
 572              	.L30:
 573              		.align	2
 574              	.L29:
 575 004c 00000000 		.word	.LANCHOR1
 576 0050 00540040 		.word	1073763328
 577 0054 0F090000 		.word	2319
 578              		.cfi_endproc
 579              	.LFE50:
 581              		.section	.text.MX_LPTIM1_Init,"ax",%progbits
 582              		.align	1
 583              		.syntax unified
 584              		.code	16
 585              		.thumb_func
 587              	MX_LPTIM1_Init:
 588              	.LFB51:
 308:Core/Src/main.c **** 
 589              		.loc 1 308 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 10B5     		push	{r4, lr}
 594              	.LCFI7:
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 4, -8
 597              		.cfi_offset 14, -4
 317:Core/Src/main.c ****   hlptim1.Init.Clock.Source = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 598              		.loc 1 317 3 view .LVU176
ARM GAS  /tmp/cc5sz7xa.s 			page 25


 317:Core/Src/main.c ****   hlptim1.Init.Clock.Source = LPTIM_CLOCKSOURCE_APBCLOCK_LPOSC;
 599              		.loc 1 317 20 is_stmt 0 view .LVU177
 600 0002 0A48     		ldr	r0, .L34
 601 0004 0A4B     		ldr	r3, .L34+4
 602 0006 0360     		str	r3, [r0]
 318:Core/Src/main.c ****   hlptim1.Init.Clock.Prescaler = LPTIM_PRESCALER_DIV128;
 603              		.loc 1 318 3 is_stmt 1 view .LVU178
 318:Core/Src/main.c ****   hlptim1.Init.Clock.Prescaler = LPTIM_PRESCALER_DIV128;
 604              		.loc 1 318 29 is_stmt 0 view .LVU179
 605 0008 0023     		movs	r3, #0
 606 000a 4360     		str	r3, [r0, #4]
 319:Core/Src/main.c ****   hlptim1.Init.Trigger.Source = LPTIM_TRIGSOURCE_SOFTWARE;
 607              		.loc 1 319 3 is_stmt 1 view .LVU180
 319:Core/Src/main.c ****   hlptim1.Init.Trigger.Source = LPTIM_TRIGSOURCE_SOFTWARE;
 608              		.loc 1 319 32 is_stmt 0 view .LVU181
 609 000c E022     		movs	r2, #224
 610 000e 1201     		lsls	r2, r2, #4
 611 0010 8260     		str	r2, [r0, #8]
 320:Core/Src/main.c ****   hlptim1.Init.OutputPolarity = LPTIM_OUTPUTPOLARITY_HIGH;
 612              		.loc 1 320 3 is_stmt 1 view .LVU182
 320:Core/Src/main.c ****   hlptim1.Init.OutputPolarity = LPTIM_OUTPUTPOLARITY_HIGH;
 613              		.loc 1 320 31 is_stmt 0 view .LVU183
 614 0012 084A     		ldr	r2, .L34+8
 615 0014 4261     		str	r2, [r0, #20]
 321:Core/Src/main.c ****   hlptim1.Init.UpdateMode = LPTIM_UPDATE_IMMEDIATE;
 616              		.loc 1 321 3 is_stmt 1 view .LVU184
 321:Core/Src/main.c ****   hlptim1.Init.UpdateMode = LPTIM_UPDATE_IMMEDIATE;
 617              		.loc 1 321 31 is_stmt 0 view .LVU185
 618 0016 0362     		str	r3, [r0, #32]
 322:Core/Src/main.c ****   hlptim1.Init.CounterSource = LPTIM_COUNTERSOURCE_INTERNAL;
 619              		.loc 1 322 3 is_stmt 1 view .LVU186
 322:Core/Src/main.c ****   hlptim1.Init.CounterSource = LPTIM_COUNTERSOURCE_INTERNAL;
 620              		.loc 1 322 27 is_stmt 0 view .LVU187
 621 0018 4362     		str	r3, [r0, #36]
 323:Core/Src/main.c ****   if (HAL_LPTIM_Init(&hlptim1) != HAL_OK)
 622              		.loc 1 323 3 is_stmt 1 view .LVU188
 323:Core/Src/main.c ****   if (HAL_LPTIM_Init(&hlptim1) != HAL_OK)
 623              		.loc 1 323 30 is_stmt 0 view .LVU189
 624 001a 8362     		str	r3, [r0, #40]
 324:Core/Src/main.c ****   {
 625              		.loc 1 324 3 is_stmt 1 view .LVU190
 324:Core/Src/main.c ****   {
 626              		.loc 1 324 7 is_stmt 0 view .LVU191
 627 001c FFF7FEFF 		bl	HAL_LPTIM_Init
 628              	.LVL26:
 324:Core/Src/main.c ****   {
 629              		.loc 1 324 6 view .LVU192
 630 0020 0028     		cmp	r0, #0
 631 0022 00D1     		bne	.L33
 332:Core/Src/main.c **** 
 632              		.loc 1 332 1 view .LVU193
 633              		@ sp needed
 634 0024 10BD     		pop	{r4, pc}
 635              	.L33:
 326:Core/Src/main.c ****   }
 636              		.loc 1 326 5 is_stmt 1 view .LVU194
 637 0026 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cc5sz7xa.s 			page 26


 638              	.LVL27:
 639              	.L35:
 640 002a C046     		.align	2
 641              	.L34:
 642 002c 00000000 		.word	.LANCHOR2
 643 0030 007C0040 		.word	1073773568
 644 0034 FFFF0000 		.word	65535
 645              		.cfi_endproc
 646              	.LFE51:
 648              		.section	.text.MX_LPUART1_UART_Init,"ax",%progbits
 649              		.align	1
 650              		.syntax unified
 651              		.code	16
 652              		.thumb_func
 654              	MX_LPUART1_UART_Init:
 655              	.LFB52:
 340:Core/Src/main.c **** 
 656              		.loc 1 340 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660 0000 10B5     		push	{r4, lr}
 661              	.LCFI8:
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 4, -8
 664              		.cfi_offset 14, -4
 349:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 209700;
 665              		.loc 1 349 3 view .LVU196
 349:Core/Src/main.c ****   hlpuart1.Init.BaudRate = 209700;
 666              		.loc 1 349 21 is_stmt 0 view .LVU197
 667 0002 0B48     		ldr	r0, .L39
 668 0004 0B4B     		ldr	r3, .L39+4
 669 0006 0360     		str	r3, [r0]
 350:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_7B;
 670              		.loc 1 350 3 is_stmt 1 view .LVU198
 350:Core/Src/main.c ****   hlpuart1.Init.WordLength = UART_WORDLENGTH_7B;
 671              		.loc 1 350 26 is_stmt 0 view .LVU199
 672 0008 0B4B     		ldr	r3, .L39+8
 673 000a 4360     		str	r3, [r0, #4]
 351:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 674              		.loc 1 351 3 is_stmt 1 view .LVU200
 351:Core/Src/main.c ****   hlpuart1.Init.StopBits = UART_STOPBITS_1;
 675              		.loc 1 351 28 is_stmt 0 view .LVU201
 676 000c 8023     		movs	r3, #128
 677 000e 5B05     		lsls	r3, r3, #21
 678 0010 8360     		str	r3, [r0, #8]
 352:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 679              		.loc 1 352 3 is_stmt 1 view .LVU202
 352:Core/Src/main.c ****   hlpuart1.Init.Parity = UART_PARITY_NONE;
 680              		.loc 1 352 26 is_stmt 0 view .LVU203
 681 0012 0023     		movs	r3, #0
 682 0014 C360     		str	r3, [r0, #12]
 353:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 683              		.loc 1 353 3 is_stmt 1 view .LVU204
 353:Core/Src/main.c ****   hlpuart1.Init.Mode = UART_MODE_TX_RX;
 684              		.loc 1 353 24 is_stmt 0 view .LVU205
 685 0016 0361     		str	r3, [r0, #16]
ARM GAS  /tmp/cc5sz7xa.s 			page 27


 354:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 686              		.loc 1 354 3 is_stmt 1 view .LVU206
 354:Core/Src/main.c ****   hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 687              		.loc 1 354 22 is_stmt 0 view .LVU207
 688 0018 0C22     		movs	r2, #12
 689 001a 4261     		str	r2, [r0, #20]
 355:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 690              		.loc 1 355 3 is_stmt 1 view .LVU208
 355:Core/Src/main.c ****   hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 691              		.loc 1 355 27 is_stmt 0 view .LVU209
 692 001c 8361     		str	r3, [r0, #24]
 356:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 693              		.loc 1 356 3 is_stmt 1 view .LVU210
 356:Core/Src/main.c ****   hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 694              		.loc 1 356 32 is_stmt 0 view .LVU211
 695 001e 0362     		str	r3, [r0, #32]
 357:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 696              		.loc 1 357 3 is_stmt 1 view .LVU212
 357:Core/Src/main.c ****   if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 697              		.loc 1 357 40 is_stmt 0 view .LVU213
 698 0020 4362     		str	r3, [r0, #36]
 358:Core/Src/main.c ****   {
 699              		.loc 1 358 3 is_stmt 1 view .LVU214
 358:Core/Src/main.c ****   {
 700              		.loc 1 358 7 is_stmt 0 view .LVU215
 701 0022 FFF7FEFF 		bl	HAL_UART_Init
 702              	.LVL28:
 358:Core/Src/main.c ****   {
 703              		.loc 1 358 6 view .LVU216
 704 0026 0028     		cmp	r0, #0
 705 0028 00D1     		bne	.L38
 366:Core/Src/main.c **** 
 706              		.loc 1 366 1 view .LVU217
 707              		@ sp needed
 708 002a 10BD     		pop	{r4, pc}
 709              	.L38:
 360:Core/Src/main.c ****   }
 710              		.loc 1 360 5 is_stmt 1 view .LVU218
 711 002c FFF7FEFF 		bl	Error_Handler
 712              	.LVL29:
 713              	.L40:
 714              		.align	2
 715              	.L39:
 716 0030 00000000 		.word	hlpuart1
 717 0034 00480040 		.word	1073760256
 718 0038 24330300 		.word	209700
 719              		.cfi_endproc
 720              	.LFE52:
 722              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 723              		.align	1
 724              		.syntax unified
 725              		.code	16
 726              		.thumb_func
 728              	MX_USART1_UART_Init:
 729              	.LFB53:
 374:Core/Src/main.c **** 
 730              		.loc 1 374 1 view -0
ARM GAS  /tmp/cc5sz7xa.s 			page 28


 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734 0000 10B5     		push	{r4, lr}
 735              	.LCFI9:
 736              		.cfi_def_cfa_offset 8
 737              		.cfi_offset 4, -8
 738              		.cfi_offset 14, -4
 383:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 739              		.loc 1 383 3 view .LVU220
 383:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 740              		.loc 1 383 19 is_stmt 0 view .LVU221
 741 0002 0B48     		ldr	r0, .L44
 742 0004 0B4B     		ldr	r3, .L44+4
 743 0006 0360     		str	r3, [r0]
 384:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 744              		.loc 1 384 3 is_stmt 1 view .LVU222
 384:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 745              		.loc 1 384 24 is_stmt 0 view .LVU223
 746 0008 E123     		movs	r3, #225
 747 000a 5B02     		lsls	r3, r3, #9
 748 000c 4360     		str	r3, [r0, #4]
 385:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 749              		.loc 1 385 3 is_stmt 1 view .LVU224
 385:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 750              		.loc 1 385 26 is_stmt 0 view .LVU225
 751 000e 0023     		movs	r3, #0
 752 0010 8360     		str	r3, [r0, #8]
 386:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 753              		.loc 1 386 3 is_stmt 1 view .LVU226
 386:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 754              		.loc 1 386 24 is_stmt 0 view .LVU227
 755 0012 C360     		str	r3, [r0, #12]
 387:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 756              		.loc 1 387 3 is_stmt 1 view .LVU228
 387:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 757              		.loc 1 387 22 is_stmt 0 view .LVU229
 758 0014 0361     		str	r3, [r0, #16]
 388:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 759              		.loc 1 388 3 is_stmt 1 view .LVU230
 388:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 760              		.loc 1 388 20 is_stmt 0 view .LVU231
 761 0016 0C22     		movs	r2, #12
 762 0018 4261     		str	r2, [r0, #20]
 389:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 763              		.loc 1 389 3 is_stmt 1 view .LVU232
 389:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 764              		.loc 1 389 25 is_stmt 0 view .LVU233
 765 001a 8361     		str	r3, [r0, #24]
 390:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 766              		.loc 1 390 3 is_stmt 1 view .LVU234
 390:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 767              		.loc 1 390 28 is_stmt 0 view .LVU235
 768 001c C361     		str	r3, [r0, #28]
 391:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 769              		.loc 1 391 3 is_stmt 1 view .LVU236
 391:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
ARM GAS  /tmp/cc5sz7xa.s 			page 29


 770              		.loc 1 391 30 is_stmt 0 view .LVU237
 771 001e 0362     		str	r3, [r0, #32]
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 772              		.loc 1 392 3 is_stmt 1 view .LVU238
 392:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 773              		.loc 1 392 38 is_stmt 0 view .LVU239
 774 0020 4362     		str	r3, [r0, #36]
 393:Core/Src/main.c ****   {
 775              		.loc 1 393 3 is_stmt 1 view .LVU240
 393:Core/Src/main.c ****   {
 776              		.loc 1 393 7 is_stmt 0 view .LVU241
 777 0022 FFF7FEFF 		bl	HAL_UART_Init
 778              	.LVL30:
 393:Core/Src/main.c ****   {
 779              		.loc 1 393 6 view .LVU242
 780 0026 0028     		cmp	r0, #0
 781 0028 00D1     		bne	.L43
 401:Core/Src/main.c **** 
 782              		.loc 1 401 1 view .LVU243
 783              		@ sp needed
 784 002a 10BD     		pop	{r4, pc}
 785              	.L43:
 395:Core/Src/main.c ****   }
 786              		.loc 1 395 5 is_stmt 1 view .LVU244
 787 002c FFF7FEFF 		bl	Error_Handler
 788              	.LVL31:
 789              	.L45:
 790              		.align	2
 791              	.L44:
 792 0030 00000000 		.word	huart1
 793 0034 00380140 		.word	1073821696
 794              		.cfi_endproc
 795              	.LFE53:
 797              		.section	.text.MX_RTC_Init,"ax",%progbits
 798              		.align	1
 799              		.syntax unified
 800              		.code	16
 801              		.thumb_func
 803              	MX_RTC_Init:
 804              	.LFB54:
 409:Core/Src/main.c **** 
 805              		.loc 1 409 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809 0000 10B5     		push	{r4, lr}
 810              	.LCFI10:
 811              		.cfi_def_cfa_offset 8
 812              		.cfi_offset 4, -8
 813              		.cfi_offset 14, -4
 421:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 814              		.loc 1 421 3 view .LVU246
 421:Core/Src/main.c ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 815              		.loc 1 421 17 is_stmt 0 view .LVU247
 816 0002 0F48     		ldr	r0, .L51
 817 0004 0F4B     		ldr	r3, .L51+4
 818 0006 0360     		str	r3, [r0]
ARM GAS  /tmp/cc5sz7xa.s 			page 30


 422:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 819              		.loc 1 422 3 is_stmt 1 view .LVU248
 422:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = 127;
 820              		.loc 1 422 24 is_stmt 0 view .LVU249
 821 0008 0023     		movs	r3, #0
 822 000a 4360     		str	r3, [r0, #4]
 423:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 823              		.loc 1 423 3 is_stmt 1 view .LVU250
 423:Core/Src/main.c ****   hrtc.Init.SynchPrediv = 255;
 824              		.loc 1 423 26 is_stmt 0 view .LVU251
 825 000c 7F22     		movs	r2, #127
 826 000e 8260     		str	r2, [r0, #8]
 424:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_WAKEUP;
 827              		.loc 1 424 3 is_stmt 1 view .LVU252
 424:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUT_WAKEUP;
 828              		.loc 1 424 25 is_stmt 0 view .LVU253
 829 0010 8032     		adds	r2, r2, #128
 830 0012 C260     		str	r2, [r0, #12]
 425:Core/Src/main.c ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 831              		.loc 1 425 3 is_stmt 1 view .LVU254
 425:Core/Src/main.c ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 832              		.loc 1 425 20 is_stmt 0 view .LVU255
 833 0014 C022     		movs	r2, #192
 834 0016 D203     		lsls	r2, r2, #15
 835 0018 0261     		str	r2, [r0, #16]
 426:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 836              		.loc 1 426 3 is_stmt 1 view .LVU256
 426:Core/Src/main.c ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 837              		.loc 1 426 25 is_stmt 0 view .LVU257
 838 001a 4361     		str	r3, [r0, #20]
 427:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 839              		.loc 1 427 3 is_stmt 1 view .LVU258
 427:Core/Src/main.c ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 840              		.loc 1 427 28 is_stmt 0 view .LVU259
 841 001c 8361     		str	r3, [r0, #24]
 428:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 842              		.loc 1 428 3 is_stmt 1 view .LVU260
 428:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 843              		.loc 1 428 24 is_stmt 0 view .LVU261
 844 001e C361     		str	r3, [r0, #28]
 429:Core/Src/main.c ****   {
 845              		.loc 1 429 3 is_stmt 1 view .LVU262
 429:Core/Src/main.c ****   {
 846              		.loc 1 429 7 is_stmt 0 view .LVU263
 847 0020 FFF7FEFF 		bl	HAL_RTC_Init
 848              	.LVL32:
 429:Core/Src/main.c ****   {
 849              		.loc 1 429 6 view .LVU264
 850 0024 0028     		cmp	r0, #0
 851 0026 07D1     		bne	.L49
 436:Core/Src/main.c ****   {
 852              		.loc 1 436 3 is_stmt 1 view .LVU265
 436:Core/Src/main.c ****   {
 853              		.loc 1 436 7 is_stmt 0 view .LVU266
 854 0028 0422     		movs	r2, #4
 855 002a 7821     		movs	r1, #120
 856 002c 0448     		ldr	r0, .L51
ARM GAS  /tmp/cc5sz7xa.s 			page 31


 857 002e FFF7FEFF 		bl	HAL_RTCEx_SetWakeUpTimer
 858              	.LVL33:
 436:Core/Src/main.c ****   {
 859              		.loc 1 436 6 view .LVU267
 860 0032 0028     		cmp	r0, #0
 861 0034 02D1     		bne	.L50
 444:Core/Src/main.c **** 
 862              		.loc 1 444 1 view .LVU268
 863              		@ sp needed
 864 0036 10BD     		pop	{r4, pc}
 865              	.L49:
 431:Core/Src/main.c ****   }
 866              		.loc 1 431 5 is_stmt 1 view .LVU269
 867 0038 FFF7FEFF 		bl	Error_Handler
 868              	.LVL34:
 869              	.L50:
 438:Core/Src/main.c ****   }
 870              		.loc 1 438 5 view .LVU270
 871 003c FFF7FEFF 		bl	Error_Handler
 872              	.LVL35:
 873              	.L52:
 874              		.align	2
 875              	.L51:
 876 0040 00000000 		.word	.LANCHOR3
 877 0044 00280040 		.word	1073752064
 878              		.cfi_endproc
 879              	.LFE54:
 881              		.section	.text.SystemClock_Config,"ax",%progbits
 882              		.align	1
 883              		.global	SystemClock_Config
 884              		.syntax unified
 885              		.code	16
 886              		.thumb_func
 888              	SystemClock_Config:
 889              	.LFB48:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 890              		.loc 1 129 1 view -0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 104
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894 0000 00B5     		push	{lr}
 895              	.LCFI11:
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 14, -4
 898 0002 9BB0     		sub	sp, sp, #108
 899              	.LCFI12:
 900              		.cfi_def_cfa_offset 112
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 901              		.loc 1 130 3 view .LVU272
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 902              		.loc 1 130 22 is_stmt 0 view .LVU273
 903 0004 3422     		movs	r2, #52
 904 0006 0021     		movs	r1, #0
 905 0008 0DA8     		add	r0, sp, #52
 906 000a FFF7FEFF 		bl	memset
 907              	.LVL36:
 131:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  /tmp/cc5sz7xa.s 			page 32


 908              		.loc 1 131 3 is_stmt 1 view .LVU274
 131:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 909              		.loc 1 131 22 is_stmt 0 view .LVU275
 910 000e 1422     		movs	r2, #20
 911 0010 0021     		movs	r1, #0
 912 0012 08A8     		add	r0, sp, #32
 913 0014 FFF7FEFF 		bl	memset
 914              	.LVL37:
 132:Core/Src/main.c **** 
 915              		.loc 1 132 3 is_stmt 1 view .LVU276
 132:Core/Src/main.c **** 
 916              		.loc 1 132 28 is_stmt 0 view .LVU277
 917 0018 1C22     		movs	r2, #28
 918 001a 0021     		movs	r1, #0
 919 001c 01A8     		add	r0, sp, #4
 920 001e FFF7FEFF 		bl	memset
 921              	.LVL38:
 136:Core/Src/main.c **** 
 922              		.loc 1 136 3 is_stmt 1 view .LVU278
 923 0022 2249     		ldr	r1, .L60
 924 0024 0B68     		ldr	r3, [r1]
 925 0026 224A     		ldr	r2, .L60+4
 926 0028 1A40     		ands	r2, r3
 927 002a 8023     		movs	r3, #128
 928 002c 1B01     		lsls	r3, r3, #4
 929 002e 1343     		orrs	r3, r2
 930 0030 0B60     		str	r3, [r1]
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 931              		.loc 1 141 3 view .LVU279
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 932              		.loc 1 141 36 is_stmt 0 view .LVU280
 933 0032 0A23     		movs	r3, #10
 934 0034 0D93     		str	r3, [sp, #52]
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 935              		.loc 1 142 3 is_stmt 1 view .LVU281
 142:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 936              		.loc 1 142 30 is_stmt 0 view .LVU282
 937 0036 093B     		subs	r3, r3, #9
 938 0038 1093     		str	r3, [sp, #64]
 143:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 939              		.loc 1 143 3 is_stmt 1 view .LVU283
 143:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 940              		.loc 1 143 41 is_stmt 0 view .LVU284
 941 003a 1022     		movs	r2, #16
 942 003c 1192     		str	r2, [sp, #68]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 943              		.loc 1 144 3 is_stmt 1 view .LVU285
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 944              		.loc 1 144 30 is_stmt 0 view .LVU286
 945 003e 1293     		str	r3, [sp, #72]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 946              		.loc 1 145 3 is_stmt 1 view .LVU287
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 947              		.loc 1 145 34 is_stmt 0 view .LVU288
 948 0040 0133     		adds	r3, r3, #1
 949 0042 1693     		str	r3, [sp, #88]
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_3;
ARM GAS  /tmp/cc5sz7xa.s 			page 33


 950              		.loc 1 146 3 is_stmt 1 view .LVU289
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_3;
 951              		.loc 1 146 35 is_stmt 0 view .LVU290
 952 0044 0023     		movs	r3, #0
 953 0046 1793     		str	r3, [sp, #92]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 954              		.loc 1 147 3 is_stmt 1 view .LVU291
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 955              		.loc 1 147 32 is_stmt 0 view .LVU292
 956 0048 1893     		str	r3, [sp, #96]
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 957              		.loc 1 148 3 is_stmt 1 view .LVU293
 148:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 958              		.loc 1 148 32 is_stmt 0 view .LVU294
 959 004a 8023     		movs	r3, #128
 960 004c DB03     		lsls	r3, r3, #15
 961 004e 1993     		str	r3, [sp, #100]
 149:Core/Src/main.c ****   {
 962              		.loc 1 149 3 is_stmt 1 view .LVU295
 149:Core/Src/main.c ****   {
 963              		.loc 1 149 7 is_stmt 0 view .LVU296
 964 0050 0DA8     		add	r0, sp, #52
 965 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 966              	.LVL39:
 149:Core/Src/main.c ****   {
 967              		.loc 1 149 6 view .LVU297
 968 0056 0028     		cmp	r0, #0
 969 0058 22D1     		bne	.L57
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 970              		.loc 1 156 3 is_stmt 1 view .LVU298
 156:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 971              		.loc 1 156 31 is_stmt 0 view .LVU299
 972 005a 0F23     		movs	r3, #15
 973 005c 0893     		str	r3, [sp, #32]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 974              		.loc 1 158 3 is_stmt 1 view .LVU300
 158:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 975              		.loc 1 158 34 is_stmt 0 view .LVU301
 976 005e 0C3B     		subs	r3, r3, #12
 977 0060 0993     		str	r3, [sp, #36]
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 978              		.loc 1 159 3 is_stmt 1 view .LVU302
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV8;
 979              		.loc 1 159 35 is_stmt 0 view .LVU303
 980 0062 0023     		movs	r3, #0
 981 0064 0A93     		str	r3, [sp, #40]
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 982              		.loc 1 160 3 is_stmt 1 view .LVU304
 160:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 983              		.loc 1 160 36 is_stmt 0 view .LVU305
 984 0066 C022     		movs	r2, #192
 985 0068 D200     		lsls	r2, r2, #3
 986 006a 0B92     		str	r2, [sp, #44]
 161:Core/Src/main.c **** 
 987              		.loc 1 161 3 is_stmt 1 view .LVU306
 161:Core/Src/main.c **** 
 988              		.loc 1 161 36 is_stmt 0 view .LVU307
ARM GAS  /tmp/cc5sz7xa.s 			page 34


 989 006c 0C93     		str	r3, [sp, #48]
 163:Core/Src/main.c ****   {
 990              		.loc 1 163 3 is_stmt 1 view .LVU308
 163:Core/Src/main.c ****   {
 991              		.loc 1 163 7 is_stmt 0 view .LVU309
 992 006e 0121     		movs	r1, #1
 993 0070 08A8     		add	r0, sp, #32
 994 0072 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 995              	.LVL40:
 163:Core/Src/main.c ****   {
 996              		.loc 1 163 6 view .LVU310
 997 0076 0028     		cmp	r0, #0
 998 0078 14D1     		bne	.L58
 167:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_RTC
 999              		.loc 1 167 3 is_stmt 1 view .LVU311
 167:Core/Src/main.c ****                               |RCC_PERIPHCLK_I2C1|RCC_PERIPHCLK_RTC
 1000              		.loc 1 167 38 is_stmt 0 view .LVU312
 1001 007a AD23     		movs	r3, #173
 1002 007c 0193     		str	r3, [sp, #4]
 170:Core/Src/main.c ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 1003              		.loc 1 170 3 is_stmt 1 view .LVU313
 170:Core/Src/main.c ****   PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 1004              		.loc 1 170 38 is_stmt 0 view .LVU314
 1005 007e 0023     		movs	r3, #0
 1006 0080 0393     		str	r3, [sp, #12]
 171:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 1007              		.loc 1 171 3 is_stmt 1 view .LVU315
 171:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 1008              		.loc 1 171 39 is_stmt 0 view .LVU316
 1009 0082 0593     		str	r3, [sp, #20]
 172:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1010              		.loc 1 172 3 is_stmt 1 view .LVU317
 172:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 1011              		.loc 1 172 36 is_stmt 0 view .LVU318
 1012 0084 0693     		str	r3, [sp, #24]
 173:Core/Src/main.c ****   PeriphClkInit.LptimClockSelection = RCC_LPTIM1CLKSOURCE_LSI;
 1013              		.loc 1 173 3 is_stmt 1 view .LVU319
 173:Core/Src/main.c ****   PeriphClkInit.LptimClockSelection = RCC_LPTIM1CLKSOURCE_LSI;
 1014              		.loc 1 173 35 is_stmt 0 view .LVU320
 1015 0086 8023     		movs	r3, #128
 1016 0088 9B02     		lsls	r3, r3, #10
 1017 008a 0293     		str	r3, [sp, #8]
 174:Core/Src/main.c **** 
 1018              		.loc 1 174 3 is_stmt 1 view .LVU321
 174:Core/Src/main.c **** 
 1019              		.loc 1 174 37 is_stmt 0 view .LVU322
 1020 008c 8023     		movs	r3, #128
 1021 008e DB02     		lsls	r3, r3, #11
 1022 0090 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   {
 1023              		.loc 1 176 3 is_stmt 1 view .LVU323
 176:Core/Src/main.c ****   {
 1024              		.loc 1 176 7 is_stmt 0 view .LVU324
 1025 0092 01A8     		add	r0, sp, #4
 1026 0094 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1027              	.LVL41:
 176:Core/Src/main.c ****   {
ARM GAS  /tmp/cc5sz7xa.s 			page 35


 1028              		.loc 1 176 6 view .LVU325
 1029 0098 0028     		cmp	r0, #0
 1030 009a 05D1     		bne	.L59
 180:Core/Src/main.c **** 
 1031              		.loc 1 180 1 view .LVU326
 1032 009c 1BB0     		add	sp, sp, #108
 1033              		@ sp needed
 1034 009e 00BD     		pop	{pc}
 1035              	.L57:
 151:Core/Src/main.c ****   }
 1036              		.loc 1 151 5 is_stmt 1 view .LVU327
 1037 00a0 FFF7FEFF 		bl	Error_Handler
 1038              	.LVL42:
 1039              	.L58:
 165:Core/Src/main.c ****   }
 1040              		.loc 1 165 5 view .LVU328
 1041 00a4 FFF7FEFF 		bl	Error_Handler
 1042              	.LVL43:
 1043              	.L59:
 178:Core/Src/main.c ****   }
 1044              		.loc 1 178 5 view .LVU329
 1045 00a8 FFF7FEFF 		bl	Error_Handler
 1046              	.LVL44:
 1047              	.L61:
 1048              		.align	2
 1049              	.L60:
 1050 00ac 00700040 		.word	1073770496
 1051 00b0 FFE7FFFF 		.word	-6145
 1052              		.cfi_endproc
 1053              	.LFE48:
 1055              		.section	.text.main,"ax",%progbits
 1056              		.align	1
 1057              		.global	main
 1058              		.syntax unified
 1059              		.code	16
 1060              		.thumb_func
 1062              	main:
 1063              	.LFB47:
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1064              		.loc 1 80 1 view -0
 1065              		.cfi_startproc
 1066              		@ Volatile: function does not return.
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 1069 0000 10B5     		push	{r4, lr}
 1070              	.LCFI13:
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 4, -8
 1073              		.cfi_offset 14, -4
  88:Core/Src/main.c **** 
 1074              		.loc 1 88 3 view .LVU331
 1075 0002 FFF7FEFF 		bl	HAL_Init
 1076              	.LVL45:
  95:Core/Src/main.c **** 
 1077              		.loc 1 95 3 view .LVU332
 1078 0006 FFF7FEFF 		bl	SystemClock_Config
 1079              	.LVL46:
ARM GAS  /tmp/cc5sz7xa.s 			page 36


 102:Core/Src/main.c ****   MX_ADC_Init();
 1080              		.loc 1 102 3 view .LVU333
 1081 000a FFF7FEFF 		bl	MX_GPIO_Init
 1082              	.LVL47:
 103:Core/Src/main.c ****   MX_I2C1_Init();
 1083              		.loc 1 103 3 view .LVU334
 1084 000e FFF7FEFF 		bl	MX_ADC_Init
 1085              	.LVL48:
 104:Core/Src/main.c ****   MX_LPTIM1_Init();
 1086              		.loc 1 104 3 view .LVU335
 1087 0012 FFF7FEFF 		bl	MX_I2C1_Init
 1088              	.LVL49:
 105:Core/Src/main.c ****   MX_LPUART1_UART_Init();
 1089              		.loc 1 105 3 view .LVU336
 1090 0016 FFF7FEFF 		bl	MX_LPTIM1_Init
 1091              	.LVL50:
 106:Core/Src/main.c ****   MX_USART1_UART_Init();
 1092              		.loc 1 106 3 view .LVU337
 1093 001a FFF7FEFF 		bl	MX_LPUART1_UART_Init
 1094              	.LVL51:
 107:Core/Src/main.c ****   MX_RTC_Init();
 1095              		.loc 1 107 3 view .LVU338
 1096 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 1097              	.LVL52:
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1098              		.loc 1 108 3 view .LVU339
 1099 0022 FFF7FEFF 		bl	MX_RTC_Init
 1100              	.LVL53:
 1101              	.L63:
 115:Core/Src/main.c ****   {
 1102              		.loc 1 115 3 discriminator 1 view .LVU340
 120:Core/Src/main.c ****   /* USER CODE END 3 */
 1103              		.loc 1 120 3 discriminator 1 view .LVU341
 115:Core/Src/main.c ****   {
 1104              		.loc 1 115 9 discriminator 1 view .LVU342
 1105 0026 FEE7     		b	.L63
 1106              		.cfi_endproc
 1107              	.LFE47:
 1109              		.global	hrtc
 1110              		.global	huart1
 1111              		.global	hlpuart1
 1112              		.global	hlptim1
 1113              		.global	hi2c1
 1114              		.global	hadc
 1115              		.section	.bss.hadc,"aw",%nobits
 1116              		.align	2
 1117              		.set	.LANCHOR0,. + 0
 1120              	hadc:
 1121 0000 00000000 		.space	92
 1121      00000000 
 1121      00000000 
 1121      00000000 
 1121      00000000 
 1122              		.section	.bss.hi2c1,"aw",%nobits
 1123              		.align	2
 1124              		.set	.LANCHOR1,. + 0
 1127              	hi2c1:
ARM GAS  /tmp/cc5sz7xa.s 			page 37


 1128 0000 00000000 		.space	76
 1128      00000000 
 1128      00000000 
 1128      00000000 
 1128      00000000 
 1129              		.section	.bss.hlptim1,"aw",%nobits
 1130              		.align	2
 1131              		.set	.LANCHOR2,. + 0
 1134              	hlptim1:
 1135 0000 00000000 		.space	48
 1135      00000000 
 1135      00000000 
 1135      00000000 
 1135      00000000 
 1136              		.section	.bss.hlpuart1,"aw",%nobits
 1137              		.align	2
 1140              	hlpuart1:
 1141 0000 00000000 		.space	132
 1141      00000000 
 1141      00000000 
 1141      00000000 
 1141      00000000 
 1142              		.section	.bss.hrtc,"aw",%nobits
 1143              		.align	2
 1144              		.set	.LANCHOR3,. + 0
 1147              	hrtc:
 1148 0000 00000000 		.space	36
 1148      00000000 
 1148      00000000 
 1148      00000000 
 1148      00000000 
 1149              		.section	.bss.huart1,"aw",%nobits
 1150              		.align	2
 1153              	huart1:
 1154 0000 00000000 		.space	132
 1154      00000000 
 1154      00000000 
 1154      00000000 
 1154      00000000 
 1155              		.text
 1156              	.Letext0:
 1157              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 1158              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 1159              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l051xx.h"
 1160              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 1161              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 1162              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 1163              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 1164              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 1165              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 1166              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_adc.h"
 1167              		.file 13 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c.h"
 1168              		.file 14 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_lptim.h"
 1169              		.file 15 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc.h"
 1170              		.file 16 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_tim.h"
 1171              		.file 17 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 1172              		.file 18 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  /tmp/cc5sz7xa.s 			page 38


 1173              		.file 19 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rtc_ex.h"
 1174              		.file 20 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_i2c_ex.h"
 1175              		.file 21 "<built-in>"
ARM GAS  /tmp/cc5sz7xa.s 			page 39


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc5sz7xa.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc5sz7xa.s:218    .text.MX_GPIO_Init:00000000000000c8 $d
     /tmp/cc5sz7xa.s:228    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/cc5sz7xa.s:234    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc5sz7xa.s:269    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
     /tmp/cc5sz7xa.s:274    .text.Error_Handler:0000000000000000 $t
     /tmp/cc5sz7xa.s:280    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc5sz7xa.s:312    .text.MX_ADC_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:317    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/cc5sz7xa.s:475    .text.MX_ADC_Init:000000000000009c $d
     /tmp/cc5sz7xa.s:484    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:489    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/cc5sz7xa.s:575    .text.MX_I2C1_Init:000000000000004c $d
     /tmp/cc5sz7xa.s:582    .text.MX_LPTIM1_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:587    .text.MX_LPTIM1_Init:0000000000000000 MX_LPTIM1_Init
     /tmp/cc5sz7xa.s:642    .text.MX_LPTIM1_Init:000000000000002c $d
     /tmp/cc5sz7xa.s:649    .text.MX_LPUART1_UART_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:654    .text.MX_LPUART1_UART_Init:0000000000000000 MX_LPUART1_UART_Init
     /tmp/cc5sz7xa.s:716    .text.MX_LPUART1_UART_Init:0000000000000030 $d
     /tmp/cc5sz7xa.s:1140   .bss.hlpuart1:0000000000000000 hlpuart1
     /tmp/cc5sz7xa.s:723    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:728    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/cc5sz7xa.s:792    .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/cc5sz7xa.s:1153   .bss.huart1:0000000000000000 huart1
     /tmp/cc5sz7xa.s:798    .text.MX_RTC_Init:0000000000000000 $t
     /tmp/cc5sz7xa.s:803    .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/cc5sz7xa.s:876    .text.MX_RTC_Init:0000000000000040 $d
     /tmp/cc5sz7xa.s:882    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc5sz7xa.s:888    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc5sz7xa.s:1050   .text.SystemClock_Config:00000000000000ac $d
     /tmp/cc5sz7xa.s:1056   .text.main:0000000000000000 $t
     /tmp/cc5sz7xa.s:1062   .text.main:0000000000000000 main
     /tmp/cc5sz7xa.s:1147   .bss.hrtc:0000000000000000 hrtc
     /tmp/cc5sz7xa.s:1134   .bss.hlptim1:0000000000000000 hlptim1
     /tmp/cc5sz7xa.s:1127   .bss.hi2c1:0000000000000000 hi2c1
     /tmp/cc5sz7xa.s:1120   .bss.hadc:0000000000000000 hadc
     /tmp/cc5sz7xa.s:1116   .bss.hadc:0000000000000000 $d
     /tmp/cc5sz7xa.s:1123   .bss.hi2c1:0000000000000000 $d
     /tmp/cc5sz7xa.s:1130   .bss.hlptim1:0000000000000000 $d
     /tmp/cc5sz7xa.s:1137   .bss.hlpuart1:0000000000000000 $d
     /tmp/cc5sz7xa.s:1143   .bss.hrtc:0000000000000000 $d
     /tmp/cc5sz7xa.s:1150   .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_IncTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_LPTIM_Init
ARM GAS  /tmp/cc5sz7xa.s 			page 40


HAL_UART_Init
HAL_RTC_Init
HAL_RTCEx_SetWakeUpTimer
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
