ARM GAS  /tmp/ccPYbq7S.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"tasks.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB10:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.2.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2019 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  /tmp/ccPYbq7S.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
ARM GAS  /tmp/ccPYbq7S.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
ARM GAS  /tmp/ccPYbq7S.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
ARM GAS  /tmp/ccPYbq7S.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
ARM GAS  /tmp/ccPYbq7S.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = { 0 };/*< Prioritised rea
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = { 0 };						/*< Delayed tasks. */
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = { 0 };						/*< Delayed tasks (two lists are used
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;				/*< Points to the delayed tas
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;		/*< Points to the delay
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = { 0 };						/*< Tasks that have been readied whil
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xTasksWaitingTermination = { 0 };				/*< Tasks that have been deleted
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = { 0 };					/*< Tasks that are currently suspend
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
ARM GAS  /tmp/ccPYbq7S.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
ARM GAS  /tmp/ccPYbq7S.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
ARM GAS  /tmp/ccPYbq7S.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
ARM GAS  /tmp/ccPYbq7S.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
ARM GAS  /tmp/ccPYbq7S.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccPYbq7S.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
ARM GAS  /tmp/ccPYbq7S.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
ARM GAS  /tmp/ccPYbq7S.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccPYbq7S.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/ccPYbq7S.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
ARM GAS  /tmp/ccPYbq7S.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
ARM GAS  /tmp/ccPYbq7S.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
ARM GAS  /tmp/ccPYbq7S.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
ARM GAS  /tmp/ccPYbq7S.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
ARM GAS  /tmp/ccPYbq7S.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
ARM GAS  /tmp/ccPYbq7S.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
ARM GAS  /tmp/ccPYbq7S.s 			page 31


1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
ARM GAS  /tmp/ccPYbq7S.s 			page 32


1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1798 2 view -0
ARM GAS  /tmp/ccPYbq7S.s 			page 33


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1799 2 view .LVU1
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  33              		.loc 1 1800 2 view .LVU2
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1806 3 view .LVU3
  35 0000 0028     		cmp	r0, #0
  36 0002 05D0     		beq	.L8
  37              		.loc 1 1806 24 discriminator 2 view .LVU4
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  38              		.loc 1 1809 3 discriminator 2 view .LVU5
  39              		.loc 1 1809 5 is_stmt 0 discriminator 2 view .LVU6
  40 0004 094B     		ldr	r3, .L10
  41 0006 4269     		ldr	r2, [r0, #20]
  42 0008 9A42     		cmp	r2, r3
  43 000a 03D0     		beq	.L9
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  44              		.loc 1 1799 13 view .LVU7
  45 000c 0020     		movs	r0, #0
  46              	.LVL1:
  47              	.L1:
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 34


1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  48              		.loc 1 1836 2 view .LVU8
  49              		@ sp needed
  50 000e 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1806 3 is_stmt 1 discriminator 1 view .LVU9
  54              		.syntax divided
  55              	@ 1806 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
  56 0010 72B6     		 cpsid i 
  57              	@ 0 "" 2
  58              		.thumb
  59              		.syntax unified
  60              	.L3:
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  61              		.loc 1 1806 3 discriminator 1 view .LVU10
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  62              		.loc 1 1806 3 discriminator 1 view .LVU11
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  63              		.loc 1 1806 3 discriminator 1 view .LVU12
  64 0012 FEE7     		b	.L3
  65              	.L9:
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  66              		.loc 1 1812 4 view .LVU13
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  67              		.loc 1 1812 8 is_stmt 0 view .LVU14
  68 0014 836A     		ldr	r3, [r0, #40]
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  69              		.loc 1 1812 6 view .LVU15
  70 0016 064A     		ldr	r2, .L10+4
  71 0018 9342     		cmp	r3, r2
  72 001a 03D0     		beq	.L6
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
  73              		.loc 1 1816 5 is_stmt 1 view .LVU16
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
  74              		.loc 1 1816 7 is_stmt 0 view .LVU17
  75 001c 002B     		cmp	r3, #0
  76 001e 03D0     		beq	.L7
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  77              		.loc 1 1799 13 view .LVU18
  78 0020 0020     		movs	r0, #0
  79              	.LVL3:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  80              		.loc 1 1799 13 view .LVU19
  81 0022 F4E7     		b	.L1
  82              	.LVL4:
  83              	.L6:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  84              		.loc 1 1799 13 view .LVU20
  85 0024 0020     		movs	r0, #0
  86              	.LVL5:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  87              		.loc 1 1799 13 view .LVU21
  88 0026 F2E7     		b	.L1
  89              	.LVL6:
ARM GAS  /tmp/ccPYbq7S.s 			page 35


  90              	.L7:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
  91              		.loc 1 1818 14 view .LVU22
  92 0028 0120     		movs	r0, #1
  93              	.LVL7:
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
  94              		.loc 1 1832 28 is_stmt 1 view .LVU23
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  95              		.loc 1 1835 3 view .LVU24
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  96              		.loc 1 1835 10 is_stmt 0 view .LVU25
  97 002a F0E7     		b	.L1
  98              	.L11:
  99              		.align	2
 100              	.L10:
 101 002c 00000000 		.word	.LANCHOR0
 102 0030 00000000 		.word	.LANCHOR1
 103              		.cfi_endproc
 104              	.LFE10:
 106              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 107              		.align	1
 108              		.syntax unified
 109              		.code	16
 110              		.thumb_func
 112              	prvResetNextTaskUnblockTime:
 113              	.LFB35:
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccPYbq7S.s 			page 36


1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 37


1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
ARM GAS  /tmp/ccPYbq7S.s 			page 38


1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
ARM GAS  /tmp/ccPYbq7S.s 			page 39


2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
ARM GAS  /tmp/ccPYbq7S.s 			page 40


2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
ARM GAS  /tmp/ccPYbq7S.s 			page 41


2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
ARM GAS  /tmp/ccPYbq7S.s 			page 42


2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccPYbq7S.s 			page 43


2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccPYbq7S.s 			page 44


2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccPYbq7S.s 			page 45


2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccPYbq7S.s 			page 46


2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
ARM GAS  /tmp/ccPYbq7S.s 			page 47


2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
ARM GAS  /tmp/ccPYbq7S.s 			page 48


2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
ARM GAS  /tmp/ccPYbq7S.s 			page 49


2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
ARM GAS  /tmp/ccPYbq7S.s 			page 50


2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccPYbq7S.s 			page 51


2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
ARM GAS  /tmp/ccPYbq7S.s 			page 52


2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 53


2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccPYbq7S.s 			page 54


2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccPYbq7S.s 			page 55


2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
ARM GAS  /tmp/ccPYbq7S.s 			page 56


3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccPYbq7S.s 			page 57


3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
ARM GAS  /tmp/ccPYbq7S.s 			page 58


3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 59


3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
ARM GAS  /tmp/ccPYbq7S.s 			page 60


3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
ARM GAS  /tmp/ccPYbq7S.s 			page 61


3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
ARM GAS  /tmp/ccPYbq7S.s 			page 62


3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
ARM GAS  /tmp/ccPYbq7S.s 			page 63


3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccPYbq7S.s 			page 64


3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 65


3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 66


3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
ARM GAS  /tmp/ccPYbq7S.s 			page 67


3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccPYbq7S.s 			page 68


3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
ARM GAS  /tmp/ccPYbq7S.s 			page 69


3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 70


3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
ARM GAS  /tmp/ccPYbq7S.s 			page 71


3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 114              		.loc 1 3881 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 119              		.loc 1 3882 1 view .LVU27
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 120              		.loc 1 3884 2 view .LVU28
 121              		.loc 1 3884 6 is_stmt 0 view .LVU29
 122 0000 084B     		ldr	r3, .L15
 123 0002 1B68     		ldr	r3, [r3]
 124 0004 1B68     		ldr	r3, [r3]
 125              		.loc 1 3884 4 view .LVU30
 126 0006 002B     		cmp	r3, #0
 127 0008 04D1     		bne	.L13
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 128              		.loc 1 3890 3 is_stmt 1 view .LVU31
 129              		.loc 1 3890 24 is_stmt 0 view .LVU32
 130 000a 074B     		ldr	r3, .L15+4
 131 000c 0122     		movs	r2, #1
 132 000e 5242     		rsbs	r2, r2, #0
 133 0010 1A60     		str	r2, [r3]
 134              	.L12:
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
ARM GAS  /tmp/ccPYbq7S.s 			page 72


3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 135              		.loc 1 3901 1 view .LVU33
 136              		@ sp needed
 137 0012 7047     		bx	lr
 138              	.L13:
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 139              		.loc 1 3898 3 is_stmt 1 view .LVU34
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 140              		.loc 1 3898 15 is_stmt 0 view .LVU35
 141 0014 034B     		ldr	r3, .L15
 142 0016 1B68     		ldr	r3, [r3]
 143 0018 DB68     		ldr	r3, [r3, #12]
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 144              		.loc 1 3898 13 view .LVU36
 145 001a DB68     		ldr	r3, [r3, #12]
 146              	.LVL8:
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 147              		.loc 1 3899 3 is_stmt 1 view .LVU37
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 148              		.loc 1 3899 26 is_stmt 0 view .LVU38
 149 001c 5A68     		ldr	r2, [r3, #4]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 150              		.loc 1 3899 24 view .LVU39
 151 001e 024B     		ldr	r3, .L15+4
 152              	.LVL9:
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 153              		.loc 1 3899 24 view .LVU40
 154 0020 1A60     		str	r2, [r3]
 155              		.loc 1 3901 1 view .LVU41
 156 0022 F6E7     		b	.L12
 157              	.L16:
 158              		.align	2
 159              	.L15:
 160 0024 00000000 		.word	.LANCHOR2
 161 0028 00000000 		.word	.LANCHOR3
 162              		.cfi_endproc
 163              	.LFE35:
 165              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 171              	prvInitialiseNewTask:
 172              	.LVL10:
 173              	.LFB2:
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 174              		.loc 1 829 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 16, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 178              		.loc 1 829 1 is_stmt 0 view .LVU43
 179 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 180              	.LCFI0:
 181              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccPYbq7S.s 			page 73


 182              		.cfi_offset 4, -20
 183              		.cfi_offset 5, -16
 184              		.cfi_offset 6, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 DE46     		mov	lr, fp
 188 0004 5746     		mov	r7, r10
 189 0006 4E46     		mov	r6, r9
 190 0008 C0B5     		push	{r6, r7, lr}
 191              	.LCFI1:
 192              		.cfi_def_cfa_offset 32
 193              		.cfi_offset 9, -32
 194              		.cfi_offset 10, -28
 195              		.cfi_offset 11, -24
 196 000a 8246     		mov	r10, r0
 197 000c 9B46     		mov	fp, r3
 198 000e 089E     		ldr	r6, [sp, #32]
 199 0010 0A9F     		ldr	r7, [sp, #40]
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 200              		.loc 1 830 1 is_stmt 1 view .LVU44
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201              		.loc 1 831 1 view .LVU45
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 202              		.loc 1 861 3 view .LVU46
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 203              		.loc 1 861 38 is_stmt 0 view .LVU47
 204 0012 224B     		ldr	r3, .L29
 205              	.LVL11:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 206              		.loc 1 861 38 view .LVU48
 207 0014 9C46     		mov	ip, r3
 208 0016 6244     		add	r2, r2, ip
 209              	.LVL12:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 210              		.loc 1 861 38 view .LVU49
 211 0018 9200     		lsls	r2, r2, #2
 212              	.LVL13:
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 213              		.loc 1 861 16 view .LVU50
 214 001a 3B6B     		ldr	r3, [r7, #48]
 215 001c 9C46     		mov	ip, r3
 216 001e 6244     		add	r2, r2, ip
 217              	.LVL14:
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 862 3 is_stmt 1 view .LVU51
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 219              		.loc 1 862 81 is_stmt 0 view .LVU52
 220 0020 0723     		movs	r3, #7
 221 0022 9A43     		bics	r2, r3
 222              	.LVL15:
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 223              		.loc 1 862 81 view .LVU53
 224 0024 9146     		mov	r9, r2
 225              	.LVL16:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 226              		.loc 1 865 3 is_stmt 1 view .LVU54
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 74


 227              		.loc 1 865 124 view .LVU55
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 228              		.loc 1 889 2 view .LVU56
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 229              		.loc 1 889 4 is_stmt 0 view .LVU57
 230 0026 0029     		cmp	r1, #0
 231 0028 33D0     		beq	.L28
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 232              		.loc 1 891 10 view .LVU58
 233 002a 0024     		movs	r4, #0
 234              	.L18:
 235              	.LVL17:
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 236              		.loc 1 891 31 is_stmt 1 discriminator 1 view .LVU59
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 237              		.loc 1 891 3 is_stmt 0 discriminator 1 view .LVU60
 238 002c 0F2C     		cmp	r4, #15
 239 002e 08D8     		bhi	.L20
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 240              		.loc 1 893 4 is_stmt 1 view .LVU61
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 241              		.loc 1 893 38 is_stmt 0 view .LVU62
 242 0030 0B5D     		ldrb	r3, [r1, r4]
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 243              		.loc 1 893 30 view .LVU63
 244 0032 3D19     		adds	r5, r7, r4
 245 0034 3435     		adds	r5, r5, #52
 246 0036 2B70     		strb	r3, [r5]
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 247              		.loc 1 898 4 is_stmt 1 view .LVU64
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 248              		.loc 1 898 14 is_stmt 0 view .LVU65
 249 0038 0B5D     		ldrb	r3, [r1, r4]
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 250              		.loc 1 898 6 view .LVU66
 251 003a 002B     		cmp	r3, #0
 252 003c 01D0     		beq	.L20
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 253              		.loc 1 904 29 is_stmt 1 discriminator 2 view .LVU67
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 254              		.loc 1 891 76 discriminator 2 view .LVU68
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 255              		.loc 1 891 77 is_stmt 0 discriminator 2 view .LVU69
 256 003e 0134     		adds	r4, r4, #1
 257              	.LVL18:
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 258              		.loc 1 891 77 discriminator 2 view .LVU70
 259 0040 F4E7     		b	.L18
 260              	.L20:
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 261              		.loc 1 910 3 is_stmt 1 view .LVU71
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 262              		.loc 1 910 55 is_stmt 0 view .LVU72
 263 0042 4323     		movs	r3, #67
 264 0044 0022     		movs	r2, #0
 265              	.LVL19:
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccPYbq7S.s 			page 75


 266              		.loc 1 910 55 view .LVU73
 267 0046 FA54     		strb	r2, [r7, r3]
 268              	.LVL20:
 269              	.L22:
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 270              		.loc 1 921 2 is_stmt 1 view .LVU74
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 271              		.loc 1 921 4 is_stmt 0 view .LVU75
 272 0048 062E     		cmp	r6, #6
 273 004a 00D9     		bls	.L23
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 274              		.loc 1 923 14 view .LVU76
 275 004c 0626     		movs	r6, #6
 276              	.L23:
 277              	.LVL21:
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 278              		.loc 1 927 27 is_stmt 1 view .LVU77
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 279              		.loc 1 930 2 view .LVU78
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280              		.loc 1 930 23 is_stmt 0 view .LVU79
 281 004e FE62     		str	r6, [r7, #44]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 282              		.loc 1 933 3 is_stmt 1 view .LVU80
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 283              		.loc 1 933 28 is_stmt 0 view .LVU81
 284 0050 7E64     		str	r6, [r7, #68]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 285              		.loc 1 934 3 is_stmt 1 view .LVU82
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 286              		.loc 1 934 27 is_stmt 0 view .LVU83
 287 0052 0024     		movs	r4, #0
 288 0054 BC64     		str	r4, [r7, #72]
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 289              		.loc 1 938 2 is_stmt 1 view .LVU84
 290 0056 381D     		adds	r0, r7, #4
 291              	.LVL22:
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 292              		.loc 1 938 2 is_stmt 0 view .LVU85
 293 0058 FFF7FEFF 		bl	vListInitialiseItem
 294              	.LVL23:
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 295              		.loc 1 939 2 is_stmt 1 view .LVU86
 296 005c 3800     		movs	r0, r7
 297 005e 1830     		adds	r0, r0, #24
 298 0060 FFF7FEFF 		bl	vListInitialiseItem
 299              	.LVL24:
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 300              		.loc 1 943 2 view .LVU87
 301 0064 3F61     		str	r7, [r7, #16]
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 302              		.loc 1 946 2 view .LVU88
 303 0066 0723     		movs	r3, #7
 304 0068 9E1B     		subs	r6, r3, r6
 305              	.LVL25:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 306              		.loc 1 946 2 is_stmt 0 view .LVU89
ARM GAS  /tmp/ccPYbq7S.s 			page 76


 307 006a BE61     		str	r6, [r7, #24]
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 308              		.loc 1 947 2 is_stmt 1 view .LVU90
 309 006c 7F62     		str	r7, [r7, #36]
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 310              		.loc 1 974 3 view .LVU91
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 311              		.loc 1 989 3 view .LVU92
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 312              		.loc 1 989 29 is_stmt 0 view .LVU93
 313 006e FC64     		str	r4, [r7, #76]
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 314              		.loc 1 990 3 is_stmt 1 view .LVU94
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 315              		.loc 1 990 27 is_stmt 0 view .LVU95
 316 0070 4933     		adds	r3, r3, #73
 317 0072 FC54     		strb	r4, [r7, r3]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 318              		.loc 1 1053 4 is_stmt 1 view .LVU96
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 319              		.loc 1 1053 29 is_stmt 0 view .LVU97
 320 0074 5A46     		mov	r2, fp
 321 0076 5146     		mov	r1, r10
 322 0078 4846     		mov	r0, r9
 323 007a FFF7FEFF 		bl	pxPortInitialiseStack
 324              	.LVL26:
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 325              		.loc 1 1053 27 view .LVU98
 326 007e 3860     		str	r0, [r7]
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 327              		.loc 1 1059 2 is_stmt 1 view .LVU99
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 328              		.loc 1 1059 4 is_stmt 0 view .LVU100
 329 0080 099B     		ldr	r3, [sp, #36]
 330 0082 002B     		cmp	r3, #0
 331 0084 00D0     		beq	.L17
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 332              		.loc 1 1063 3 is_stmt 1 view .LVU101
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 333              		.loc 1 1063 18 is_stmt 0 view .LVU102
 334 0086 1F60     		str	r7, [r3]
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 335              		.loc 1 1067 27 is_stmt 1 view .LVU103
 336              	.L17:
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 337              		.loc 1 1069 1 is_stmt 0 view .LVU104
 338              		@ sp needed
 339              	.LVL27:
 340              	.LVL28:
 341              	.LVL29:
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 342              		.loc 1 1069 1 view .LVU105
 343 0088 E0BC     		pop	{r5, r6, r7}
 344 008a BB46     		mov	fp, r7
 345 008c B246     		mov	r10, r6
 346 008e A946     		mov	r9, r5
 347 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccPYbq7S.s 			page 77


 348              	.LVL30:
 349              	.L28:
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 350              		.loc 1 916 3 is_stmt 1 view .LVU106
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 351              		.loc 1 916 29 is_stmt 0 view .LVU107
 352 0092 3423     		movs	r3, #52
 353 0094 0022     		movs	r2, #0
 354              	.LVL31:
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 355              		.loc 1 916 29 view .LVU108
 356 0096 FA54     		strb	r2, [r7, r3]
 357 0098 D6E7     		b	.L22
 358              	.L30:
 359 009a C046     		.align	2
 360              	.L29:
 361 009c FFFFFF3F 		.word	1073741823
 362              		.cfi_endproc
 363              	.LFE2:
 365              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 366              		.align	1
 367              		.syntax unified
 368              		.code	16
 369              		.thumb_func
 371              	prvInitialiseTaskLists:
 372              	.LFB32:
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 373              		.loc 1 3547 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 70B5     		push	{r4, r5, r6, lr}
 378              	.LCFI2:
 379              		.cfi_def_cfa_offset 16
 380              		.cfi_offset 4, -16
 381              		.cfi_offset 5, -12
 382              		.cfi_offset 6, -8
 383              		.cfi_offset 14, -4
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 384              		.loc 1 3548 1 view .LVU110
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 385              		.loc 1 3550 2 view .LVU111
 386              	.LVL32:
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 387              		.loc 1 3550 18 is_stmt 0 view .LVU112
 388 0002 0024     		movs	r4, #0
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 389              		.loc 1 3550 2 view .LVU113
 390 0004 07E0     		b	.L32
 391              	.LVL33:
 392              	.L33:
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 393              		.loc 1 3552 3 is_stmt 1 discriminator 3 view .LVU114
 394 0006 A300     		lsls	r3, r4, #2
 395 0008 1B19     		adds	r3, r3, r4
 396 000a 9800     		lsls	r0, r3, #2
 397 000c 0E4B     		ldr	r3, .L34
ARM GAS  /tmp/ccPYbq7S.s 			page 78


 398 000e C018     		adds	r0, r0, r3
 399 0010 FFF7FEFF 		bl	vListInitialise
 400              	.LVL34:
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 401              		.loc 1 3550 91 discriminator 3 view .LVU115
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 402              		.loc 1 3550 101 is_stmt 0 discriminator 3 view .LVU116
 403 0014 0134     		adds	r4, r4, #1
 404              	.LVL35:
 405              	.L32:
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 406              		.loc 1 3550 40 is_stmt 1 discriminator 1 view .LVU117
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 407              		.loc 1 3550 2 is_stmt 0 discriminator 1 view .LVU118
 408 0016 062C     		cmp	r4, #6
 409 0018 F5D9     		bls	.L33
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 410              		.loc 1 3555 2 is_stmt 1 view .LVU119
 411 001a 0C4D     		ldr	r5, .L34+4
 412 001c 2800     		movs	r0, r5
 413 001e FFF7FEFF 		bl	vListInitialise
 414              	.LVL36:
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 415              		.loc 1 3556 2 view .LVU120
 416 0022 0B4C     		ldr	r4, .L34+8
 417              	.LVL37:
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 418              		.loc 1 3556 2 is_stmt 0 view .LVU121
 419 0024 2000     		movs	r0, r4
 420 0026 FFF7FEFF 		bl	vListInitialise
 421              	.LVL38:
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422              		.loc 1 3557 2 is_stmt 1 view .LVU122
 423 002a 0A48     		ldr	r0, .L34+12
 424 002c FFF7FEFF 		bl	vListInitialise
 425              	.LVL39:
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 426              		.loc 1 3561 3 view .LVU123
 427 0030 0948     		ldr	r0, .L34+16
 428 0032 FFF7FEFF 		bl	vListInitialise
 429              	.LVL40:
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 430              		.loc 1 3567 3 view .LVU124
 431 0036 0948     		ldr	r0, .L34+20
 432 0038 FFF7FEFF 		bl	vListInitialise
 433              	.LVL41:
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 434              		.loc 1 3573 2 view .LVU125
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 435              		.loc 1 3573 20 is_stmt 0 view .LVU126
 436 003c 084B     		ldr	r3, .L34+24
 437 003e 1D60     		str	r5, [r3]
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 438              		.loc 1 3574 2 is_stmt 1 view .LVU127
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 439              		.loc 1 3574 28 is_stmt 0 view .LVU128
 440 0040 084B     		ldr	r3, .L34+28
ARM GAS  /tmp/ccPYbq7S.s 			page 79


 441 0042 1C60     		str	r4, [r3]
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 442              		.loc 1 3575 1 view .LVU129
 443              		@ sp needed
 444 0044 70BD     		pop	{r4, r5, r6, pc}
 445              	.L35:
 446 0046 C046     		.align	2
 447              	.L34:
 448 0048 00000000 		.word	pxReadyTasksLists
 449 004c 00000000 		.word	.LANCHOR4
 450 0050 00000000 		.word	.LANCHOR5
 451 0054 00000000 		.word	.LANCHOR1
 452 0058 00000000 		.word	.LANCHOR6
 453 005c 00000000 		.word	.LANCHOR0
 454 0060 00000000 		.word	.LANCHOR2
 455 0064 00000000 		.word	.LANCHOR7
 456              		.cfi_endproc
 457              	.LFE32:
 459              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 460              		.align	1
 461              		.syntax unified
 462              		.code	16
 463              		.thumb_func
 465              	prvAddNewTaskToReadyList:
 466              	.LVL42:
 467              	.LFB3:
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 468              		.loc 1 1073 1 is_stmt 1 view -0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 472              		.loc 1 1073 1 is_stmt 0 view .LVU131
 473 0000 10B5     		push	{r4, lr}
 474              	.LCFI3:
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 478 0002 0400     		movs	r4, r0
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 479              		.loc 1 1076 2 is_stmt 1 view .LVU132
 480 0004 FFF7FEFF 		bl	vPortEnterCritical
 481              	.LVL43:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 482              		.loc 1 1078 3 view .LVU133
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 483              		.loc 1 1078 25 is_stmt 0 view .LVU134
 484 0008 1F4A     		ldr	r2, .L44
 485 000a 1368     		ldr	r3, [r2]
 486 000c 0133     		adds	r3, r3, #1
 487 000e 1360     		str	r3, [r2]
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 488              		.loc 1 1079 3 is_stmt 1 view .LVU135
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 489              		.loc 1 1079 20 is_stmt 0 view .LVU136
 490 0010 1E4B     		ldr	r3, .L44+4
 491 0012 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccPYbq7S.s 			page 80


1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 492              		.loc 1 1079 5 view .LVU137
 493 0014 002B     		cmp	r3, #0
 494 0016 0CD0     		beq	.L41
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 495              		.loc 1 1102 4 is_stmt 1 view .LVU138
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 496              		.loc 1 1102 26 is_stmt 0 view .LVU139
 497 0018 1D4B     		ldr	r3, .L44+8
 498 001a 1B68     		ldr	r3, [r3]
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 499              		.loc 1 1102 6 view .LVU140
 500 001c 002B     		cmp	r3, #0
 501 001e 0DD1     		bne	.L38
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 502              		.loc 1 1104 5 is_stmt 1 view .LVU141
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 503              		.loc 1 1104 21 is_stmt 0 view .LVU142
 504 0020 1A4B     		ldr	r3, .L44+4
 505 0022 1B68     		ldr	r3, [r3]
 506 0024 DB6A     		ldr	r3, [r3, #44]
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 507              		.loc 1 1104 7 view .LVU143
 508 0026 E26A     		ldr	r2, [r4, #44]
 509 0028 9342     		cmp	r3, r2
 510 002a 07D8     		bhi	.L38
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 511              		.loc 1 1106 6 is_stmt 1 view .LVU144
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 512              		.loc 1 1106 19 is_stmt 0 view .LVU145
 513 002c 174B     		ldr	r3, .L44+4
 514 002e 1C60     		str	r4, [r3]
 515 0030 04E0     		b	.L38
 516              	.L41:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517              		.loc 1 1083 4 is_stmt 1 view .LVU146
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 518              		.loc 1 1083 17 is_stmt 0 view .LVU147
 519 0032 164B     		ldr	r3, .L44+4
 520 0034 1C60     		str	r4, [r3]
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 521              		.loc 1 1085 4 is_stmt 1 view .LVU148
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 522              		.loc 1 1085 31 is_stmt 0 view .LVU149
 523 0036 1368     		ldr	r3, [r2]
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 524              		.loc 1 1085 6 view .LVU150
 525 0038 012B     		cmp	r3, #1
 526 003a 1FD0     		beq	.L42
 527              	.L38:
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 528              		.loc 1 1115 29 is_stmt 1 view .LVU151
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529              		.loc 1 1119 3 view .LVU152
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530              		.loc 1 1119 15 is_stmt 0 view .LVU153
 531 003c 154A     		ldr	r2, .L44+12
ARM GAS  /tmp/ccPYbq7S.s 			page 81


 532 003e 1368     		ldr	r3, [r2]
 533 0040 0133     		adds	r3, r3, #1
 534 0042 1360     		str	r3, [r2]
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 535              		.loc 1 1127 31 is_stmt 1 view .LVU154
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 536              		.loc 1 1129 3 view .LVU155
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537              		.loc 1 1129 3 view .LVU156
 538 0044 E36A     		ldr	r3, [r4, #44]
 539 0046 144A     		ldr	r2, .L44+16
 540 0048 1268     		ldr	r2, [r2]
 541 004a 9342     		cmp	r3, r2
 542 004c 01D9     		bls	.L39
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 543              		.loc 1 1129 3 discriminator 1 view .LVU157
 544 004e 124A     		ldr	r2, .L44+16
 545 0050 1360     		str	r3, [r2]
 546              	.L39:
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547              		.loc 1 1129 3 discriminator 3 view .LVU158
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 548              		.loc 1 1129 3 discriminator 3 view .LVU159
 549 0052 211D     		adds	r1, r4, #4
 550 0054 9800     		lsls	r0, r3, #2
 551 0056 C018     		adds	r0, r0, r3
 552 0058 8000     		lsls	r0, r0, #2
 553 005a 104B     		ldr	r3, .L44+20
 554 005c C018     		adds	r0, r0, r3
 555 005e FFF7FEFF 		bl	vListInsertEnd
 556              	.LVL44:
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 557              		.loc 1 1129 36 discriminator 3 view .LVU160
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 558              		.loc 1 1131 3 discriminator 3 view .LVU161
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 559              		.loc 1 1133 2 discriminator 3 view .LVU162
 560 0062 FFF7FEFF 		bl	vPortExitCritical
 561              	.LVL45:
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 562              		.loc 1 1135 2 discriminator 3 view .LVU163
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 563              		.loc 1 1135 24 is_stmt 0 discriminator 3 view .LVU164
 564 0066 0A4B     		ldr	r3, .L44+8
 565 0068 1B68     		ldr	r3, [r3]
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 566              		.loc 1 1135 4 discriminator 3 view .LVU165
 567 006a 002B     		cmp	r3, #0
 568 006c 05D0     		beq	.L36
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 569              		.loc 1 1139 3 is_stmt 1 view .LVU166
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 570              		.loc 1 1139 19 is_stmt 0 view .LVU167
 571 006e 074B     		ldr	r3, .L44+4
 572 0070 1B68     		ldr	r3, [r3]
 573 0072 DA6A     		ldr	r2, [r3, #44]
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 82


 574              		.loc 1 1139 42 view .LVU168
 575 0074 E36A     		ldr	r3, [r4, #44]
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 576              		.loc 1 1139 5 view .LVU169
 577 0076 9A42     		cmp	r2, r3
 578 0078 03D3     		bcc	.L43
 579              	.L36:
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 580              		.loc 1 1152 1 view .LVU170
 581              		@ sp needed
 582              	.LVL46:
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 583              		.loc 1 1152 1 view .LVU171
 584 007a 10BD     		pop	{r4, pc}
 585              	.LVL47:
 586              	.L42:
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 587              		.loc 1 1090 5 is_stmt 1 view .LVU172
 588 007c FFF7FEFF 		bl	prvInitialiseTaskLists
 589              	.LVL48:
 590 0080 DCE7     		b	.L38
 591              	.L43:
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 592              		.loc 1 1141 4 view .LVU173
 593 0082 FFF7FEFF 		bl	vPortYield
 594              	.LVL49:
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 595              		.loc 1 1150 27 view .LVU174
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 596              		.loc 1 1152 1 is_stmt 0 view .LVU175
 597 0086 F8E7     		b	.L36
 598              	.L45:
 599              		.align	2
 600              	.L44:
 601 0088 00000000 		.word	.LANCHOR8
 602 008c 00000000 		.word	.LANCHOR9
 603 0090 00000000 		.word	.LANCHOR10
 604 0094 00000000 		.word	.LANCHOR11
 605 0098 00000000 		.word	.LANCHOR12
 606 009c 00000000 		.word	pxReadyTasksLists
 607              		.cfi_endproc
 608              	.LFE3:
 610              		.section	.text.prvDeleteTCB,"ax",%progbits
 611              		.align	1
 612              		.syntax unified
 613              		.code	16
 614              		.thumb_func
 616              	prvDeleteTCB:
 617              	.LVL50:
 618              	.LFB34:
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 619              		.loc 1 3827 2 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 623              		.loc 1 3827 2 is_stmt 0 view .LVU177
ARM GAS  /tmp/ccPYbq7S.s 			page 83


 624 0000 10B5     		push	{r4, lr}
 625              	.LCFI4:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 629 0002 0400     		movs	r4, r0
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630              		.loc 1 3831 3 is_stmt 1 view .LVU178
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 631              		.loc 1 3853 4 view .LVU179
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 632              		.loc 1 3853 13 is_stmt 0 view .LVU180
 633 0004 5123     		movs	r3, #81
 634 0006 C35C     		ldrb	r3, [r0, r3]
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 635              		.loc 1 3853 6 view .LVU181
 636 0008 002B     		cmp	r3, #0
 637 000a 05D0     		beq	.L51
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 638              		.loc 1 3860 9 is_stmt 1 view .LVU182
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 639              		.loc 1 3860 11 is_stmt 0 view .LVU183
 640 000c 012B     		cmp	r3, #1
 641 000e 0AD0     		beq	.L52
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 642              		.loc 1 3870 5 is_stmt 1 view .LVU184
 643 0010 022B     		cmp	r3, #2
 644 0012 07D0     		beq	.L46
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 645              		.loc 1 3870 5 discriminator 1 view .LVU185
 646              		.syntax divided
 647              	@ 3870 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 648 0014 72B6     		 cpsid i 
 649              	@ 0 "" 2
 650              		.thumb
 651              		.syntax unified
 652              	.L50:
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 653              		.loc 1 3870 5 discriminator 1 view .LVU186
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 654              		.loc 1 3870 5 discriminator 1 view .LVU187
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 655              		.loc 1 3870 5 discriminator 1 view .LVU188
 656 0016 FEE7     		b	.L50
 657              	.L51:
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 658              		.loc 1 3857 5 view .LVU189
 659 0018 006B     		ldr	r0, [r0, #48]
 660              	.LVL51:
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 661              		.loc 1 3857 5 is_stmt 0 view .LVU190
 662 001a FFF7FEFF 		bl	vPortFree
 663              	.LVL52:
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 664              		.loc 1 3858 5 is_stmt 1 view .LVU191
 665 001e 2000     		movs	r0, r4
 666 0020 FFF7FEFF 		bl	vPortFree
ARM GAS  /tmp/ccPYbq7S.s 			page 84


 667              	.LVL53:
 668              	.L46:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669              		.loc 1 3875 2 is_stmt 0 view .LVU192
 670              		@ sp needed
 671              	.LVL54:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672              		.loc 1 3875 2 view .LVU193
 673 0024 10BD     		pop	{r4, pc}
 674              	.LVL55:
 675              	.L52:
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 676              		.loc 1 3864 5 is_stmt 1 view .LVU194
 677 0026 FFF7FEFF 		bl	vPortFree
 678              	.LVL56:
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 679              		.loc 1 3864 5 is_stmt 0 view .LVU195
 680 002a FBE7     		b	.L46
 681              		.cfi_endproc
 682              	.LFE34:
 684              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 685              		.align	1
 686              		.syntax unified
 687              		.code	16
 688              		.thumb_func
 690              	prvCheckTasksWaitingTermination:
 691              	.LFB33:
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 692              		.loc 1 3579 1 is_stmt 1 view -0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 0
 695              		@ frame_needed = 0, uses_anonymous_args = 0
 696 0000 10B5     		push	{r4, lr}
 697              	.LCFI5:
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701              	.LBB2:
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 702              		.loc 1 3585 3 view .LVU197
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 703              		.loc 1 3589 3 view .LVU198
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 704              		.loc 1 3589 8 is_stmt 0 view .LVU199
 705 0002 14E0     		b	.L54
 706              	.L55:
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 707              		.loc 1 3591 4 is_stmt 1 view .LVU200
 708 0004 FFF7FEFF 		bl	vPortEnterCritical
 709              	.LVL57:
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 710              		.loc 1 3593 5 view .LVU201
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 711              		.loc 1 3593 13 is_stmt 0 view .LVU202
 712 0008 0B4B     		ldr	r3, .L56
 713 000a DB68     		ldr	r3, [r3, #12]
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/ccPYbq7S.s 			page 85


 714              		.loc 1 3593 11 view .LVU203
 715 000c DC68     		ldr	r4, [r3, #12]
 716              	.LVL58:
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 717              		.loc 1 3594 5 is_stmt 1 view .LVU204
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 718              		.loc 1 3594 14 is_stmt 0 view .LVU205
 719 000e 201D     		adds	r0, r4, #4
 720 0010 FFF7FEFF 		bl	uxListRemove
 721              	.LVL59:
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 722              		.loc 1 3595 5 is_stmt 1 view .LVU206
 723 0014 094A     		ldr	r2, .L56+4
 724 0016 1368     		ldr	r3, [r2]
 725 0018 013B     		subs	r3, r3, #1
 726 001a 1360     		str	r3, [r2]
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 727              		.loc 1 3596 5 view .LVU207
 728 001c 084A     		ldr	r2, .L56+8
 729 001e 1368     		ldr	r3, [r2]
 730 0020 013B     		subs	r3, r3, #1
 731 0022 1360     		str	r3, [r2]
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 732              		.loc 1 3598 4 view .LVU208
 733 0024 FFF7FEFF 		bl	vPortExitCritical
 734              	.LVL60:
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 735              		.loc 1 3600 4 view .LVU209
 736 0028 2000     		movs	r0, r4
 737 002a FFF7FEFF 		bl	prvDeleteTCB
 738              	.LVL61:
 739              	.L54:
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 740              		.loc 1 3589 8 view .LVU210
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741              		.loc 1 3589 39 is_stmt 0 view .LVU211
 742 002e 044B     		ldr	r3, .L56+8
 743 0030 1B68     		ldr	r3, [r3]
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 744              		.loc 1 3589 8 view .LVU212
 745 0032 002B     		cmp	r3, #0
 746 0034 E6D1     		bne	.L55
 747              	.LBE2:
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 748              		.loc 1 3604 1 view .LVU213
 749              		@ sp needed
 750 0036 10BD     		pop	{r4, pc}
 751              	.L57:
 752              		.align	2
 753              	.L56:
 754 0038 00000000 		.word	.LANCHOR6
 755 003c 00000000 		.word	.LANCHOR8
 756 0040 00000000 		.word	.LANCHOR13
 757              		.cfi_endproc
 758              	.LFE33:
 760              		.section	.text.prvIdleTask,"ax",%progbits
 761              		.align	1
ARM GAS  /tmp/ccPYbq7S.s 			page 86


 762              		.syntax unified
 763              		.code	16
 764              		.thumb_func
 766              	prvIdleTask:
 767              	.LFB31:
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 768              		.loc 1 3335 1 is_stmt 1 view -0
 769              		.cfi_startproc
 770              		@ Volatile: function does not return.
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              	.LVL62:
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 774              		.loc 1 3335 1 is_stmt 0 view .LVU215
 775 0000 10B5     		push	{r4, lr}
 776              	.LCFI6:
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 4, -8
 779              		.cfi_offset 14, -4
 780              	.LVL63:
 781              	.L59:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 782              		.loc 1 3337 2 is_stmt 1 view .LVU216
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 783              		.loc 1 3345 64 view .LVU217
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 784              		.loc 1 3347 2 view .LVU218
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 785              		.loc 1 3351 3 view .LVU219
 786 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 787              	.LVL64:
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 788              		.loc 1 3374 4 view .LVU220
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 789              		.loc 1 3374 8 is_stmt 0 view .LVU221
 790 0006 034B     		ldr	r3, .L61
 791 0008 1B68     		ldr	r3, [r3]
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 792              		.loc 1 3374 6 view .LVU222
 793 000a 012B     		cmp	r3, #1
 794 000c F9D9     		bls	.L59
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 795              		.loc 1 3376 5 is_stmt 1 view .LVU223
 796 000e FFF7FEFF 		bl	vPortYield
 797              	.LVL65:
 798 0012 F6E7     		b	.L59
 799              	.L62:
 800              		.align	2
 801              	.L61:
 802 0014 00000000 		.word	pxReadyTasksLists
 803              		.cfi_endproc
 804              	.LFE31:
 806              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 807              		.align	1
 808              		.syntax unified
 809              		.code	16
 810              		.thumb_func
ARM GAS  /tmp/ccPYbq7S.s 			page 87


 812              	prvAddCurrentTaskToDelayedList:
 813              	.LVL66:
 814              	.LFB49:
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 88


3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
ARM GAS  /tmp/ccPYbq7S.s 			page 89


4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccPYbq7S.s 			page 90


4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
ARM GAS  /tmp/ccPYbq7S.s 			page 91


4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
ARM GAS  /tmp/ccPYbq7S.s 			page 92


4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 93


4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
ARM GAS  /tmp/ccPYbq7S.s 			page 94


4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
ARM GAS  /tmp/ccPYbq7S.s 			page 95


4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
ARM GAS  /tmp/ccPYbq7S.s 			page 96


4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
ARM GAS  /tmp/ccPYbq7S.s 			page 97


4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 98


4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 99


4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 100


4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
ARM GAS  /tmp/ccPYbq7S.s 			page 101


4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
ARM GAS  /tmp/ccPYbq7S.s 			page 102


4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccPYbq7S.s 			page 103


4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
ARM GAS  /tmp/ccPYbq7S.s 			page 104


4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
ARM GAS  /tmp/ccPYbq7S.s 			page 105


4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
ARM GAS  /tmp/ccPYbq7S.s 			page 106


4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
ARM GAS  /tmp/ccPYbq7S.s 			page 107


5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTaskGetIdleRunTimeCounter( void )
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 815              		.loc 1 5082 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
 819              		.loc 1 5082 1 is_stmt 0 view .LVU225
 820 0000 70B5     		push	{r4, r5, r6, lr}
 821              	.LCFI7:
 822              		.cfi_def_cfa_offset 16
 823              		.cfi_offset 4, -16
 824              		.cfi_offset 5, -12
 825              		.cfi_offset 6, -8
 826              		.cfi_offset 14, -4
 827 0002 0400     		movs	r4, r0
ARM GAS  /tmp/ccPYbq7S.s 			page 108


 828 0004 0D00     		movs	r5, r1
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 829              		.loc 1 5083 1 is_stmt 1 view .LVU226
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 830              		.loc 1 5084 1 view .LVU227
 831              		.loc 1 5084 18 is_stmt 0 view .LVU228
 832 0006 174B     		ldr	r3, .L68
 833 0008 1E68     		ldr	r6, [r3]
 834              	.LVL67:
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 835              		.loc 1 5097 2 is_stmt 1 view .LVU229
 836              		.loc 1 5097 35 is_stmt 0 view .LVU230
 837 000a 174B     		ldr	r3, .L68+4
 838 000c 1868     		ldr	r0, [r3]
 839              	.LVL68:
 840              		.loc 1 5097 6 view .LVU231
 841 000e 0430     		adds	r0, r0, #4
 842 0010 FFF7FEFF 		bl	uxListRemove
 843              	.LVL69:
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 844              		.loc 1 5105 27 is_stmt 1 view .LVU232
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 845              		.loc 1 5110 3 view .LVU233
 846              		.loc 1 5110 5 is_stmt 0 view .LVU234
 847 0014 631C     		adds	r3, r4, #1
 848 0016 0DD0     		beq	.L67
 849              	.L64:
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/ccPYbq7S.s 			page 109


5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 850              		.loc 1 5122 4 is_stmt 1 view .LVU235
 851              		.loc 1 5122 16 is_stmt 0 view .LVU236
 852 0018 3419     		adds	r4, r6, r4
 853              	.LVL70:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 854              		.loc 1 5125 4 is_stmt 1 view .LVU237
 855 001a 134B     		ldr	r3, .L68+4
 856 001c 1B68     		ldr	r3, [r3]
 857 001e 5C60     		str	r4, [r3, #4]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 858              		.loc 1 5127 4 view .LVU238
 859              		.loc 1 5127 6 is_stmt 0 view .LVU239
 860 0020 A642     		cmp	r6, r4
 861 0022 10D9     		bls	.L66
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 862              		.loc 1 5131 5 is_stmt 1 view .LVU240
 863 0024 114B     		ldr	r3, .L68+8
 864 0026 1868     		ldr	r0, [r3]
 865              		.loc 1 5131 60 is_stmt 0 view .LVU241
 866 0028 0F4B     		ldr	r3, .L68+4
 867 002a 1968     		ldr	r1, [r3]
 868              		.loc 1 5131 5 view .LVU242
 869 002c 0431     		adds	r1, r1, #4
 870 002e FFF7FEFF 		bl	vListInsert
 871              	.LVL71:
 872              	.L63:
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccPYbq7S.s 			page 110


5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 873              		.loc 1 5190 1 view .LVU243
 874              		@ sp needed
 875              	.LVL72:
 876              	.LVL73:
 877              		.loc 1 5190 1 view .LVU244
 878 0032 70BD     		pop	{r4, r5, r6, pc}
 879              	.LVL74:
 880              	.L67:
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 881              		.loc 1 5110 41 discriminator 1 view .LVU245
 882 0034 002D     		cmp	r5, #0
 883 0036 EFD0     		beq	.L64
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 884              		.loc 1 5115 4 is_stmt 1 view .LVU246
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 885              		.loc 1 5115 56 is_stmt 0 view .LVU247
 886 0038 0B4B     		ldr	r3, .L68+4
 887 003a 1968     		ldr	r1, [r3]
ARM GAS  /tmp/ccPYbq7S.s 			page 111


5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 888              		.loc 1 5115 4 view .LVU248
 889 003c 0431     		adds	r1, r1, #4
 890 003e 0C48     		ldr	r0, .L68+12
 891 0040 FFF7FEFF 		bl	vListInsertEnd
 892              	.LVL75:
 893 0044 F5E7     		b	.L63
 894              	.LVL76:
 895              	.L66:
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 896              		.loc 1 5137 5 is_stmt 1 view .LVU249
 897 0046 0B4B     		ldr	r3, .L68+16
 898 0048 1868     		ldr	r0, [r3]
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 899              		.loc 1 5137 52 is_stmt 0 view .LVU250
 900 004a 074B     		ldr	r3, .L68+4
 901 004c 1968     		ldr	r1, [r3]
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902              		.loc 1 5137 5 view .LVU251
 903 004e 0431     		adds	r1, r1, #4
 904 0050 FFF7FEFF 		bl	vListInsert
 905              	.LVL77:
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 906              		.loc 1 5142 5 is_stmt 1 view .LVU252
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 907              		.loc 1 5142 21 is_stmt 0 view .LVU253
 908 0054 084B     		ldr	r3, .L68+20
 909 0056 1B68     		ldr	r3, [r3]
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 910              		.loc 1 5142 7 view .LVU254
 911 0058 A342     		cmp	r3, r4
 912 005a EAD9     		bls	.L63
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 913              		.loc 1 5144 6 is_stmt 1 view .LVU255
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 914              		.loc 1 5144 27 is_stmt 0 view .LVU256
 915 005c 064B     		ldr	r3, .L68+20
 916 005e 1C60     		str	r4, [r3]
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 917              		.loc 1 5148 30 is_stmt 1 view .LVU257
 918              		.loc 1 5190 1 is_stmt 0 view .LVU258
 919 0060 E7E7     		b	.L63
 920              	.L69:
 921 0062 C046     		.align	2
 922              	.L68:
 923 0064 00000000 		.word	.LANCHOR14
 924 0068 00000000 		.word	.LANCHOR9
 925 006c 00000000 		.word	.LANCHOR7
 926 0070 00000000 		.word	.LANCHOR0
 927 0074 00000000 		.word	.LANCHOR2
 928 0078 00000000 		.word	.LANCHOR3
 929              		.cfi_endproc
 930              	.LFE49:
 932              		.section	.text.xTaskCreateStatic,"ax",%progbits
 933              		.align	1
 934              		.global	xTaskCreateStatic
 935              		.syntax unified
ARM GAS  /tmp/ccPYbq7S.s 			page 112


 936              		.code	16
 937              		.thumb_func
 939              	xTaskCreateStatic:
 940              	.LVL78:
 941              	.LFB0:
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 942              		.loc 1 585 2 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 12, pretend = 0, frame = 8
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 946              		.loc 1 585 2 is_stmt 0 view .LVU260
 947 0000 70B5     		push	{r4, r5, r6, lr}
 948              	.LCFI8:
 949              		.cfi_def_cfa_offset 16
 950              		.cfi_offset 4, -16
 951              		.cfi_offset 5, -12
 952              		.cfi_offset 6, -8
 953              		.cfi_offset 14, -4
 954 0002 86B0     		sub	sp, sp, #24
 955              	.LCFI9:
 956              		.cfi_def_cfa_offset 40
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 957              		.loc 1 586 2 is_stmt 1 view .LVU261
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958              		.loc 1 587 2 view .LVU262
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 959              		.loc 1 589 3 view .LVU263
 960 0004 0B9C     		ldr	r4, [sp, #44]
 961 0006 002C     		cmp	r4, #0
 962 0008 09D0     		beq	.L77
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 963              		.loc 1 589 41 discriminator 2 view .LVU264
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964              		.loc 1 590 3 discriminator 2 view .LVU265
 965 000a 0C9C     		ldr	r4, [sp, #48]
 966 000c 002C     		cmp	r4, #0
 967 000e 08D0     		beq	.L78
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 968              		.loc 1 590 39 discriminator 2 view .LVU266
 969              	.LBB3:
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 970              		.loc 1 597 4 discriminator 2 view .LVU267
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 971              		.loc 1 597 20 is_stmt 0 discriminator 2 view .LVU268
 972 0010 5424     		movs	r4, #84
 973 0012 0494     		str	r4, [sp, #16]
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 974              		.loc 1 598 4 is_stmt 1 discriminator 2 view .LVU269
 975 0014 049C     		ldr	r4, [sp, #16]
 976 0016 542C     		cmp	r4, #84
 977 0018 05D0     		beq	.L75
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 978              		.loc 1 598 4 discriminator 1 view .LVU270
 979              		.syntax divided
 980              	@ 598 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 981 001a 72B6     		 cpsid i 
ARM GAS  /tmp/ccPYbq7S.s 			page 113


 982              	@ 0 "" 2
 983              		.thumb
 984              		.syntax unified
 985              	.L76:
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 986              		.loc 1 598 4 discriminator 3 view .LVU271
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 987              		.loc 1 598 4 discriminator 3 view .LVU272
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 988              		.loc 1 598 4 discriminator 3 view .LVU273
 989 001c FEE7     		b	.L76
 990              	.L77:
 991              	.LBE3:
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 992              		.loc 1 589 3 discriminator 1 view .LVU274
 993              		.syntax divided
 994              	@ 589 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 995 001e 72B6     		 cpsid i 
 996              	@ 0 "" 2
 997              		.thumb
 998              		.syntax unified
 999              	.L72:
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1000              		.loc 1 589 3 discriminator 1 view .LVU275
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1001              		.loc 1 589 3 discriminator 1 view .LVU276
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1002              		.loc 1 589 3 discriminator 1 view .LVU277
 1003 0020 FEE7     		b	.L72
 1004              	.L78:
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1005              		.loc 1 590 3 discriminator 1 view .LVU278
 1006              		.syntax divided
 1007              	@ 590 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1008 0022 72B6     		 cpsid i 
 1009              	@ 0 "" 2
 1010              		.thumb
 1011              		.syntax unified
 1012              	.L74:
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1013              		.loc 1 590 3 discriminator 2 view .LVU279
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1014              		.loc 1 590 3 discriminator 2 view .LVU280
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1015              		.loc 1 590 3 discriminator 2 view .LVU281
 1016 0024 FEE7     		b	.L74
 1017              	.L75:
 1018              	.LBB4:
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1019              		.loc 1 598 44 discriminator 2 view .LVU282
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1020              		.loc 1 599 4 discriminator 2 view .LVU283
 1021 0026 049C     		ldr	r4, [sp, #16]
 1022              	.LBE4:
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1023              		.loc 1 604 3 discriminator 2 view .LVU284
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
ARM GAS  /tmp/ccPYbq7S.s 			page 114


 1024              		.loc 1 608 4 discriminator 2 view .LVU285
 1025              	.LVL79:
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1026              		.loc 1 609 4 discriminator 2 view .LVU286
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1027              		.loc 1 609 22 is_stmt 0 discriminator 2 view .LVU287
 1028 0028 0C9C     		ldr	r4, [sp, #48]
 1029 002a 0B9D     		ldr	r5, [sp, #44]
 1030 002c 2563     		str	r5, [r4, #48]
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1031              		.loc 1 615 5 is_stmt 1 discriminator 2 view .LVU288
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1032              		.loc 1 615 37 is_stmt 0 discriminator 2 view .LVU289
 1033 002e 5124     		movs	r4, #81
 1034 0030 0225     		movs	r5, #2
 1035 0032 0C9E     		ldr	r6, [sp, #48]
 1036 0034 3555     		strb	r5, [r6, r4]
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1037              		.loc 1 619 4 is_stmt 1 discriminator 2 view .LVU290
 1038 0036 0024     		movs	r4, #0
 1039 0038 0394     		str	r4, [sp, #12]
 1040 003a 0296     		str	r6, [sp, #8]
 1041 003c 05AC     		add	r4, sp, #20
 1042 003e 0194     		str	r4, [sp, #4]
 1043 0040 0A9C     		ldr	r4, [sp, #40]
 1044 0042 0094     		str	r4, [sp]
 1045 0044 FFF7FEFF 		bl	prvInitialiseNewTask
 1046              	.LVL80:
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1047              		.loc 1 620 4 discriminator 2 view .LVU291
 1048 0048 0C98     		ldr	r0, [sp, #48]
 1049 004a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1050              	.LVL81:
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1051              		.loc 1 627 3 discriminator 2 view .LVU292
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1052              		.loc 1 628 2 is_stmt 0 discriminator 2 view .LVU293
 1053 004e 0598     		ldr	r0, [sp, #20]
 1054 0050 06B0     		add	sp, sp, #24
 1055              		@ sp needed
 1056 0052 70BD     		pop	{r4, r5, r6, pc}
 1057              		.cfi_endproc
 1058              	.LFE0:
 1060              		.section	.text.xTaskCreate,"ax",%progbits
 1061              		.align	1
 1062              		.global	xTaskCreate
 1063              		.syntax unified
 1064              		.code	16
 1065              		.thumb_func
 1067              	xTaskCreate:
 1068              	.LVL82:
 1069              	.LFB1:
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1070              		.loc 1 736 2 is_stmt 1 view -0
 1071              		.cfi_startproc
 1072              		@ args = 8, pretend = 0, frame = 8
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPYbq7S.s 			page 115


 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1074              		.loc 1 736 2 is_stmt 0 view .LVU295
 1075 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1076              	.LCFI10:
 1077              		.cfi_def_cfa_offset 20
 1078              		.cfi_offset 4, -20
 1079              		.cfi_offset 5, -16
 1080              		.cfi_offset 6, -12
 1081              		.cfi_offset 7, -8
 1082              		.cfi_offset 14, -4
 1083 0002 87B0     		sub	sp, sp, #28
 1084              	.LCFI11:
 1085              		.cfi_def_cfa_offset 48
 1086 0004 0490     		str	r0, [sp, #16]
 1087 0006 0591     		str	r1, [sp, #20]
 1088 0008 1600     		movs	r6, r2
 1089 000a 1F00     		movs	r7, r3
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1090              		.loc 1 737 2 is_stmt 1 view .LVU296
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1091              		.loc 1 738 2 view .LVU297
 1092              	.LBB5:
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1093              		.loc 1 767 3 view .LVU298
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1094              		.loc 1 770 4 view .LVU299
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1095              		.loc 1 770 14 is_stmt 0 view .LVU300
 1096 000c 9000     		lsls	r0, r2, #2
 1097              	.LVL83:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1098              		.loc 1 770 14 view .LVU301
 1099 000e FFF7FEFF 		bl	pvPortMalloc
 1100              	.LVL84:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1101              		.loc 1 770 14 view .LVU302
 1102 0012 041E     		subs	r4, r0, #0
 1103              	.LVL85:
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1104              		.loc 1 772 4 is_stmt 1 view .LVU303
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1105              		.loc 1 772 6 is_stmt 0 view .LVU304
 1106 0014 1FD0     		beq	.L83
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1107              		.loc 1 775 5 is_stmt 1 view .LVU305
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1108              		.loc 1 775 28 is_stmt 0 view .LVU306
 1109 0016 5420     		movs	r0, #84
 1110              	.LVL86:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1111              		.loc 1 775 28 view .LVU307
 1112 0018 FFF7FEFF 		bl	pvPortMalloc
 1113              	.LVL87:
 1114 001c 051E     		subs	r5, r0, #0
 1115              	.LVL88:
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1116              		.loc 1 777 5 is_stmt 1 view .LVU308
ARM GAS  /tmp/ccPYbq7S.s 			page 116


 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1117              		.loc 1 777 7 is_stmt 0 view .LVU309
 1118 001e 16D0     		beq	.L81
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1119              		.loc 1 780 6 is_stmt 1 view .LVU310
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1120              		.loc 1 780 24 is_stmt 0 view .LVU311
 1121 0020 0463     		str	r4, [r0, #48]
 1122              	.LVL89:
 1123              	.L82:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1124              		.loc 1 780 24 view .LVU312
 1125              	.LBE5:
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1126              		.loc 1 796 3 is_stmt 1 view .LVU313
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1127              		.loc 1 796 5 is_stmt 0 view .LVU314
 1128 0022 002D     		cmp	r5, #0
 1129 0024 1BD0     		beq	.L84
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1130              		.loc 1 802 5 is_stmt 1 view .LVU315
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1131              		.loc 1 802 37 is_stmt 0 view .LVU316
 1132 0026 0023     		movs	r3, #0
 1133 0028 5122     		movs	r2, #81
 1134 002a AB54     		strb	r3, [r5, r2]
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1135              		.loc 1 806 4 is_stmt 1 view .LVU317
 1136 002c 0393     		str	r3, [sp, #12]
 1137 002e 0295     		str	r5, [sp, #8]
 1138 0030 0D9B     		ldr	r3, [sp, #52]
 1139 0032 0193     		str	r3, [sp, #4]
 1140 0034 0C9B     		ldr	r3, [sp, #48]
 1141 0036 0093     		str	r3, [sp]
 1142 0038 3B00     		movs	r3, r7
 1143 003a 3200     		movs	r2, r6
 1144 003c 0599     		ldr	r1, [sp, #20]
 1145 003e 0498     		ldr	r0, [sp, #16]
 1146 0040 FFF7FEFF 		bl	prvInitialiseNewTask
 1147              	.LVL90:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1148              		.loc 1 807 4 view .LVU318
 1149 0044 2800     		movs	r0, r5
 1150 0046 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1151              	.LVL91:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1152              		.loc 1 808 4 view .LVU319
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1153              		.loc 1 808 12 is_stmt 0 view .LVU320
 1154 004a 0120     		movs	r0, #1
 1155 004c 05E0     		b	.L79
 1156              	.LVL92:
 1157              	.L81:
 1158              	.LBB6:
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1159              		.loc 1 786 6 is_stmt 1 view .LVU321
 1160 004e 2000     		movs	r0, r4
ARM GAS  /tmp/ccPYbq7S.s 			page 117


 1161              	.LVL93:
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1162              		.loc 1 786 6 is_stmt 0 view .LVU322
 1163 0050 FFF7FEFF 		bl	vPortFree
 1164              	.LVL94:
 1165 0054 E5E7     		b	.L82
 1166              	.LVL95:
 1167              	.L83:
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1168              		.loc 1 786 6 view .LVU323
 1169              	.LBE6:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1170              		.loc 1 812 12 view .LVU324
 1171 0056 0120     		movs	r0, #1
 1172              	.LVL96:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1173              		.loc 1 812 12 view .LVU325
 1174 0058 4042     		rsbs	r0, r0, #0
 1175              	.L79:
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1176              		.loc 1 816 2 view .LVU326
 1177 005a 07B0     		add	sp, sp, #28
 1178              		@ sp needed
 1179              	.LVL97:
 1180              	.LVL98:
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1181              		.loc 1 816 2 view .LVU327
 1182 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 1183              	.LVL99:
 1184              	.L84:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1185              		.loc 1 812 12 view .LVU328
 1186 005e 0120     		movs	r0, #1
 1187 0060 4042     		rsbs	r0, r0, #0
 1188              	.LVL100:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1189              		.loc 1 815 3 is_stmt 1 view .LVU329
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1190              		.loc 1 815 10 is_stmt 0 view .LVU330
 1191 0062 FAE7     		b	.L79
 1192              		.cfi_endproc
 1193              	.LFE1:
 1195              		.section	.text.vTaskDelete,"ax",%progbits
 1196              		.align	1
 1197              		.global	vTaskDelete
 1198              		.syntax unified
 1199              		.code	16
 1200              		.thumb_func
 1202              	vTaskDelete:
 1203              	.LVL101:
 1204              	.LFB4:
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1205              		.loc 1 1158 2 is_stmt 1 view -0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/ccPYbq7S.s 			page 118


 1209              		.loc 1 1158 2 is_stmt 0 view .LVU332
 1210 0000 70B5     		push	{r4, r5, r6, lr}
 1211              	.LCFI12:
 1212              		.cfi_def_cfa_offset 16
 1213              		.cfi_offset 4, -16
 1214              		.cfi_offset 5, -12
 1215              		.cfi_offset 6, -8
 1216              		.cfi_offset 14, -4
 1217 0002 0400     		movs	r4, r0
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1218              		.loc 1 1159 2 is_stmt 1 view .LVU333
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1219              		.loc 1 1161 3 view .LVU334
 1220 0004 FFF7FEFF 		bl	vPortEnterCritical
 1221              	.LVL102:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1222              		.loc 1 1165 4 view .LVU335
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1223              		.loc 1 1165 12 is_stmt 0 view .LVU336
 1224 0008 002C     		cmp	r4, #0
 1225 000a 26D0     		beq	.L93
 1226              	.LVL103:
 1227              	.L86:
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1228              		.loc 1 1168 4 is_stmt 1 discriminator 4 view .LVU337
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1229              		.loc 1 1168 8 is_stmt 0 discriminator 4 view .LVU338
 1230 000c 251D     		adds	r5, r4, #4
 1231 000e 2800     		movs	r0, r5
 1232 0010 FFF7FEFF 		bl	uxListRemove
 1233              	.LVL104:
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1234              		.loc 1 1174 29 is_stmt 1 discriminator 4 view .LVU339
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1235              		.loc 1 1178 4 discriminator 4 view .LVU340
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1236              		.loc 1 1178 6 is_stmt 0 discriminator 4 view .LVU341
 1237 0014 A36A     		ldr	r3, [r4, #40]
 1238 0016 002B     		cmp	r3, #0
 1239 0018 03D0     		beq	.L87
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1240              		.loc 1 1180 5 is_stmt 1 view .LVU342
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1241              		.loc 1 1180 14 is_stmt 0 view .LVU343
 1242 001a 2000     		movs	r0, r4
 1243 001c 1830     		adds	r0, r0, #24
 1244 001e FFF7FEFF 		bl	uxListRemove
 1245              	.LVL105:
 1246              	.L87:
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1247              		.loc 1 1184 29 is_stmt 1 view .LVU344
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1248              		.loc 1 1191 4 view .LVU345
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1249              		.loc 1 1191 16 is_stmt 0 view .LVU346
 1250 0022 184A     		ldr	r2, .L96
 1251 0024 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccPYbq7S.s 			page 119


 1252 0026 0133     		adds	r3, r3, #1
 1253 0028 1360     		str	r3, [r2]
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1254              		.loc 1 1193 4 is_stmt 1 view .LVU347
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1255              		.loc 1 1193 14 is_stmt 0 view .LVU348
 1256 002a 174B     		ldr	r3, .L96+4
 1257 002c 1B68     		ldr	r3, [r3]
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1258              		.loc 1 1193 6 view .LVU349
 1259 002e A342     		cmp	r3, r4
 1260 0030 16D0     		beq	.L94
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1261              		.loc 1 1216 5 is_stmt 1 view .LVU350
 1262 0032 164A     		ldr	r2, .L96+8
 1263 0034 1368     		ldr	r3, [r2]
 1264 0036 013B     		subs	r3, r3, #1
 1265 0038 1360     		str	r3, [r2]
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1266              		.loc 1 1217 5 view .LVU351
 1267 003a 2000     		movs	r0, r4
 1268 003c FFF7FEFF 		bl	prvDeleteTCB
 1269              	.LVL106:
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1270              		.loc 1 1221 5 view .LVU352
 1271 0040 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1272              	.LVL107:
 1273              	.L89:
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1274              		.loc 1 1224 29 view .LVU353
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1275              		.loc 1 1226 3 view .LVU354
 1276 0044 FFF7FEFF 		bl	vPortExitCritical
 1277              	.LVL108:
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1278              		.loc 1 1230 3 view .LVU355
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1279              		.loc 1 1230 25 is_stmt 0 view .LVU356
 1280 0048 114B     		ldr	r3, .L96+12
 1281 004a 1B68     		ldr	r3, [r3]
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1282              		.loc 1 1230 5 view .LVU357
 1283 004c 002B     		cmp	r3, #0
 1284 004e 03D0     		beq	.L85
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1285              		.loc 1 1232 4 is_stmt 1 view .LVU358
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1286              		.loc 1 1232 14 is_stmt 0 view .LVU359
 1287 0050 0D4B     		ldr	r3, .L96+4
 1288 0052 1B68     		ldr	r3, [r3]
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1289              		.loc 1 1232 6 view .LVU360
 1290 0054 A342     		cmp	r3, r4
 1291 0056 0CD0     		beq	.L95
 1292              	.L85:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1293              		.loc 1 1242 2 view .LVU361
ARM GAS  /tmp/ccPYbq7S.s 			page 120


 1294              		@ sp needed
 1295              	.LVL109:
 1296              	.LVL110:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1297              		.loc 1 1242 2 view .LVU362
 1298 0058 70BD     		pop	{r4, r5, r6, pc}
 1299              	.LVL111:
 1300              	.L93:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1301              		.loc 1 1165 12 discriminator 1 view .LVU363
 1302 005a 0B4B     		ldr	r3, .L96+4
 1303 005c 1C68     		ldr	r4, [r3]
 1304              	.LVL112:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1305              		.loc 1 1165 12 discriminator 1 view .LVU364
 1306 005e D5E7     		b	.L86
 1307              	.LVL113:
 1308              	.L94:
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1309              		.loc 1 1200 5 is_stmt 1 view .LVU365
 1310 0060 2900     		movs	r1, r5
 1311 0062 0C48     		ldr	r0, .L96+16
 1312 0064 FFF7FEFF 		bl	vListInsertEnd
 1313              	.LVL114:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1314              		.loc 1 1205 5 view .LVU366
 1315 0068 0B4A     		ldr	r2, .L96+20
 1316 006a 1368     		ldr	r3, [r2]
 1317 006c 0133     		adds	r3, r3, #1
 1318 006e 1360     		str	r3, [r2]
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1319              		.loc 1 1212 54 view .LVU367
 1320 0070 E8E7     		b	.L89
 1321              	.L95:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1322              		.loc 1 1234 5 view .LVU368
 1323 0072 0A4B     		ldr	r3, .L96+24
 1324 0074 1B68     		ldr	r3, [r3]
 1325 0076 002B     		cmp	r3, #0
 1326 0078 01D0     		beq	.L91
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1327              		.loc 1 1234 5 discriminator 1 view .LVU369
 1328              		.syntax divided
 1329              	@ 1234 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1330 007a 72B6     		 cpsid i 
 1331              	@ 0 "" 2
 1332              		.thumb
 1333              		.syntax unified
 1334              	.L92:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1335              		.loc 1 1234 5 discriminator 1 view .LVU370
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1336              		.loc 1 1234 5 discriminator 1 view .LVU371
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1337              		.loc 1 1234 5 discriminator 1 view .LVU372
 1338 007c FEE7     		b	.L92
 1339              	.L91:
ARM GAS  /tmp/ccPYbq7S.s 			page 121


1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1340              		.loc 1 1234 46 discriminator 2 view .LVU373
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1341              		.loc 1 1235 5 discriminator 2 view .LVU374
 1342 007e FFF7FEFF 		bl	vPortYield
 1343              	.LVL115:
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1344              		.loc 1 1239 29 discriminator 2 view .LVU375
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1345              		.loc 1 1242 2 is_stmt 0 discriminator 2 view .LVU376
 1346 0082 E9E7     		b	.L85
 1347              	.L97:
 1348              		.align	2
 1349              	.L96:
 1350 0084 00000000 		.word	.LANCHOR11
 1351 0088 00000000 		.word	.LANCHOR9
 1352 008c 00000000 		.word	.LANCHOR8
 1353 0090 00000000 		.word	.LANCHOR10
 1354 0094 00000000 		.word	.LANCHOR6
 1355 0098 00000000 		.word	.LANCHOR13
 1356 009c 00000000 		.word	.LANCHOR15
 1357              		.cfi_endproc
 1358              	.LFE4:
 1360              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1361              		.align	1
 1362              		.global	uxTaskPriorityGet
 1363              		.syntax unified
 1364              		.code	16
 1365              		.thumb_func
 1367              	uxTaskPriorityGet:
 1368              	.LVL116:
 1369              	.LFB6:
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1370              		.loc 1 1471 2 is_stmt 1 view -0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1374              		.loc 1 1471 2 is_stmt 0 view .LVU378
 1375 0000 10B5     		push	{r4, lr}
 1376              	.LCFI13:
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 4, -8
 1379              		.cfi_offset 14, -4
 1380 0002 0400     		movs	r4, r0
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1381              		.loc 1 1472 2 is_stmt 1 view .LVU379
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1382              		.loc 1 1473 2 view .LVU380
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1383              		.loc 1 1475 3 view .LVU381
 1384 0004 FFF7FEFF 		bl	vPortEnterCritical
 1385              	.LVL117:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1386              		.loc 1 1479 4 view .LVU382
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1387              		.loc 1 1479 12 is_stmt 0 view .LVU383
ARM GAS  /tmp/ccPYbq7S.s 			page 122


 1388 0008 002C     		cmp	r4, #0
 1389 000a 04D0     		beq	.L100
 1390              	.LVL118:
 1391              	.L99:
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1392              		.loc 1 1480 4 is_stmt 1 discriminator 4 view .LVU384
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1393              		.loc 1 1480 13 is_stmt 0 discriminator 4 view .LVU385
 1394 000c E46A     		ldr	r4, [r4, #44]
 1395              	.LVL119:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1396              		.loc 1 1482 3 is_stmt 1 discriminator 4 view .LVU386
 1397 000e FFF7FEFF 		bl	vPortExitCritical
 1398              	.LVL120:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1399              		.loc 1 1484 3 discriminator 4 view .LVU387
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1400              		.loc 1 1485 2 is_stmt 0 discriminator 4 view .LVU388
 1401 0012 2000     		movs	r0, r4
 1402              		@ sp needed
 1403              	.LVL121:
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1404              		.loc 1 1485 2 discriminator 4 view .LVU389
 1405 0014 10BD     		pop	{r4, pc}
 1406              	.LVL122:
 1407              	.L100:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1408              		.loc 1 1479 12 discriminator 1 view .LVU390
 1409 0016 014B     		ldr	r3, .L101
 1410 0018 1C68     		ldr	r4, [r3]
 1411              	.LVL123:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1412              		.loc 1 1479 12 discriminator 1 view .LVU391
 1413 001a F7E7     		b	.L99
 1414              	.L102:
 1415              		.align	2
 1416              	.L101:
 1417 001c 00000000 		.word	.LANCHOR9
 1418              		.cfi_endproc
 1419              	.LFE6:
 1421              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1422              		.align	1
 1423              		.global	uxTaskPriorityGetFromISR
 1424              		.syntax unified
 1425              		.code	16
 1426              		.thumb_func
 1428              	uxTaskPriorityGetFromISR:
 1429              	.LVL124:
 1430              	.LFB7:
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1431              		.loc 1 1493 2 is_stmt 1 view -0
 1432              		.cfi_startproc
 1433              		@ args = 0, pretend = 0, frame = 0
 1434              		@ frame_needed = 0, uses_anonymous_args = 0
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1435              		.loc 1 1493 2 is_stmt 0 view .LVU393
 1436 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccPYbq7S.s 			page 123


 1437              	.LCFI14:
 1438              		.cfi_def_cfa_offset 8
 1439              		.cfi_offset 4, -8
 1440              		.cfi_offset 14, -4
 1441 0002 0400     		movs	r4, r0
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1442              		.loc 1 1494 2 is_stmt 1 view .LVU394
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1443              		.loc 1 1495 2 view .LVU395
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1444              		.loc 1 1513 45 view .LVU396
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1445              		.loc 1 1515 3 view .LVU397
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1446              		.loc 1 1515 27 is_stmt 0 view .LVU398
 1447 0004 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1448              	.LVL125:
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1449              		.loc 1 1519 4 is_stmt 1 view .LVU399
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1450              		.loc 1 1519 12 is_stmt 0 view .LVU400
 1451 0008 002C     		cmp	r4, #0
 1452 000a 04D0     		beq	.L105
 1453              	.LVL126:
 1454              	.L104:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1455              		.loc 1 1520 4 is_stmt 1 discriminator 4 view .LVU401
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1456              		.loc 1 1520 13 is_stmt 0 discriminator 4 view .LVU402
 1457 000c E46A     		ldr	r4, [r4, #44]
 1458              	.LVL127:
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1459              		.loc 1 1522 3 is_stmt 1 discriminator 4 view .LVU403
 1460 000e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1461              	.LVL128:
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1462              		.loc 1 1524 3 discriminator 4 view .LVU404
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1463              		.loc 1 1525 2 is_stmt 0 discriminator 4 view .LVU405
 1464 0012 2000     		movs	r0, r4
 1465              		@ sp needed
 1466              	.LVL129:
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1467              		.loc 1 1525 2 discriminator 4 view .LVU406
 1468 0014 10BD     		pop	{r4, pc}
 1469              	.LVL130:
 1470              	.L105:
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1471              		.loc 1 1519 12 discriminator 1 view .LVU407
 1472 0016 014B     		ldr	r3, .L106
 1473 0018 1C68     		ldr	r4, [r3]
 1474              	.LVL131:
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1475              		.loc 1 1519 12 discriminator 1 view .LVU408
 1476 001a F7E7     		b	.L104
 1477              	.L107:
 1478              		.align	2
ARM GAS  /tmp/ccPYbq7S.s 			page 124


 1479              	.L106:
 1480 001c 00000000 		.word	.LANCHOR9
 1481              		.cfi_endproc
 1482              	.LFE7:
 1484              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1485              		.align	1
 1486              		.global	vTaskPrioritySet
 1487              		.syntax unified
 1488              		.code	16
 1489              		.thumb_func
 1491              	vTaskPrioritySet:
 1492              	.LVL132:
 1493              	.LFB8:
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1494              		.loc 1 1533 2 is_stmt 1 view -0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1498              		.loc 1 1533 2 is_stmt 0 view .LVU410
 1499 0000 70B5     		push	{r4, r5, r6, lr}
 1500              	.LCFI15:
 1501              		.cfi_def_cfa_offset 16
 1502              		.cfi_offset 4, -16
 1503              		.cfi_offset 5, -12
 1504              		.cfi_offset 6, -8
 1505              		.cfi_offset 14, -4
 1506 0002 0400     		movs	r4, r0
 1507 0004 0D00     		movs	r5, r1
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1508              		.loc 1 1534 2 is_stmt 1 view .LVU411
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1509              		.loc 1 1535 2 view .LVU412
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1510              		.loc 1 1536 2 view .LVU413
 1511              	.LVL133:
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1512              		.loc 1 1538 3 view .LVU414
 1513 0006 0629     		cmp	r1, #6
 1514 0008 01D9     		bls	.L109
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1515              		.loc 1 1538 3 discriminator 1 view .LVU415
 1516              		.syntax divided
 1517              	@ 1538 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1518 000a 72B6     		 cpsid i 
 1519              	@ 0 "" 2
 1520              		.thumb
 1521              		.syntax unified
 1522              	.L110:
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1523              		.loc 1 1538 3 discriminator 1 view .LVU416
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1524              		.loc 1 1538 3 discriminator 1 view .LVU417
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1525              		.loc 1 1538 3 discriminator 1 view .LVU418
 1526 000c FEE7     		b	.L110
 1527              	.L109:
ARM GAS  /tmp/ccPYbq7S.s 			page 125


1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1528              		.loc 1 1538 59 view .LVU419
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1529              		.loc 1 1541 3 view .LVU420
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1530              		.loc 1 1547 28 view .LVU421
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1531              		.loc 1 1550 3 view .LVU422
 1532 000e FFF7FEFF 		bl	vPortEnterCritical
 1533              	.LVL134:
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1534              		.loc 1 1554 4 view .LVU423
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1535              		.loc 1 1554 12 is_stmt 0 view .LVU424
 1536 0012 002C     		cmp	r4, #0
 1537 0014 0ED0     		beq	.L122
 1538              	.LVL135:
 1539              	.L111:
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1540              		.loc 1 1556 50 is_stmt 1 discriminator 4 view .LVU425
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1541              		.loc 1 1560 5 discriminator 4 view .LVU426
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1542              		.loc 1 1560 27 is_stmt 0 discriminator 4 view .LVU427
 1543 0016 626C     		ldr	r2, [r4, #68]
 1544              	.LVL136:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1545              		.loc 1 1568 4 is_stmt 1 discriminator 4 view .LVU428
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1546              		.loc 1 1568 6 is_stmt 0 discriminator 4 view .LVU429
 1547 0018 9542     		cmp	r5, r2
 1548 001a 27D0     		beq	.L112
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1549              		.loc 1 1572 5 is_stmt 1 view .LVU430
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1550              		.loc 1 1572 7 is_stmt 0 view .LVU431
 1551 001c 0DD9     		bls	.L113
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1552              		.loc 1 1574 6 is_stmt 1 view .LVU432
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1553              		.loc 1 1574 16 is_stmt 0 view .LVU433
 1554 001e 244B     		ldr	r3, .L126
 1555 0020 1B68     		ldr	r3, [r3]
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1556              		.loc 1 1574 8 view .LVU434
 1557 0022 A342     		cmp	r3, r4
 1558 0024 25D0     		beq	.L119
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1559              		.loc 1 1579 7 is_stmt 1 view .LVU435
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1560              		.loc 1 1579 40 is_stmt 0 view .LVU436
 1561 0026 224B     		ldr	r3, .L126
 1562 0028 1B68     		ldr	r3, [r3]
 1563 002a DB6A     		ldr	r3, [r3, #44]
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1564              		.loc 1 1579 9 view .LVU437
 1565 002c AB42     		cmp	r3, r5
ARM GAS  /tmp/ccPYbq7S.s 			page 126


 1566 002e 22D9     		bls	.L120
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1567              		.loc 1 1536 13 view .LVU438
 1568 0030 0026     		movs	r6, #0
 1569 0032 07E0     		b	.L114
 1570              	.LVL137:
 1571              	.L122:
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1572              		.loc 1 1554 12 discriminator 1 view .LVU439
 1573 0034 1E4B     		ldr	r3, .L126
 1574 0036 1C68     		ldr	r4, [r3]
 1575              	.LVL138:
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1576              		.loc 1 1554 12 discriminator 1 view .LVU440
 1577 0038 EDE7     		b	.L111
 1578              	.LVL139:
 1579              	.L113:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1580              		.loc 1 1595 10 is_stmt 1 view .LVU441
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1581              		.loc 1 1595 20 is_stmt 0 view .LVU442
 1582 003a 1D4B     		ldr	r3, .L126
 1583 003c 1B68     		ldr	r3, [r3]
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1584              		.loc 1 1595 12 view .LVU443
 1585 003e A342     		cmp	r3, r4
 1586 0040 1BD0     		beq	.L121
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1587              		.loc 1 1536 13 view .LVU444
 1588 0042 0026     		movs	r6, #0
 1589              	.L114:
 1590              	.LVL140:
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1591              		.loc 1 1607 5 is_stmt 1 view .LVU445
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1592              		.loc 1 1612 5 view .LVU446
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1593              		.loc 1 1612 27 is_stmt 0 view .LVU447
 1594 0044 E16A     		ldr	r1, [r4, #44]
 1595              	.LVL141:
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1596              		.loc 1 1618 6 is_stmt 1 view .LVU448
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1597              		.loc 1 1618 8 is_stmt 0 view .LVU449
 1598 0046 8A42     		cmp	r2, r1
 1599 0048 19D0     		beq	.L123
 1600              	.L115:
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1601              		.loc 1 1624 31 is_stmt 1 view .LVU450
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1602              		.loc 1 1628 6 view .LVU451
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1603              		.loc 1 1628 28 is_stmt 0 view .LVU452
 1604 004a 6564     		str	r5, [r4, #68]
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1605              		.loc 1 1638 5 is_stmt 1 view .LVU453
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccPYbq7S.s 			page 127


 1606              		.loc 1 1638 7 is_stmt 0 view .LVU454
 1607 004c A369     		ldr	r3, [r4, #24]
 1608 004e 002B     		cmp	r3, #0
 1609 0050 02DB     		blt	.L116
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1610              		.loc 1 1640 6 is_stmt 1 view .LVU455
 1611 0052 0723     		movs	r3, #7
 1612 0054 5D1B     		subs	r5, r3, r5
 1613              	.LVL142:
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1614              		.loc 1 1640 6 is_stmt 0 view .LVU456
 1615 0056 A561     		str	r5, [r4, #24]
 1616              	.L116:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1617              		.loc 1 1644 30 is_stmt 1 view .LVU457
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1618              		.loc 1 1651 5 view .LVU458
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1619              		.loc 1 1651 9 is_stmt 0 view .LVU459
 1620 0058 8B00     		lsls	r3, r1, #2
 1621 005a 5B18     		adds	r3, r3, r1
 1622 005c 9B00     		lsls	r3, r3, #2
 1623 005e 154A     		ldr	r2, .L126+4
 1624              	.LVL143:
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1625              		.loc 1 1651 9 view .LVU460
 1626 0060 9B18     		adds	r3, r3, r2
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1627              		.loc 1 1651 7 view .LVU461
 1628 0062 6269     		ldr	r2, [r4, #20]
 1629 0064 9A42     		cmp	r2, r3
 1630 0066 0CD0     		beq	.L124
 1631              	.LVL144:
 1632              	.L117:
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1633              		.loc 1 1671 30 is_stmt 1 view .LVU462
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1634              		.loc 1 1674 5 view .LVU463
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1635              		.loc 1 1674 7 is_stmt 0 view .LVU464
 1636 0068 002E     		cmp	r6, #0
 1637 006a 1ED1     		bne	.L125
 1638              	.LVL145:
 1639              	.L112:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1640              		.loc 1 1680 30 is_stmt 1 view .LVU465
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1641              		.loc 1 1685 5 view .LVU466
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1642              		.loc 1 1688 3 view .LVU467
 1643 006c FFF7FEFF 		bl	vPortExitCritical
 1644              	.LVL146:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1645              		.loc 1 1689 2 is_stmt 0 view .LVU468
 1646              		@ sp needed
 1647              	.LVL147:
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 128


 1648              		.loc 1 1689 2 view .LVU469
 1649 0070 70BD     		pop	{r4, r5, r6, pc}
 1650              	.LVL148:
 1651              	.L119:
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1652              		.loc 1 1536 13 view .LVU470
 1653 0072 0026     		movs	r6, #0
 1654 0074 E6E7     		b	.L114
 1655              	.L120:
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1656              		.loc 1 1581 23 view .LVU471
 1657 0076 0126     		movs	r6, #1
 1658 0078 E4E7     		b	.L114
 1659              	.L121:
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1660              		.loc 1 1600 21 view .LVU472
 1661 007a 0126     		movs	r6, #1
 1662 007c E2E7     		b	.L114
 1663              	.LVL149:
 1664              	.L123:
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1665              		.loc 1 1620 7 is_stmt 1 view .LVU473
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1666              		.loc 1 1620 25 is_stmt 0 view .LVU474
 1667 007e E562     		str	r5, [r4, #44]
 1668 0080 E3E7     		b	.L115
 1669              	.LVL150:
 1670              	.L124:
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1671              		.loc 1 1656 6 is_stmt 1 view .LVU475
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1672              		.loc 1 1656 10 is_stmt 0 view .LVU476
 1673 0082 251D     		adds	r5, r4, #4
 1674 0084 2800     		movs	r0, r5
 1675 0086 FFF7FEFF 		bl	uxListRemove
 1676              	.LVL151:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1677              		.loc 1 1665 31 is_stmt 1 view .LVU477
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1678              		.loc 1 1667 6 view .LVU478
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1679              		.loc 1 1667 6 view .LVU479
 1680 008a E36A     		ldr	r3, [r4, #44]
 1681 008c 0A4A     		ldr	r2, .L126+8
 1682 008e 1268     		ldr	r2, [r2]
 1683 0090 9342     		cmp	r3, r2
 1684 0092 01D9     		bls	.L118
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1685              		.loc 1 1667 6 discriminator 1 view .LVU480
 1686 0094 084A     		ldr	r2, .L126+8
 1687 0096 1360     		str	r3, [r2]
 1688              	.L118:
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1689              		.loc 1 1667 6 discriminator 3 view .LVU481
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1690              		.loc 1 1667 6 discriminator 3 view .LVU482
 1691 0098 9800     		lsls	r0, r3, #2
ARM GAS  /tmp/ccPYbq7S.s 			page 129


 1692 009a C018     		adds	r0, r0, r3
 1693 009c 8000     		lsls	r0, r0, #2
 1694 009e 054B     		ldr	r3, .L126+4
 1695 00a0 C018     		adds	r0, r0, r3
 1696 00a2 2900     		movs	r1, r5
 1697 00a4 FFF7FEFF 		bl	vListInsertEnd
 1698              	.LVL152:
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1699              		.loc 1 1667 36 discriminator 3 view .LVU483
 1700 00a8 DEE7     		b	.L117
 1701              	.L125:
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1702              		.loc 1 1676 6 view .LVU484
 1703 00aa FFF7FEFF 		bl	vPortYield
 1704              	.LVL153:
 1705 00ae DDE7     		b	.L112
 1706              	.L127:
 1707              		.align	2
 1708              	.L126:
 1709 00b0 00000000 		.word	.LANCHOR9
 1710 00b4 00000000 		.word	pxReadyTasksLists
 1711 00b8 00000000 		.word	.LANCHOR12
 1712              		.cfi_endproc
 1713              	.LFE8:
 1715              		.section	.text.vTaskResume,"ax",%progbits
 1716              		.align	1
 1717              		.global	vTaskResume
 1718              		.syntax unified
 1719              		.code	16
 1720              		.thumb_func
 1722              	vTaskResume:
 1723              	.LVL154:
 1724              	.LFB11:
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1725              		.loc 1 1844 2 view -0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1729              		.loc 1 1844 2 is_stmt 0 view .LVU486
 1730 0000 70B5     		push	{r4, r5, r6, lr}
 1731              	.LCFI16:
 1732              		.cfi_def_cfa_offset 16
 1733              		.cfi_offset 4, -16
 1734              		.cfi_offset 5, -12
 1735              		.cfi_offset 6, -8
 1736              		.cfi_offset 14, -4
 1737 0002 041E     		subs	r4, r0, #0
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1738              		.loc 1 1845 2 is_stmt 1 view .LVU487
 1739              	.LVL155:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1740              		.loc 1 1848 3 view .LVU488
 1741 0004 0DD0     		beq	.L134
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1742              		.loc 1 1848 32 discriminator 2 view .LVU489
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 130


 1743              		.loc 1 1852 3 discriminator 2 view .LVU490
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1744              		.loc 1 1852 15 is_stmt 0 discriminator 2 view .LVU491
 1745 0006 164B     		ldr	r3, .L136
 1746 0008 1B68     		ldr	r3, [r3]
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1747              		.loc 1 1852 5 discriminator 2 view .LVU492
 1748 000a 8342     		cmp	r3, r0
 1749 000c 08D0     		beq	.L128
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1750              		.loc 1 1854 4 is_stmt 1 view .LVU493
 1751 000e FFF7FEFF 		bl	vPortEnterCritical
 1752              	.LVL156:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1753              		.loc 1 1856 5 view .LVU494
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1754              		.loc 1 1856 9 is_stmt 0 view .LVU495
 1755 0012 2000     		movs	r0, r4
 1756 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1757              	.LVL157:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1758              		.loc 1 1856 7 view .LVU496
 1759 0018 0028     		cmp	r0, #0
 1760 001a 04D1     		bne	.L135
 1761              	.L132:
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1762              		.loc 1 1880 30 is_stmt 1 view .LVU497
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1763              		.loc 1 1883 4 view .LVU498
 1764 001c FFF7FEFF 		bl	vPortExitCritical
 1765              	.LVL158:
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1766              		.loc 1 1887 28 view .LVU499
 1767              	.L128:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1768              		.loc 1 1889 2 is_stmt 0 view .LVU500
 1769              		@ sp needed
 1770              	.LVL159:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1771              		.loc 1 1889 2 view .LVU501
 1772 0020 70BD     		pop	{r4, r5, r6, pc}
 1773              	.LVL160:
 1774              	.L134:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1775              		.loc 1 1848 3 is_stmt 1 discriminator 1 view .LVU502
 1776              		.syntax divided
 1777              	@ 1848 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1778 0022 72B6     		 cpsid i 
 1779              	@ 0 "" 2
 1780              		.thumb
 1781              		.syntax unified
 1782              	.L130:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1783              		.loc 1 1848 3 discriminator 1 view .LVU503
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1784              		.loc 1 1848 3 discriminator 1 view .LVU504
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 131


 1785              		.loc 1 1848 3 discriminator 1 view .LVU505
 1786 0024 FEE7     		b	.L130
 1787              	.LVL161:
 1788              	.L135:
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1789              		.loc 1 1858 31 view .LVU506
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1790              		.loc 1 1862 6 view .LVU507
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1791              		.loc 1 1862 15 is_stmt 0 view .LVU508
 1792 0026 251D     		adds	r5, r4, #4
 1793 0028 2800     		movs	r0, r5
 1794 002a FFF7FEFF 		bl	uxListRemove
 1795              	.LVL162:
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1796              		.loc 1 1863 6 is_stmt 1 view .LVU509
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1797              		.loc 1 1863 6 view .LVU510
 1798 002e E36A     		ldr	r3, [r4, #44]
 1799 0030 0C4A     		ldr	r2, .L136+4
 1800 0032 1268     		ldr	r2, [r2]
 1801 0034 9342     		cmp	r3, r2
 1802 0036 01D9     		bls	.L133
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1803              		.loc 1 1863 6 discriminator 1 view .LVU511
 1804 0038 0A4A     		ldr	r2, .L136+4
 1805 003a 1360     		str	r3, [r2]
 1806              	.L133:
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1807              		.loc 1 1863 6 discriminator 3 view .LVU512
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1808              		.loc 1 1863 6 discriminator 3 view .LVU513
 1809 003c 9800     		lsls	r0, r3, #2
 1810 003e C018     		adds	r0, r0, r3
 1811 0040 8000     		lsls	r0, r0, #2
 1812 0042 094B     		ldr	r3, .L136+8
 1813 0044 C018     		adds	r0, r0, r3
 1814 0046 2900     		movs	r1, r5
 1815 0048 FFF7FEFF 		bl	vListInsertEnd
 1816              	.LVL163:
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1817              		.loc 1 1863 36 discriminator 3 view .LVU514
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1818              		.loc 1 1866 6 discriminator 3 view .LVU515
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1819              		.loc 1 1866 15 is_stmt 0 discriminator 3 view .LVU516
 1820 004c E26A     		ldr	r2, [r4, #44]
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1821              		.loc 1 1866 43 discriminator 3 view .LVU517
 1822 004e 044B     		ldr	r3, .L136
 1823 0050 1B68     		ldr	r3, [r3]
 1824 0052 DB6A     		ldr	r3, [r3, #44]
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1825              		.loc 1 1866 8 discriminator 3 view .LVU518
 1826 0054 9A42     		cmp	r2, r3
 1827 0056 E1D3     		bcc	.L132
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccPYbq7S.s 			page 132


 1828              		.loc 1 1871 7 is_stmt 1 view .LVU519
 1829 0058 FFF7FEFF 		bl	vPortYield
 1830              	.LVL164:
 1831 005c DEE7     		b	.L132
 1832              	.L137:
 1833 005e C046     		.align	2
 1834              	.L136:
 1835 0060 00000000 		.word	.LANCHOR9
 1836 0064 00000000 		.word	.LANCHOR12
 1837 0068 00000000 		.word	pxReadyTasksLists
 1838              		.cfi_endproc
 1839              	.LFE11:
 1841              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1842              		.align	1
 1843              		.global	xTaskResumeFromISR
 1844              		.syntax unified
 1845              		.code	16
 1846              		.thumb_func
 1848              	xTaskResumeFromISR:
 1849              	.LVL165:
 1850              	.LFB12:
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1851              		.loc 1 1898 2 view -0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1855              		.loc 1 1898 2 is_stmt 0 view .LVU521
 1856 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1857              	.LCFI17:
 1858              		.cfi_def_cfa_offset 24
 1859              		.cfi_offset 3, -24
 1860              		.cfi_offset 4, -20
 1861              		.cfi_offset 5, -16
 1862              		.cfi_offset 6, -12
 1863              		.cfi_offset 7, -8
 1864              		.cfi_offset 14, -4
 1865 0002 041E     		subs	r4, r0, #0
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1866              		.loc 1 1899 2 is_stmt 1 view .LVU522
 1867              	.LVL166:
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1868              		.loc 1 1900 2 view .LVU523
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1869              		.loc 1 1901 2 view .LVU524
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1870              		.loc 1 1903 3 view .LVU525
 1871 0004 2AD0     		beq	.L146
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1872              		.loc 1 1903 32 discriminator 2 view .LVU526
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1873              		.loc 1 1921 45 discriminator 2 view .LVU527
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1874              		.loc 1 1923 3 discriminator 2 view .LVU528
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1875              		.loc 1 1923 28 is_stmt 0 discriminator 2 view .LVU529
 1876 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
ARM GAS  /tmp/ccPYbq7S.s 			page 133


 1877              	.LVL167:
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1878              		.loc 1 1923 28 discriminator 2 view .LVU530
 1879 000a 0600     		movs	r6, r0
 1880              	.LVL168:
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1881              		.loc 1 1925 4 is_stmt 1 discriminator 2 view .LVU531
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1882              		.loc 1 1925 8 is_stmt 0 discriminator 2 view .LVU532
 1883 000c 2000     		movs	r0, r4
 1884              	.LVL169:
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1885              		.loc 1 1925 8 discriminator 2 view .LVU533
 1886 000e FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1887              	.LVL170:
 1888 0012 051E     		subs	r5, r0, #0
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1889              		.loc 1 1925 6 discriminator 2 view .LVU534
 1890 0014 1DD0     		beq	.L141
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1891              		.loc 1 1927 39 is_stmt 1 view .LVU535
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1892              		.loc 1 1930 5 view .LVU536
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1893              		.loc 1 1930 30 is_stmt 0 view .LVU537
 1894 0016 174B     		ldr	r3, .L147
 1895 0018 1B68     		ldr	r3, [r3]
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1896              		.loc 1 1930 7 view .LVU538
 1897 001a 002B     		cmp	r3, #0
 1898 001c 22D1     		bne	.L142
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1899              		.loc 1 1934 6 is_stmt 1 view .LVU539
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1900              		.loc 1 1934 43 is_stmt 0 view .LVU540
 1901 001e 164B     		ldr	r3, .L147+4
 1902 0020 1B68     		ldr	r3, [r3]
 1903 0022 DB6A     		ldr	r3, [r3, #44]
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1904              		.loc 1 1934 8 view .LVU541
 1905 0024 E26A     		ldr	r2, [r4, #44]
 1906 0026 9A42     		cmp	r2, r3
 1907 0028 1AD2     		bcs	.L145
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1908              		.loc 1 1899 13 view .LVU542
 1909 002a 0025     		movs	r5, #0
 1910              	.L143:
 1911              	.LVL171:
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1912              		.loc 1 1940 31 is_stmt 1 view .LVU543
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1913              		.loc 1 1943 6 view .LVU544
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1914              		.loc 1 1943 15 is_stmt 0 view .LVU545
 1915 002c 271D     		adds	r7, r4, #4
 1916 002e 3800     		movs	r0, r7
 1917 0030 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccPYbq7S.s 			page 134


 1918              	.LVL172:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1919              		.loc 1 1944 6 is_stmt 1 view .LVU546
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1920              		.loc 1 1944 6 view .LVU547
 1921 0034 E36A     		ldr	r3, [r4, #44]
 1922 0036 114A     		ldr	r2, .L147+8
 1923 0038 1268     		ldr	r2, [r2]
 1924 003a 9342     		cmp	r3, r2
 1925 003c 01D9     		bls	.L144
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1926              		.loc 1 1944 6 discriminator 1 view .LVU548
 1927 003e 0F4A     		ldr	r2, .L147+8
 1928 0040 1360     		str	r3, [r2]
 1929              	.L144:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1930              		.loc 1 1944 6 discriminator 3 view .LVU549
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1931              		.loc 1 1944 6 discriminator 3 view .LVU550
 1932 0042 9800     		lsls	r0, r3, #2
 1933 0044 C018     		adds	r0, r0, r3
 1934 0046 8000     		lsls	r0, r0, #2
 1935 0048 0D4B     		ldr	r3, .L147+12
 1936 004a C018     		adds	r0, r0, r3
 1937 004c 3900     		movs	r1, r7
 1938 004e FFF7FEFF 		bl	vListInsertEnd
 1939              	.LVL173:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1940              		.loc 1 1944 36 discriminator 3 view .LVU551
 1941              	.L141:
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1942              		.loc 1 1956 29 view .LVU552
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1943              		.loc 1 1959 3 view .LVU553
 1944 0052 3000     		movs	r0, r6
 1945 0054 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1946              	.LVL174:
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1947              		.loc 1 1961 3 view .LVU554
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1948              		.loc 1 1962 2 is_stmt 0 view .LVU555
 1949 0058 2800     		movs	r0, r5
 1950              		@ sp needed
 1951              	.LVL175:
 1952              	.LVL176:
 1953              	.LVL177:
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1954              		.loc 1 1962 2 view .LVU556
 1955 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1956              	.LVL178:
 1957              	.L146:
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1958              		.loc 1 1903 3 is_stmt 1 discriminator 1 view .LVU557
 1959              		.syntax divided
 1960              	@ 1903 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1961 005c 72B6     		 cpsid i 
 1962              	@ 0 "" 2
ARM GAS  /tmp/ccPYbq7S.s 			page 135


 1963              		.thumb
 1964              		.syntax unified
 1965              	.L140:
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1966              		.loc 1 1903 3 discriminator 1 view .LVU558
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1967              		.loc 1 1903 3 discriminator 1 view .LVU559
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1968              		.loc 1 1903 3 discriminator 1 view .LVU560
 1969 005e FEE7     		b	.L140
 1970              	.LVL179:
 1971              	.L145:
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1972              		.loc 1 1936 22 is_stmt 0 view .LVU561
 1973 0060 0125     		movs	r5, #1
 1974 0062 E3E7     		b	.L143
 1975              	.L142:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1976              		.loc 1 1951 6 is_stmt 1 view .LVU562
 1977 0064 2100     		movs	r1, r4
 1978 0066 1831     		adds	r1, r1, #24
 1979 0068 0648     		ldr	r0, .L147+16
 1980 006a FFF7FEFF 		bl	vListInsertEnd
 1981              	.LVL180:
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1982              		.loc 1 1899 13 is_stmt 0 view .LVU563
 1983 006e 0025     		movs	r5, #0
 1984 0070 EFE7     		b	.L141
 1985              	.L148:
 1986 0072 C046     		.align	2
 1987              	.L147:
 1988 0074 00000000 		.word	.LANCHOR15
 1989 0078 00000000 		.word	.LANCHOR9
 1990 007c 00000000 		.word	.LANCHOR12
 1991 0080 00000000 		.word	pxReadyTasksLists
 1992 0084 00000000 		.word	.LANCHOR1
 1993              		.cfi_endproc
 1994              	.LFE12:
 1996              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 1997              		.align	2
 1998              	.LC48:
 1999 0000 49444C45 		.ascii	"IDLE\000"
 1999      00
 2000              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2001              		.align	1
 2002              		.global	vTaskStartScheduler
 2003              		.syntax unified
 2004              		.code	16
 2005              		.thumb_func
 2007              	vTaskStartScheduler:
 2008              	.LFB13:
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2009              		.loc 1 1968 1 is_stmt 1 view -0
 2010              		.cfi_startproc
 2011              		@ args = 0, pretend = 0, frame = 16
 2012              		@ frame_needed = 0, uses_anonymous_args = 0
 2013 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccPYbq7S.s 			page 136


 2014              	.LCFI18:
 2015              		.cfi_def_cfa_offset 8
 2016              		.cfi_offset 4, -8
 2017              		.cfi_offset 14, -4
 2018 0002 88B0     		sub	sp, sp, #32
 2019              	.LCFI19:
 2020              		.cfi_def_cfa_offset 40
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2021              		.loc 1 1969 1 view .LVU565
 2022              	.LBB7:
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2023              		.loc 1 1974 3 view .LVU566
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2024              		.loc 1 1974 17 is_stmt 0 view .LVU567
 2025 0004 0024     		movs	r4, #0
 2026 0006 0594     		str	r4, [sp, #20]
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2027              		.loc 1 1975 3 is_stmt 1 view .LVU568
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2028              		.loc 1 1975 16 is_stmt 0 view .LVU569
 2029 0008 0694     		str	r4, [sp, #24]
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2030              		.loc 1 1976 3 is_stmt 1 view .LVU570
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2031              		.loc 1 1980 3 view .LVU571
 2032 000a 07AA     		add	r2, sp, #28
 2033 000c 06A9     		add	r1, sp, #24
 2034 000e 05A8     		add	r0, sp, #20
 2035 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2036              	.LVL181:
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2037              		.loc 1 1981 3 view .LVU572
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2038              		.loc 1 1981 21 is_stmt 0 view .LVU573
 2039 0014 059B     		ldr	r3, [sp, #20]
 2040 0016 0293     		str	r3, [sp, #8]
 2041 0018 069B     		ldr	r3, [sp, #24]
 2042 001a 0193     		str	r3, [sp, #4]
 2043 001c 0094     		str	r4, [sp]
 2044 001e 0023     		movs	r3, #0
 2045 0020 079A     		ldr	r2, [sp, #28]
 2046 0022 0B49     		ldr	r1, .L152
 2047 0024 0B48     		ldr	r0, .L152+4
 2048 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2049              	.LVL182:
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2050              		.loc 1 1981 19 view .LVU574
 2051 002a 0B4B     		ldr	r3, .L152+8
 2052 002c 1860     		str	r0, [r3]
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2053              		.loc 1 1989 3 is_stmt 1 view .LVU575
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2054              		.loc 1 1989 5 is_stmt 0 view .LVU576
 2055 002e 0028     		cmp	r0, #0
 2056 0030 0CD0     		beq	.L149
 2057              	.LVL183:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccPYbq7S.s 			page 137


 2058              		.loc 1 1989 5 view .LVU577
 2059              	.LBE7:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2060              		.loc 1 2023 2 is_stmt 1 view .LVU578
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2061              		.loc 1 2039 3 view .LVU579
 2062              		.syntax divided
 2063              	@ 2039 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2064 0032 72B6     		 cpsid i 
 2065              	@ 0 "" 2
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2066              		.loc 1 2049 3 view .LVU580
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2067              		.loc 1 2049 24 is_stmt 0 view .LVU581
 2068              		.thumb
 2069              		.syntax unified
 2070 0034 094B     		ldr	r3, .L152+12
 2071 0036 0122     		movs	r2, #1
 2072 0038 5242     		rsbs	r2, r2, #0
 2073 003a 1A60     		str	r2, [r3]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2074              		.loc 1 2050 3 is_stmt 1 view .LVU582
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2075              		.loc 1 2050 21 is_stmt 0 view .LVU583
 2076 003c 084B     		ldr	r3, .L152+16
 2077 003e 0232     		adds	r2, r2, #2
 2078 0040 1A60     		str	r2, [r3]
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2079              		.loc 1 2051 3 is_stmt 1 view .LVU584
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2080              		.loc 1 2051 14 is_stmt 0 view .LVU585
 2081 0042 084B     		ldr	r3, .L152+20
 2082 0044 0022     		movs	r2, #0
 2083 0046 1A60     		str	r2, [r3]
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2084              		.loc 1 2059 43 is_stmt 1 view .LVU586
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2085              		.loc 1 2061 26 view .LVU587
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2086              		.loc 1 2065 3 view .LVU588
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2087              		.loc 1 2065 7 is_stmt 0 view .LVU589
 2088 0048 FFF7FEFF 		bl	xPortStartScheduler
 2089              	.LVL184:
 2090              	.L149:
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2091              		.loc 1 2086 1 view .LVU590
 2092 004c 08B0     		add	sp, sp, #32
 2093              		@ sp needed
 2094 004e 10BD     		pop	{r4, pc}
 2095              	.L153:
 2096              		.align	2
 2097              	.L152:
 2098 0050 00000000 		.word	.LC48
 2099 0054 00000000 		.word	prvIdleTask
 2100 0058 00000000 		.word	.LANCHOR16
 2101 005c 00000000 		.word	.LANCHOR3
ARM GAS  /tmp/ccPYbq7S.s 			page 138


 2102 0060 00000000 		.word	.LANCHOR10
 2103 0064 00000000 		.word	.LANCHOR14
 2104              		.cfi_endproc
 2105              	.LFE13:
 2107              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2108              		.align	1
 2109              		.global	vTaskEndScheduler
 2110              		.syntax unified
 2111              		.code	16
 2112              		.thumb_func
 2114              	vTaskEndScheduler:
 2115              	.LFB14:
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2116              		.loc 1 2090 1 is_stmt 1 view -0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 0
 2119              		@ frame_needed = 0, uses_anonymous_args = 0
 2120 0000 10B5     		push	{r4, lr}
 2121              	.LCFI20:
 2122              		.cfi_def_cfa_offset 8
 2123              		.cfi_offset 4, -8
 2124              		.cfi_offset 14, -4
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2125              		.loc 1 2094 2 view .LVU592
 2126              		.syntax divided
 2127              	@ 2094 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2128 0002 72B6     		 cpsid i 
 2129              	@ 0 "" 2
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2130              		.loc 1 2095 2 view .LVU593
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2131              		.loc 1 2095 20 is_stmt 0 view .LVU594
 2132              		.thumb
 2133              		.syntax unified
 2134 0004 024B     		ldr	r3, .L155
 2135 0006 0022     		movs	r2, #0
 2136 0008 1A60     		str	r2, [r3]
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2137              		.loc 1 2096 2 is_stmt 1 view .LVU595
 2138 000a FFF7FEFF 		bl	vPortEndScheduler
 2139              	.LVL185:
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2140              		.loc 1 2097 1 is_stmt 0 view .LVU596
 2141              		@ sp needed
 2142 000e 10BD     		pop	{r4, pc}
 2143              	.L156:
 2144              		.align	2
 2145              	.L155:
 2146 0010 00000000 		.word	.LANCHOR10
 2147              		.cfi_endproc
 2148              	.LFE14:
 2150              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2151              		.align	1
 2152              		.global	vTaskSuspendAll
 2153              		.syntax unified
 2154              		.code	16
 2155              		.thumb_func
ARM GAS  /tmp/ccPYbq7S.s 			page 139


 2157              	vTaskSuspendAll:
 2158              	.LFB15:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2159              		.loc 1 2101 1 is_stmt 1 view -0
 2160              		.cfi_startproc
 2161              		@ args = 0, pretend = 0, frame = 0
 2162              		@ frame_needed = 0, uses_anonymous_args = 0
 2163              		@ link register save eliminated.
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
 2164              		.loc 1 2106 2 view .LVU598
 2165 0000 024A     		ldr	r2, .L158
 2166 0002 1368     		ldr	r3, [r2]
 2167 0004 0133     		adds	r3, r3, #1
 2168 0006 1360     		str	r3, [r2]
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2169              		.loc 1 2107 2 view .LVU599
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2170              		.loc 1 2108 1 is_stmt 0 view .LVU600
 2171              		@ sp needed
 2172 0008 7047     		bx	lr
 2173              	.L159:
 2174 000a C046     		.align	2
 2175              	.L158:
 2176 000c 00000000 		.word	.LANCHOR15
 2177              		.cfi_endproc
 2178              	.LFE15:
 2180              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2181              		.align	1
 2182              		.global	xTaskGetTickCount
 2183              		.syntax unified
 2184              		.code	16
 2185              		.thumb_func
 2187              	xTaskGetTickCount:
 2188              	.LFB17:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2189              		.loc 1 2285 1 is_stmt 1 view -0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193              		@ link register save eliminated.
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2194              		.loc 1 2286 1 view .LVU602
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2195              		.loc 1 2289 32 view .LVU603
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2196              		.loc 1 2291 3 view .LVU604
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2197              		.loc 1 2291 10 is_stmt 0 view .LVU605
 2198 0000 014B     		ldr	r3, .L161
 2199 0002 1868     		ldr	r0, [r3]
 2200              	.LVL186:
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2201              		.loc 1 2293 31 is_stmt 1 view .LVU606
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2202              		.loc 1 2295 2 view .LVU607
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2203              		.loc 1 2296 1 is_stmt 0 view .LVU608
ARM GAS  /tmp/ccPYbq7S.s 			page 140


 2204              		@ sp needed
 2205 0004 7047     		bx	lr
 2206              	.L162:
 2207 0006 C046     		.align	2
 2208              	.L161:
 2209 0008 00000000 		.word	.LANCHOR14
 2210              		.cfi_endproc
 2211              	.LFE17:
 2213              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2214              		.align	1
 2215              		.global	xTaskGetTickCountFromISR
 2216              		.syntax unified
 2217              		.code	16
 2218              		.thumb_func
 2220              	xTaskGetTickCountFromISR:
 2221              	.LFB18:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2222              		.loc 1 2300 1 is_stmt 1 view -0
 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 0
 2225              		@ frame_needed = 0, uses_anonymous_args = 0
 2226              		@ link register save eliminated.
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2227              		.loc 1 2301 1 view .LVU610
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2228              		.loc 1 2302 1 view .LVU611
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2229              		.loc 1 2318 44 view .LVU612
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2230              		.loc 1 2320 2 view .LVU613
 2231              	.LVL187:
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2232              		.loc 1 2322 3 view .LVU614
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2233              		.loc 1 2322 11 is_stmt 0 view .LVU615
 2234 0000 014B     		ldr	r3, .L164
 2235 0002 1868     		ldr	r0, [r3]
 2236              	.LVL188:
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2237              		.loc 1 2324 2 is_stmt 1 view .LVU616
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2238              		.loc 1 2326 2 view .LVU617
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2239              		.loc 1 2327 1 is_stmt 0 view .LVU618
 2240              		@ sp needed
 2241 0004 7047     		bx	lr
 2242              	.L165:
 2243 0006 C046     		.align	2
 2244              	.L164:
 2245 0008 00000000 		.word	.LANCHOR14
 2246              		.cfi_endproc
 2247              	.LFE18:
 2249              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2250              		.align	1
 2251              		.global	uxTaskGetNumberOfTasks
 2252              		.syntax unified
 2253              		.code	16
ARM GAS  /tmp/ccPYbq7S.s 			page 141


 2254              		.thumb_func
 2256              	uxTaskGetNumberOfTasks:
 2257              	.LFB19:
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2258              		.loc 1 2331 1 is_stmt 1 view -0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 0, uses_anonymous_args = 0
 2262              		@ link register save eliminated.
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2263              		.loc 1 2334 2 view .LVU620
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2264              		.loc 1 2334 9 is_stmt 0 view .LVU621
 2265 0000 014B     		ldr	r3, .L167
 2266 0002 1868     		ldr	r0, [r3]
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2267              		.loc 1 2335 1 view .LVU622
 2268              		@ sp needed
 2269 0004 7047     		bx	lr
 2270              	.L168:
 2271 0006 C046     		.align	2
 2272              	.L167:
 2273 0008 00000000 		.word	.LANCHOR8
 2274              		.cfi_endproc
 2275              	.LFE19:
 2277              		.section	.text.pcTaskGetName,"ax",%progbits
 2278              		.align	1
 2279              		.global	pcTaskGetName
 2280              		.syntax unified
 2281              		.code	16
 2282              		.thumb_func
 2284              	pcTaskGetName:
 2285              	.LVL189:
 2286              	.LFB20:
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2287              		.loc 1 2339 1 is_stmt 1 view -0
 2288              		.cfi_startproc
 2289              		@ args = 0, pretend = 0, frame = 0
 2290              		@ frame_needed = 0, uses_anonymous_args = 0
 2291              		@ link register save eliminated.
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2292              		.loc 1 2340 1 view .LVU624
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2293              		.loc 1 2344 2 view .LVU625
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2294              		.loc 1 2344 10 is_stmt 0 view .LVU626
 2295 0000 0028     		cmp	r0, #0
 2296 0002 03D0     		beq	.L173
 2297              	.LVL190:
 2298              	.L170:
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2299              		.loc 1 2345 2 is_stmt 1 discriminator 4 view .LVU627
 2300 0004 0028     		cmp	r0, #0
 2301 0006 04D0     		beq	.L174
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2302              		.loc 1 2345 23 discriminator 2 view .LVU628
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/ccPYbq7S.s 			page 142


 2303              		.loc 1 2346 2 discriminator 2 view .LVU629
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2304              		.loc 1 2346 9 is_stmt 0 discriminator 2 view .LVU630
 2305 0008 3430     		adds	r0, r0, #52
 2306              	.LVL191:
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2307              		.loc 1 2347 1 discriminator 2 view .LVU631
 2308              		@ sp needed
 2309 000a 7047     		bx	lr
 2310              	.LVL192:
 2311              	.L173:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2312              		.loc 1 2344 10 discriminator 1 view .LVU632
 2313 000c 024B     		ldr	r3, .L175
 2314 000e 1868     		ldr	r0, [r3]
 2315              	.LVL193:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2316              		.loc 1 2344 10 discriminator 1 view .LVU633
 2317 0010 F8E7     		b	.L170
 2318              	.LVL194:
 2319              	.L174:
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2320              		.loc 1 2345 2 is_stmt 1 discriminator 1 view .LVU634
 2321              		.syntax divided
 2322              	@ 2345 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2323 0012 72B6     		 cpsid i 
 2324              	@ 0 "" 2
 2325              		.thumb
 2326              		.syntax unified
 2327              	.L172:
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2328              		.loc 1 2345 2 discriminator 1 view .LVU635
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2329              		.loc 1 2345 2 discriminator 1 view .LVU636
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2330              		.loc 1 2345 2 discriminator 1 view .LVU637
 2331 0014 FEE7     		b	.L172
 2332              	.L176:
 2333 0016 C046     		.align	2
 2334              	.L175:
 2335 0018 00000000 		.word	.LANCHOR9
 2336              		.cfi_endproc
 2337              	.LFE20:
 2339              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2340              		.align	1
 2341              		.global	xTaskIncrementTick
 2342              		.syntax unified
 2343              		.code	16
 2344              		.thumb_func
 2346              	xTaskIncrementTick:
 2347              	.LFB21:
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2348              		.loc 1 2666 1 view -0
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 0
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccPYbq7S.s 			page 143


 2353              	.LCFI21:
 2354              		.cfi_def_cfa_offset 24
 2355              		.cfi_offset 3, -24
 2356              		.cfi_offset 4, -20
 2357              		.cfi_offset 5, -16
 2358              		.cfi_offset 6, -12
 2359              		.cfi_offset 7, -8
 2360              		.cfi_offset 14, -4
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2361              		.loc 1 2667 1 view .LVU639
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2362              		.loc 1 2668 1 view .LVU640
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2363              		.loc 1 2669 1 view .LVU641
 2364              	.LVL195:
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2365              		.loc 1 2674 40 view .LVU642
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2366              		.loc 1 2675 2 view .LVU643
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2367              		.loc 1 2675 27 is_stmt 0 view .LVU644
 2368 0002 394B     		ldr	r3, .L198
 2369 0004 1B68     		ldr	r3, [r3]
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2370              		.loc 1 2675 4 view .LVU645
 2371 0006 002B     		cmp	r3, #0
 2372 0008 61D1     		bne	.L178
 2373              	.LBB8:
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2374              		.loc 1 2679 3 is_stmt 1 view .LVU646
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2375              		.loc 1 2679 49 is_stmt 0 view .LVU647
 2376 000a 384B     		ldr	r3, .L198+4
 2377 000c 1D68     		ldr	r5, [r3]
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2378              		.loc 1 2679 20 view .LVU648
 2379 000e 0135     		adds	r5, r5, #1
 2380              	.LVL196:
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2381              		.loc 1 2683 3 is_stmt 1 view .LVU649
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2382              		.loc 1 2683 14 is_stmt 0 view .LVU650
 2383 0010 1D60     		str	r5, [r3]
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2384              		.loc 1 2685 3 is_stmt 1 view .LVU651
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2385              		.loc 1 2685 5 is_stmt 0 view .LVU652
 2386 0012 002D     		cmp	r5, #0
 2387 0014 12D1     		bne	.L179
 2388              	.LBB9:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2389              		.loc 1 2687 4 is_stmt 1 view .LVU653
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2390              		.loc 1 2687 4 view .LVU654
 2391 0016 364B     		ldr	r3, .L198+8
 2392 0018 1B68     		ldr	r3, [r3]
 2393 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccPYbq7S.s 			page 144


 2394 001c 002B     		cmp	r3, #0
 2395 001e 01D0     		beq	.L180
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2396              		.loc 1 2687 4 discriminator 1 view .LVU655
 2397              		.syntax divided
 2398              	@ 2687 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2399 0020 72B6     		 cpsid i 
 2400              	@ 0 "" 2
 2401              		.thumb
 2402              		.syntax unified
 2403              	.L181:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2404              		.loc 1 2687 4 discriminator 1 view .LVU656
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2405              		.loc 1 2687 4 discriminator 1 view .LVU657
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2406              		.loc 1 2687 4 discriminator 1 view .LVU658
 2407 0022 FEE7     		b	.L181
 2408              	.L180:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2409              		.loc 1 2687 4 discriminator 2 view .LVU659
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2410              		.loc 1 2687 4 discriminator 2 view .LVU660
 2411 0024 324A     		ldr	r2, .L198+8
 2412 0026 1168     		ldr	r1, [r2]
 2413              	.LVL197:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2414              		.loc 1 2687 4 discriminator 2 view .LVU661
 2415 0028 324B     		ldr	r3, .L198+12
 2416 002a 1868     		ldr	r0, [r3]
 2417 002c 1060     		str	r0, [r2]
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2418              		.loc 1 2687 4 discriminator 2 view .LVU662
 2419 002e 1960     		str	r1, [r3]
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2420              		.loc 1 2687 4 discriminator 2 view .LVU663
 2421 0030 314A     		ldr	r2, .L198+16
 2422 0032 1368     		ldr	r3, [r2]
 2423 0034 0133     		adds	r3, r3, #1
 2424 0036 1360     		str	r3, [r2]
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2425              		.loc 1 2687 4 discriminator 2 view .LVU664
 2426 0038 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2427              	.LVL198:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2428              		.loc 1 2687 4 is_stmt 0 discriminator 2 view .LVU665
 2429              	.LBE9:
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2430              		.loc 1 2687 30 is_stmt 1 discriminator 2 view .LVU666
 2431              	.L179:
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2432              		.loc 1 2691 28 view .LVU667
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2433              		.loc 1 2698 3 view .LVU668
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2434              		.loc 1 2698 23 is_stmt 0 view .LVU669
 2435 003c 2F4B     		ldr	r3, .L198+20
ARM GAS  /tmp/ccPYbq7S.s 			page 145


 2436 003e 1B68     		ldr	r3, [r3]
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2437              		.loc 1 2698 5 view .LVU670
 2438 0040 AB42     		cmp	r3, r5
 2439 0042 3AD9     		bls	.L192
 2440              	.LBE8:
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2441              		.loc 1 2669 12 view .LVU671
 2442 0044 0027     		movs	r7, #0
 2443              	.LVL199:
 2444              	.L183:
 2445              	.LBB10:
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2446              		.loc 1 2781 4 is_stmt 1 view .LVU672
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2447              		.loc 1 2781 8 is_stmt 0 view .LVU673
 2448 0046 2E4B     		ldr	r3, .L198+24
 2449 0048 1B68     		ldr	r3, [r3]
 2450 004a DA6A     		ldr	r2, [r3, #44]
 2451 004c 9300     		lsls	r3, r2, #2
 2452 004e 9B18     		adds	r3, r3, r2
 2453 0050 9A00     		lsls	r2, r3, #2
 2454 0052 2C4B     		ldr	r3, .L198+28
 2455 0054 D358     		ldr	r3, [r2, r3]
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2456              		.loc 1 2781 6 view .LVU674
 2457 0056 012B     		cmp	r3, #1
 2458 0058 3ED9     		bls	.L190
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2459              		.loc 1 2783 21 view .LVU675
 2460 005a 0127     		movs	r7, #1
 2461              	.LVL200:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2462              		.loc 1 2783 21 view .LVU676
 2463 005c 3CE0     		b	.L190
 2464              	.LVL201:
 2465              	.L193:
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2466              		.loc 1 2764 24 view .LVU677
 2467 005e 0127     		movs	r7, #1
 2468              	.LVL202:
 2469              	.L182:
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2470              		.loc 1 2700 4 is_stmt 1 view .LVU678
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2471              		.loc 1 2702 5 view .LVU679
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2472              		.loc 1 2702 9 is_stmt 0 view .LVU680
 2473 0060 234B     		ldr	r3, .L198+8
 2474 0062 1B68     		ldr	r3, [r3]
 2475 0064 1B68     		ldr	r3, [r3]
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2476              		.loc 1 2702 7 view .LVU681
 2477 0066 002B     		cmp	r3, #0
 2478 0068 29D0     		beq	.L196
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2479              		.loc 1 2718 6 is_stmt 1 view .LVU682
ARM GAS  /tmp/ccPYbq7S.s 			page 146


2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2480              		.loc 1 2718 14 is_stmt 0 view .LVU683
 2481 006a 214B     		ldr	r3, .L198+8
 2482 006c 1B68     		ldr	r3, [r3]
 2483 006e DB68     		ldr	r3, [r3, #12]
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2484              		.loc 1 2718 12 view .LVU684
 2485 0070 DC68     		ldr	r4, [r3, #12]
 2486              	.LVL203:
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2487              		.loc 1 2719 6 is_stmt 1 view .LVU685
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2488              		.loc 1 2719 17 is_stmt 0 view .LVU686
 2489 0072 6368     		ldr	r3, [r4, #4]
 2490              	.LVL204:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2491              		.loc 1 2721 6 is_stmt 1 view .LVU687
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2492              		.loc 1 2721 8 is_stmt 0 view .LVU688
 2493 0074 9D42     		cmp	r5, r3
 2494 0076 27D3     		bcc	.L197
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2495              		.loc 1 2733 31 is_stmt 1 view .LVU689
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2496              		.loc 1 2737 6 view .LVU690
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2497              		.loc 1 2737 15 is_stmt 0 view .LVU691
 2498 0078 261D     		adds	r6, r4, #4
 2499 007a 3000     		movs	r0, r6
 2500 007c FFF7FEFF 		bl	uxListRemove
 2501              	.LVL205:
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2502              		.loc 1 2741 6 is_stmt 1 view .LVU692
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2503              		.loc 1 2741 8 is_stmt 0 view .LVU693
 2504 0080 A36A     		ldr	r3, [r4, #40]
 2505 0082 002B     		cmp	r3, #0
 2506 0084 03D0     		beq	.L186
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2507              		.loc 1 2743 7 is_stmt 1 view .LVU694
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2508              		.loc 1 2743 16 is_stmt 0 view .LVU695
 2509 0086 2000     		movs	r0, r4
 2510 0088 1830     		adds	r0, r0, #24
 2511 008a FFF7FEFF 		bl	uxListRemove
 2512              	.LVL206:
 2513              	.L186:
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2514              		.loc 1 2747 31 is_stmt 1 view .LVU696
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2515              		.loc 1 2752 6 view .LVU697
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2516              		.loc 1 2752 6 view .LVU698
 2517 008e E26A     		ldr	r2, [r4, #44]
 2518 0090 1D4B     		ldr	r3, .L198+32
 2519 0092 1B68     		ldr	r3, [r3]
 2520 0094 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccPYbq7S.s 			page 147


 2521 0096 01D9     		bls	.L187
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2522              		.loc 1 2752 6 discriminator 1 view .LVU699
 2523 0098 1B4B     		ldr	r3, .L198+32
 2524 009a 1A60     		str	r2, [r3]
 2525              	.L187:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2526              		.loc 1 2752 6 discriminator 3 view .LVU700
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2527              		.loc 1 2752 6 discriminator 3 view .LVU701
 2528 009c 9300     		lsls	r3, r2, #2
 2529 009e 9B18     		adds	r3, r3, r2
 2530 00a0 9800     		lsls	r0, r3, #2
 2531 00a2 184B     		ldr	r3, .L198+28
 2532 00a4 C018     		adds	r0, r0, r3
 2533 00a6 3100     		movs	r1, r6
 2534 00a8 FFF7FEFF 		bl	vListInsertEnd
 2535              	.LVL207:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2536              		.loc 1 2752 36 discriminator 3 view .LVU702
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2537              		.loc 1 2762 7 discriminator 3 view .LVU703
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2538              		.loc 1 2762 16 is_stmt 0 discriminator 3 view .LVU704
 2539 00ac E26A     		ldr	r2, [r4, #44]
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2540              		.loc 1 2762 44 discriminator 3 view .LVU705
 2541 00ae 144B     		ldr	r3, .L198+24
 2542 00b0 1B68     		ldr	r3, [r3]
 2543 00b2 DB6A     		ldr	r3, [r3, #44]
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2544              		.loc 1 2762 9 discriminator 3 view .LVU706
 2545 00b4 9A42     		cmp	r2, r3
 2546 00b6 D2D2     		bcs	.L193
 2547 00b8 D2E7     		b	.L182
 2548              	.LVL208:
 2549              	.L192:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2550              		.loc 1 2762 9 discriminator 3 view .LVU707
 2551              	.LBE10:
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2552              		.loc 1 2669 12 view .LVU708
 2553 00ba 0027     		movs	r7, #0
 2554 00bc D0E7     		b	.L182
 2555              	.LVL209:
 2556              	.L196:
 2557              	.LBB11:
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2558              		.loc 1 2709 6 is_stmt 1 view .LVU709
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2559              		.loc 1 2709 27 is_stmt 0 view .LVU710
 2560 00be 0F4B     		ldr	r3, .L198+20
 2561 00c0 0122     		movs	r2, #1
 2562 00c2 5242     		rsbs	r2, r2, #0
 2563 00c4 1A60     		str	r2, [r3]
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2564              		.loc 1 2710 6 is_stmt 1 view .LVU711
ARM GAS  /tmp/ccPYbq7S.s 			page 148


 2565 00c6 BEE7     		b	.L183
 2566              	.LVL210:
 2567              	.L197:
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2568              		.loc 1 2728 7 view .LVU712
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2569              		.loc 1 2728 28 is_stmt 0 view .LVU713
 2570 00c8 0C4A     		ldr	r2, .L198+20
 2571 00ca 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2572              		.loc 1 2729 7 is_stmt 1 view .LVU714
 2573 00cc BBE7     		b	.L183
 2574              	.LVL211:
 2575              	.L178:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2576              		.loc 1 2729 7 is_stmt 0 view .LVU715
 2577              	.LBE11:
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2578              		.loc 1 2809 3 is_stmt 1 view .LVU716
 2579 00ce 0F4A     		ldr	r2, .L198+36
 2580 00d0 1368     		ldr	r3, [r2]
 2581 00d2 0133     		adds	r3, r3, #1
 2582 00d4 1360     		str	r3, [r2]
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2583              		.loc 1 2669 12 is_stmt 0 view .LVU717
 2584 00d6 0027     		movs	r7, #0
 2585              	.LVL212:
 2586              	.L190:
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2587              		.loc 1 2822 3 is_stmt 1 view .LVU718
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2588              		.loc 1 2822 21 is_stmt 0 view .LVU719
 2589 00d8 0D4B     		ldr	r3, .L198+40
 2590 00da 1B68     		ldr	r3, [r3]
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2591              		.loc 1 2822 5 view .LVU720
 2592 00dc 002B     		cmp	r3, #0
 2593 00de 00D0     		beq	.L177
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2594              		.loc 1 2824 20 view .LVU721
 2595 00e0 0127     		movs	r7, #1
 2596              	.LVL213:
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2597              		.loc 1 2828 28 is_stmt 1 view .LVU722
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2598              		.loc 1 2833 2 view .LVU723
 2599              	.L177:
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2600              		.loc 1 2834 1 is_stmt 0 view .LVU724
 2601 00e2 3800     		movs	r0, r7
 2602              		@ sp needed
 2603 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2604              	.L199:
 2605 00e6 C046     		.align	2
 2606              	.L198:
 2607 00e8 00000000 		.word	.LANCHOR15
 2608 00ec 00000000 		.word	.LANCHOR14
ARM GAS  /tmp/ccPYbq7S.s 			page 149


 2609 00f0 00000000 		.word	.LANCHOR2
 2610 00f4 00000000 		.word	.LANCHOR7
 2611 00f8 00000000 		.word	.LANCHOR17
 2612 00fc 00000000 		.word	.LANCHOR3
 2613 0100 00000000 		.word	.LANCHOR9
 2614 0104 00000000 		.word	pxReadyTasksLists
 2615 0108 00000000 		.word	.LANCHOR12
 2616 010c 00000000 		.word	.LANCHOR18
 2617 0110 00000000 		.word	.LANCHOR19
 2618              		.cfi_endproc
 2619              	.LFE21:
 2621              		.section	.text.xTaskResumeAll,"ax",%progbits
 2622              		.align	1
 2623              		.global	xTaskResumeAll
 2624              		.syntax unified
 2625              		.code	16
 2626              		.thumb_func
 2628              	xTaskResumeAll:
 2629              	.LFB16:
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2630              		.loc 1 2175 1 is_stmt 1 view -0
 2631              		.cfi_startproc
 2632              		@ args = 0, pretend = 0, frame = 0
 2633              		@ frame_needed = 0, uses_anonymous_args = 0
 2634 0000 70B5     		push	{r4, r5, r6, lr}
 2635              	.LCFI22:
 2636              		.cfi_def_cfa_offset 16
 2637              		.cfi_offset 4, -16
 2638              		.cfi_offset 5, -12
 2639              		.cfi_offset 6, -8
 2640              		.cfi_offset 14, -4
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2641              		.loc 1 2176 1 view .LVU726
 2642              	.LVL214:
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2643              		.loc 1 2177 1 view .LVU727
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2644              		.loc 1 2181 2 view .LVU728
 2645 0002 314B     		ldr	r3, .L216
 2646 0004 1B68     		ldr	r3, [r3]
 2647 0006 002B     		cmp	r3, #0
 2648 0008 01D1     		bne	.L201
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2649              		.loc 1 2181 2 discriminator 1 view .LVU729
 2650              		.syntax divided
 2651              	@ 2181 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2652 000a 72B6     		 cpsid i 
 2653              	@ 0 "" 2
 2654              		.thumb
 2655              		.syntax unified
 2656              	.L202:
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2657              		.loc 1 2181 2 discriminator 1 view .LVU730
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2658              		.loc 1 2181 2 discriminator 1 view .LVU731
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2659              		.loc 1 2181 2 discriminator 1 view .LVU732
ARM GAS  /tmp/ccPYbq7S.s 			page 150


 2660 000c FEE7     		b	.L202
 2661              	.L201:
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2662              		.loc 1 2181 38 discriminator 2 view .LVU733
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2663              		.loc 1 2188 2 discriminator 2 view .LVU734
 2664 000e FFF7FEFF 		bl	vPortEnterCritical
 2665              	.LVL215:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2666              		.loc 1 2190 3 discriminator 2 view .LVU735
 2667 0012 2D4B     		ldr	r3, .L216
 2668 0014 1A68     		ldr	r2, [r3]
 2669 0016 013A     		subs	r2, r2, #1
 2670 0018 1A60     		str	r2, [r3]
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2671              		.loc 1 2192 3 discriminator 2 view .LVU736
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2672              		.loc 1 2192 28 is_stmt 0 discriminator 2 view .LVU737
 2673 001a 1B68     		ldr	r3, [r3]
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2674              		.loc 1 2192 5 discriminator 2 view .LVU738
 2675 001c 002B     		cmp	r3, #0
 2676 001e 4DD1     		bne	.L212
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2677              		.loc 1 2194 4 is_stmt 1 view .LVU739
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2678              		.loc 1 2194 31 is_stmt 0 view .LVU740
 2679 0020 2A4B     		ldr	r3, .L216+4
 2680 0022 1B68     		ldr	r3, [r3]
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2681              		.loc 1 2194 6 view .LVU741
 2682 0024 002B     		cmp	r3, #0
 2683 0026 01D1     		bne	.L213
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2684              		.loc 1 2177 12 view .LVU742
 2685 0028 0024     		movs	r4, #0
 2686 002a 48E0     		b	.L203
 2687              	.L213:
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2688              		.loc 1 2176 8 view .LVU743
 2689 002c 0024     		movs	r4, #0
 2690              	.LVL216:
 2691              	.L204:
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2692              		.loc 1 2213 31 is_stmt 1 view .LVU744
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2693              		.loc 1 2198 10 view .LVU745
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2694              		.loc 1 2198 12 is_stmt 0 view .LVU746
 2695 002e 284B     		ldr	r3, .L216+8
 2696 0030 1B68     		ldr	r3, [r3]
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2697              		.loc 1 2198 10 view .LVU747
 2698 0032 002B     		cmp	r3, #0
 2699 0034 23D0     		beq	.L214
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2700              		.loc 1 2200 6 is_stmt 1 view .LVU748
ARM GAS  /tmp/ccPYbq7S.s 			page 151


2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2701              		.loc 1 2200 14 is_stmt 0 view .LVU749
 2702 0036 264B     		ldr	r3, .L216+8
 2703 0038 DB68     		ldr	r3, [r3, #12]
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2704              		.loc 1 2200 12 view .LVU750
 2705 003a DC68     		ldr	r4, [r3, #12]
 2706              	.LVL217:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2707              		.loc 1 2201 6 is_stmt 1 view .LVU751
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2708              		.loc 1 2201 15 is_stmt 0 view .LVU752
 2709 003c 2000     		movs	r0, r4
 2710 003e 1830     		adds	r0, r0, #24
 2711 0040 FFF7FEFF 		bl	uxListRemove
 2712              	.LVL218:
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2713              		.loc 1 2202 6 is_stmt 1 view .LVU753
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2714              		.loc 1 2202 15 is_stmt 0 view .LVU754
 2715 0044 251D     		adds	r5, r4, #4
 2716 0046 2800     		movs	r0, r5
 2717 0048 FFF7FEFF 		bl	uxListRemove
 2718              	.LVL219:
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2719              		.loc 1 2203 6 is_stmt 1 view .LVU755
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2720              		.loc 1 2203 6 view .LVU756
 2721 004c E36A     		ldr	r3, [r4, #44]
 2722 004e 214A     		ldr	r2, .L216+12
 2723 0050 1268     		ldr	r2, [r2]
 2724 0052 9342     		cmp	r3, r2
 2725 0054 01D9     		bls	.L205
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2726              		.loc 1 2203 6 discriminator 1 view .LVU757
 2727 0056 1F4A     		ldr	r2, .L216+12
 2728 0058 1360     		str	r3, [r2]
 2729              	.L205:
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2730              		.loc 1 2203 6 discriminator 3 view .LVU758
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2731              		.loc 1 2203 6 discriminator 3 view .LVU759
 2732 005a 9800     		lsls	r0, r3, #2
 2733 005c C018     		adds	r0, r0, r3
 2734 005e 8000     		lsls	r0, r0, #2
 2735 0060 1D4B     		ldr	r3, .L216+16
 2736 0062 C018     		adds	r0, r0, r3
 2737 0064 2900     		movs	r1, r5
 2738 0066 FFF7FEFF 		bl	vListInsertEnd
 2739              	.LVL220:
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2740              		.loc 1 2203 36 discriminator 3 view .LVU760
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2741              		.loc 1 2207 6 discriminator 3 view .LVU761
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2742              		.loc 1 2207 43 is_stmt 0 discriminator 3 view .LVU762
 2743 006a 1C4B     		ldr	r3, .L216+20
ARM GAS  /tmp/ccPYbq7S.s 			page 152


 2744 006c 1B68     		ldr	r3, [r3]
 2745 006e DB6A     		ldr	r3, [r3, #44]
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2746              		.loc 1 2207 8 discriminator 3 view .LVU763
 2747 0070 E26A     		ldr	r2, [r4, #44]
 2748 0072 9A42     		cmp	r2, r3
 2749 0074 DBD3     		bcc	.L204
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2750              		.loc 1 2209 7 is_stmt 1 view .LVU764
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2751              		.loc 1 2209 21 is_stmt 0 view .LVU765
 2752 0076 1A4B     		ldr	r3, .L216+24
 2753 0078 0122     		movs	r2, #1
 2754 007a 1A60     		str	r2, [r3]
 2755 007c D7E7     		b	.L204
 2756              	.L214:
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2757              		.loc 1 2217 5 is_stmt 1 view .LVU766
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2758              		.loc 1 2217 7 is_stmt 0 view .LVU767
 2759 007e 002C     		cmp	r4, #0
 2760 0080 01D0     		beq	.L208
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2761              		.loc 1 2225 6 is_stmt 1 view .LVU768
 2762 0082 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2763              	.LVL221:
 2764              	.L208:
 2765              	.LBB12:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2766              		.loc 1 2233 6 view .LVU769
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2767              		.loc 1 2233 18 is_stmt 0 view .LVU770
 2768 0086 174B     		ldr	r3, .L216+28
 2769 0088 1C68     		ldr	r4, [r3]
 2770              	.LVL222:
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2771              		.loc 1 2235 6 is_stmt 1 view .LVU771
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2772              		.loc 1 2235 8 is_stmt 0 view .LVU772
 2773 008a 002C     		cmp	r4, #0
 2774 008c 0AD1     		bne	.L211
 2775              	.L209:
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2776              		.loc 1 2254 31 is_stmt 1 view .LVU773
 2777              	.LBE12:
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2778              		.loc 1 2258 5 view .LVU774
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2779              		.loc 1 2258 23 is_stmt 0 view .LVU775
 2780 008e 144B     		ldr	r3, .L216+24
 2781 0090 1C68     		ldr	r4, [r3]
 2782              	.LVL223:
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2783              		.loc 1 2258 7 view .LVU776
 2784 0092 002C     		cmp	r4, #0
 2785 0094 13D0     		beq	.L203
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccPYbq7S.s 			page 153


 2786              		.loc 1 2262 7 is_stmt 1 view .LVU777
 2787              	.LVL224:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2788              		.loc 1 2265 6 view .LVU778
 2789 0096 FFF7FEFF 		bl	vPortYield
 2790              	.LVL225:
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2791              		.loc 1 2262 23 is_stmt 0 view .LVU779
 2792 009a 0124     		movs	r4, #1
 2793 009c 0FE0     		b	.L203
 2794              	.LVL226:
 2795              	.L210:
 2796              	.LBB13:
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2797              		.loc 1 2245 33 is_stmt 1 view .LVU780
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2798              		.loc 1 2247 8 view .LVU781
 2799 009e 013C     		subs	r4, r4, #1
 2800              	.LVL227:
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2801              		.loc 1 2248 14 view .LVU782
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2802              		.loc 1 2248 7 is_stmt 0 view .LVU783
 2803 00a0 002C     		cmp	r4, #0
 2804 00a2 07D0     		beq	.L215
 2805              	.L211:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2806              		.loc 1 2237 7 is_stmt 1 view .LVU784
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2807              		.loc 1 2239 8 view .LVU785
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2808              		.loc 1 2239 12 is_stmt 0 view .LVU786
 2809 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2810              	.LVL228:
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2811              		.loc 1 2239 10 view .LVU787
 2812 00a8 0028     		cmp	r0, #0
 2813 00aa F8D0     		beq	.L210
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2814              		.loc 1 2241 9 is_stmt 1 view .LVU788
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2815              		.loc 1 2241 23 is_stmt 0 view .LVU789
 2816 00ac 0C4B     		ldr	r3, .L216+24
 2817 00ae 0122     		movs	r2, #1
 2818 00b0 1A60     		str	r2, [r3]
 2819 00b2 F4E7     		b	.L210
 2820              	.L215:
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2821              		.loc 1 2250 7 is_stmt 1 view .LVU790
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2822              		.loc 1 2250 21 is_stmt 0 view .LVU791
 2823 00b4 0B4B     		ldr	r3, .L216+28
 2824 00b6 0022     		movs	r2, #0
 2825 00b8 1A60     		str	r2, [r3]
 2826 00ba E8E7     		b	.L209
 2827              	.LVL229:
 2828              	.L212:
ARM GAS  /tmp/ccPYbq7S.s 			page 154


2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2829              		.loc 1 2250 21 view .LVU792
 2830              	.LBE13:
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2831              		.loc 1 2177 12 view .LVU793
 2832 00bc 0024     		movs	r4, #0
 2833              	.LVL230:
 2834              	.L203:
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2835              		.loc 1 2275 28 is_stmt 1 view .LVU794
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2836              		.loc 1 2278 2 view .LVU795
 2837 00be FFF7FEFF 		bl	vPortExitCritical
 2838              	.LVL231:
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2839              		.loc 1 2280 2 view .LVU796
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2840              		.loc 1 2281 1 is_stmt 0 view .LVU797
 2841 00c2 2000     		movs	r0, r4
 2842              		@ sp needed
 2843              	.LVL232:
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2844              		.loc 1 2281 1 view .LVU798
 2845 00c4 70BD     		pop	{r4, r5, r6, pc}
 2846              	.L217:
 2847 00c6 C046     		.align	2
 2848              	.L216:
 2849 00c8 00000000 		.word	.LANCHOR15
 2850 00cc 00000000 		.word	.LANCHOR8
 2851 00d0 00000000 		.word	.LANCHOR1
 2852 00d4 00000000 		.word	.LANCHOR12
 2853 00d8 00000000 		.word	pxReadyTasksLists
 2854 00dc 00000000 		.word	.LANCHOR9
 2855 00e0 00000000 		.word	.LANCHOR19
 2856 00e4 00000000 		.word	.LANCHOR18
 2857              		.cfi_endproc
 2858              	.LFE16:
 2860              		.section	.text.vTaskDelay,"ax",%progbits
 2861              		.align	1
 2862              		.global	vTaskDelay
 2863              		.syntax unified
 2864              		.code	16
 2865              		.thumb_func
 2867              	vTaskDelay:
 2868              	.LVL233:
 2869              	.LFB5:
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2870              		.loc 1 1334 2 is_stmt 1 view -0
 2871              		.cfi_startproc
 2872              		@ args = 0, pretend = 0, frame = 0
 2873              		@ frame_needed = 0, uses_anonymous_args = 0
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2874              		.loc 1 1334 2 is_stmt 0 view .LVU800
 2875 0000 10B5     		push	{r4, lr}
 2876              	.LCFI23:
 2877              		.cfi_def_cfa_offset 8
 2878              		.cfi_offset 4, -8
ARM GAS  /tmp/ccPYbq7S.s 			page 155


 2879              		.cfi_offset 14, -4
 2880 0002 041E     		subs	r4, r0, #0
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2881              		.loc 1 1335 2 is_stmt 1 view .LVU801
 2882              	.LVL234:
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2883              		.loc 1 1338 3 view .LVU802
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2884              		.loc 1 1338 5 is_stmt 0 view .LVU803
 2885 0004 0FD0     		beq	.L219
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2886              		.loc 1 1340 4 is_stmt 1 view .LVU804
 2887 0006 094B     		ldr	r3, .L223
 2888 0008 1B68     		ldr	r3, [r3]
 2889 000a 002B     		cmp	r3, #0
 2890 000c 01D0     		beq	.L220
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2891              		.loc 1 1340 4 discriminator 1 view .LVU805
 2892              		.syntax divided
 2893              	@ 1340 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2894 000e 72B6     		 cpsid i 
 2895              	@ 0 "" 2
 2896              		.thumb
 2897              		.syntax unified
 2898              	.L221:
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2899              		.loc 1 1340 4 discriminator 1 view .LVU806
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2900              		.loc 1 1340 4 discriminator 1 view .LVU807
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2901              		.loc 1 1340 4 discriminator 1 view .LVU808
 2902 0010 FEE7     		b	.L221
 2903              	.L220:
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2904              		.loc 1 1340 45 discriminator 2 view .LVU809
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2905              		.loc 1 1341 4 discriminator 2 view .LVU810
 2906 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2907              	.LVL235:
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2908              		.loc 1 1343 22 discriminator 2 view .LVU811
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2909              		.loc 1 1352 5 discriminator 2 view .LVU812
 2910 0016 0021     		movs	r1, #0
 2911 0018 2000     		movs	r0, r4
 2912 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2913              	.LVL236:
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2914              		.loc 1 1354 4 discriminator 2 view .LVU813
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2915              		.loc 1 1354 22 is_stmt 0 discriminator 2 view .LVU814
 2916 001e FFF7FEFF 		bl	xTaskResumeAll
 2917              	.LVL237:
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2918              		.loc 1 1358 28 is_stmt 1 discriminator 2 view .LVU815
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2919              		.loc 1 1363 3 discriminator 2 view .LVU816
ARM GAS  /tmp/ccPYbq7S.s 			page 156


1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2920              		.loc 1 1363 5 is_stmt 0 discriminator 2 view .LVU817
 2921 0022 0028     		cmp	r0, #0
 2922 0024 01D1     		bne	.L218
 2923              	.LVL238:
 2924              	.L219:
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2925              		.loc 1 1365 4 is_stmt 1 view .LVU818
 2926 0026 FFF7FEFF 		bl	vPortYield
 2927              	.LVL239:
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2928              		.loc 1 1369 28 view .LVU819
 2929              	.L218:
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2930              		.loc 1 1371 2 is_stmt 0 view .LVU820
 2931              		@ sp needed
 2932              	.LVL240:
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2933              		.loc 1 1371 2 view .LVU821
 2934 002a 10BD     		pop	{r4, pc}
 2935              	.L224:
 2936              		.align	2
 2937              	.L223:
 2938 002c 00000000 		.word	.LANCHOR15
 2939              		.cfi_endproc
 2940              	.LFE5:
 2942              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2943              		.align	1
 2944              		.global	vTaskSwitchContext
 2945              		.syntax unified
 2946              		.code	16
 2947              		.thumb_func
 2949              	vTaskSwitchContext:
 2950              	.LFB22:
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2951              		.loc 1 2948 1 is_stmt 1 view -0
 2952              		.cfi_startproc
 2953              		@ args = 0, pretend = 0, frame = 0
 2954              		@ frame_needed = 0, uses_anonymous_args = 0
 2955 0000 30B5     		push	{r4, r5, lr}
 2956              	.LCFI24:
 2957              		.cfi_def_cfa_offset 12
 2958              		.cfi_offset 4, -12
 2959              		.cfi_offset 5, -8
 2960              		.cfi_offset 14, -4
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2961              		.loc 1 2949 2 view .LVU823
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2962              		.loc 1 2949 27 is_stmt 0 view .LVU824
 2963 0002 1C4B     		ldr	r3, .L236
 2964 0004 1B68     		ldr	r3, [r3]
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2965              		.loc 1 2949 4 view .LVU825
 2966 0006 002B     		cmp	r3, #0
 2967 0008 03D0     		beq	.L226
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2968              		.loc 1 2953 3 is_stmt 1 view .LVU826
ARM GAS  /tmp/ccPYbq7S.s 			page 157


2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2969              		.loc 1 2953 17 is_stmt 0 view .LVU827
 2970 000a 1B4B     		ldr	r3, .L236+4
 2971 000c 0122     		movs	r2, #1
 2972 000e 1A60     		str	r2, [r3]
 2973              	.L225:
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2974              		.loc 1 3017 1 view .LVU828
 2975              		@ sp needed
 2976 0010 30BD     		pop	{r4, r5, pc}
 2977              	.L226:
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2978              		.loc 1 2957 3 is_stmt 1 view .LVU829
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2979              		.loc 1 2957 17 is_stmt 0 view .LVU830
 2980 0012 194B     		ldr	r3, .L236+4
 2981 0014 0022     		movs	r2, #0
 2982 0016 1A60     		str	r2, [r3]
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2983              		.loc 1 2958 27 is_stmt 1 view .LVU831
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2984              		.loc 1 2988 33 view .LVU832
 2985              	.LBB14:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2986              		.loc 1 2999 3 view .LVU833
 2987 0018 184B     		ldr	r3, .L236+8
 2988 001a 1B68     		ldr	r3, [r3]
 2989              	.LVL241:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2990              		.loc 1 2999 3 view .LVU834
 2991              	.L228:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2992              		.loc 1 2999 3 discriminator 5 view .LVU835
 2993 001c 9A00     		lsls	r2, r3, #2
 2994 001e D218     		adds	r2, r2, r3
 2995 0020 9100     		lsls	r1, r2, #2
 2996 0022 174A     		ldr	r2, .L236+12
 2997 0024 8A58     		ldr	r2, [r1, r2]
 2998 0026 002A     		cmp	r2, #0
 2999 0028 05D1     		bne	.L233
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3000              		.loc 1 2999 3 discriminator 6 view .LVU836
 3001 002a 002B     		cmp	r3, #0
 3002 002c 01D0     		beq	.L234
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3003              		.loc 1 2999 3 discriminator 3 view .LVU837
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3004              		.loc 1 2999 3 discriminator 3 view .LVU838
 3005 002e 013B     		subs	r3, r3, #1
 3006              	.LVL242:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3007              		.loc 1 2999 3 is_stmt 0 discriminator 3 view .LVU839
 3008 0030 F4E7     		b	.L228
 3009              	.L234:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3010              		.loc 1 2999 3 is_stmt 1 discriminator 2 view .LVU840
 3011              		.syntax divided
ARM GAS  /tmp/ccPYbq7S.s 			page 158


 3012              	@ 2999 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3013 0032 72B6     		 cpsid i 
 3014              	@ 0 "" 2
 3015              		.thumb
 3016              		.syntax unified
 3017              	.L230:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3018              		.loc 1 2999 3 discriminator 1 view .LVU841
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3019              		.loc 1 2999 3 discriminator 1 view .LVU842
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3020              		.loc 1 2999 3 discriminator 1 view .LVU843
 3021 0034 FEE7     		b	.L230
 3022              	.L233:
 3023              	.LBB15:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3024              		.loc 1 2999 3 discriminator 7 view .LVU844
 3025              	.LVL243:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3026              		.loc 1 2999 3 discriminator 7 view .LVU845
 3027 0036 124D     		ldr	r5, .L236+12
 3028 0038 9900     		lsls	r1, r3, #2
 3029 003a CA18     		adds	r2, r1, r3
 3030 003c 9000     		lsls	r0, r2, #2
 3031 003e 2818     		adds	r0, r5, r0
 3032 0040 4268     		ldr	r2, [r0, #4]
 3033 0042 5468     		ldr	r4, [r2, #4]
 3034 0044 4460     		str	r4, [r0, #4]
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3035              		.loc 1 2999 3 discriminator 7 view .LVU846
 3036 0046 C918     		adds	r1, r1, r3
 3037 0048 8A00     		lsls	r2, r1, #2
 3038 004a 0832     		adds	r2, r2, #8
 3039 004c 5219     		adds	r2, r2, r5
 3040 004e 9442     		cmp	r4, r2
 3041 0050 0BD0     		beq	.L235
 3042              	.L232:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3043              		.loc 1 2999 3 discriminator 10 view .LVU847
 3044 0052 9A00     		lsls	r2, r3, #2
 3045 0054 D218     		adds	r2, r2, r3
 3046 0056 9100     		lsls	r1, r2, #2
 3047 0058 094A     		ldr	r2, .L236+12
 3048 005a 5218     		adds	r2, r2, r1
 3049 005c 5268     		ldr	r2, [r2, #4]
 3050 005e D168     		ldr	r1, [r2, #12]
 3051 0060 084A     		ldr	r2, .L236+16
 3052 0062 1160     		str	r1, [r2]
 3053              	.LBE15:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3054              		.loc 1 2999 3 discriminator 10 view .LVU848
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3055              		.loc 1 2999 3 discriminator 10 view .LVU849
 3056 0064 054A     		ldr	r2, .L236+8
 3057 0066 1360     		str	r3, [r2]
 3058              	.LBE14:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  /tmp/ccPYbq7S.s 			page 159


 3059              		.loc 1 2999 37 discriminator 10 view .LVU850
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3060              		.loc 1 3000 26 discriminator 10 view .LVU851
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3061              		.loc 1 3017 1 is_stmt 0 discriminator 10 view .LVU852
 3062 0068 D2E7     		b	.L225
 3063              	.L235:
 3064              	.LBB17:
 3065              	.LBB16:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3066              		.loc 1 2999 3 is_stmt 1 discriminator 8 view .LVU853
 3067 006a 6068     		ldr	r0, [r4, #4]
 3068 006c 8900     		lsls	r1, r1, #2
 3069 006e 6A18     		adds	r2, r5, r1
 3070 0070 5060     		str	r0, [r2, #4]
 3071 0072 EEE7     		b	.L232
 3072              	.L237:
 3073              		.align	2
 3074              	.L236:
 3075 0074 00000000 		.word	.LANCHOR15
 3076 0078 00000000 		.word	.LANCHOR19
 3077 007c 00000000 		.word	.LANCHOR12
 3078 0080 00000000 		.word	pxReadyTasksLists
 3079 0084 00000000 		.word	.LANCHOR9
 3080              	.LBE16:
 3081              	.LBE17:
 3082              		.cfi_endproc
 3083              	.LFE22:
 3085              		.section	.text.vTaskSuspend,"ax",%progbits
 3086              		.align	1
 3087              		.global	vTaskSuspend
 3088              		.syntax unified
 3089              		.code	16
 3090              		.thumb_func
 3092              	vTaskSuspend:
 3093              	.LVL244:
 3094              	.LFB9:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3095              		.loc 1 1697 2 view -0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3099              		.loc 1 1697 2 is_stmt 0 view .LVU855
 3100 0000 70B5     		push	{r4, r5, r6, lr}
 3101              	.LCFI25:
 3102              		.cfi_def_cfa_offset 16
 3103              		.cfi_offset 4, -16
 3104              		.cfi_offset 5, -12
 3105              		.cfi_offset 6, -8
 3106              		.cfi_offset 14, -4
 3107 0002 0400     		movs	r4, r0
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3108              		.loc 1 1698 2 is_stmt 1 view .LVU856
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3109              		.loc 1 1700 3 view .LVU857
 3110 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  /tmp/ccPYbq7S.s 			page 160


 3111              	.LVL245:
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3112              		.loc 1 1704 4 view .LVU858
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3113              		.loc 1 1704 12 is_stmt 0 view .LVU859
 3114 0008 002C     		cmp	r4, #0
 3115 000a 1DD0     		beq	.L248
 3116              	.LVL246:
 3117              	.L239:
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3118              		.loc 1 1706 30 is_stmt 1 discriminator 4 view .LVU860
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3119              		.loc 1 1710 4 discriminator 4 view .LVU861
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3120              		.loc 1 1710 8 is_stmt 0 discriminator 4 view .LVU862
 3121 000c 251D     		adds	r5, r4, #4
 3122 000e 2800     		movs	r0, r5
 3123 0010 FFF7FEFF 		bl	uxListRemove
 3124              	.LVL247:
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3125              		.loc 1 1716 29 is_stmt 1 discriminator 4 view .LVU863
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3126              		.loc 1 1720 4 discriminator 4 view .LVU864
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3127              		.loc 1 1720 6 is_stmt 0 discriminator 4 view .LVU865
 3128 0014 A36A     		ldr	r3, [r4, #40]
 3129 0016 002B     		cmp	r3, #0
 3130 0018 03D0     		beq	.L240
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3131              		.loc 1 1722 5 is_stmt 1 view .LVU866
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3132              		.loc 1 1722 14 is_stmt 0 view .LVU867
 3133 001a 2000     		movs	r0, r4
 3134 001c 1830     		adds	r0, r0, #24
 3135 001e FFF7FEFF 		bl	uxListRemove
 3136              	.LVL248:
 3137              	.L240:
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3138              		.loc 1 1726 29 is_stmt 1 view .LVU868
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3139              		.loc 1 1729 4 view .LVU869
 3140 0022 2900     		movs	r1, r5
 3141 0024 1C48     		ldr	r0, .L252
 3142 0026 FFF7FEFF 		bl	vListInsertEnd
 3143              	.LVL249:
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3144              		.loc 1 1733 5 view .LVU870
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3145              		.loc 1 1733 14 is_stmt 0 view .LVU871
 3146 002a 5023     		movs	r3, #80
 3147 002c E35C     		ldrb	r3, [r4, r3]
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3148              		.loc 1 1733 7 view .LVU872
 3149 002e 012B     		cmp	r3, #1
 3150 0030 0DD0     		beq	.L249
 3151              	.L241:
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 161


 3152              		.loc 1 1742 3 is_stmt 1 view .LVU873
 3153 0032 FFF7FEFF 		bl	vPortExitCritical
 3154              	.LVL250:
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3155              		.loc 1 1744 3 view .LVU874
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3156              		.loc 1 1744 25 is_stmt 0 view .LVU875
 3157 0036 194B     		ldr	r3, .L252+4
 3158 0038 1B68     		ldr	r3, [r3]
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3159              		.loc 1 1744 5 view .LVU876
 3160 003a 002B     		cmp	r3, #0
 3161 003c 0BD1     		bne	.L250
 3162              	.L242:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3163              		.loc 1 1756 28 is_stmt 1 view .LVU877
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3164              		.loc 1 1759 3 view .LVU878
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3165              		.loc 1 1759 13 is_stmt 0 view .LVU879
 3166 003e 184B     		ldr	r3, .L252+8
 3167 0040 1B68     		ldr	r3, [r3]
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3168              		.loc 1 1759 5 view .LVU880
 3169 0042 A342     		cmp	r3, r4
 3170 0044 0ED0     		beq	.L251
 3171              	.L238:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3172              		.loc 1 1790 2 view .LVU881
 3173              		@ sp needed
 3174              	.LVL251:
 3175              	.LVL252:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3176              		.loc 1 1790 2 view .LVU882
 3177 0046 70BD     		pop	{r4, r5, r6, pc}
 3178              	.LVL253:
 3179              	.L248:
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3180              		.loc 1 1704 12 discriminator 1 view .LVU883
 3181 0048 154B     		ldr	r3, .L252+8
 3182 004a 1C68     		ldr	r4, [r3]
 3183              	.LVL254:
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3184              		.loc 1 1704 12 discriminator 1 view .LVU884
 3185 004c DEE7     		b	.L239
 3186              	.LVL255:
 3187              	.L249:
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3188              		.loc 1 1737 6 is_stmt 1 view .LVU885
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3189              		.loc 1 1737 27 is_stmt 0 view .LVU886
 3190 004e 4F33     		adds	r3, r3, #79
 3191 0050 0022     		movs	r2, #0
 3192 0052 E254     		strb	r2, [r4, r3]
 3193 0054 EDE7     		b	.L241
 3194              	.L250:
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccPYbq7S.s 			page 162


 3195              		.loc 1 1748 4 is_stmt 1 view .LVU887
 3196 0056 FFF7FEFF 		bl	vPortEnterCritical
 3197              	.LVL256:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3198              		.loc 1 1750 5 view .LVU888
 3199 005a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3200              	.LVL257:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3201              		.loc 1 1752 4 view .LVU889
 3202 005e FFF7FEFF 		bl	vPortExitCritical
 3203              	.LVL258:
 3204 0062 ECE7     		b	.L242
 3205              	.L251:
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3206              		.loc 1 1761 4 view .LVU890
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3207              		.loc 1 1761 26 is_stmt 0 view .LVU891
 3208 0064 0D4B     		ldr	r3, .L252+4
 3209 0066 1B68     		ldr	r3, [r3]
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3210              		.loc 1 1761 6 view .LVU892
 3211 0068 002B     		cmp	r3, #0
 3212 006a 08D0     		beq	.L244
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3213              		.loc 1 1764 5 is_stmt 1 view .LVU893
 3214 006c 0D4B     		ldr	r3, .L252+12
 3215 006e 1B68     		ldr	r3, [r3]
 3216 0070 002B     		cmp	r3, #0
 3217 0072 01D0     		beq	.L245
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3218              		.loc 1 1764 5 discriminator 1 view .LVU894
 3219              		.syntax divided
 3220              	@ 1764 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3221 0074 72B6     		 cpsid i 
 3222              	@ 0 "" 2
 3223              		.thumb
 3224              		.syntax unified
 3225              	.L246:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3226              		.loc 1 1764 5 discriminator 1 view .LVU895
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3227              		.loc 1 1764 5 discriminator 1 view .LVU896
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3228              		.loc 1 1764 5 discriminator 1 view .LVU897
 3229 0076 FEE7     		b	.L246
 3230              	.L245:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3231              		.loc 1 1764 46 discriminator 2 view .LVU898
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3232              		.loc 1 1765 5 discriminator 2 view .LVU899
 3233 0078 FFF7FEFF 		bl	vPortYield
 3234              	.LVL259:
 3235 007c E3E7     		b	.L238
 3236              	.L244:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3237              		.loc 1 1772 5 view .LVU900
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccPYbq7S.s 			page 163


 3238              		.loc 1 1772 9 is_stmt 0 view .LVU901
 3239 007e 064B     		ldr	r3, .L252
 3240 0080 1A68     		ldr	r2, [r3]
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3241              		.loc 1 1772 56 view .LVU902
 3242 0082 094B     		ldr	r3, .L252+16
 3243 0084 1B68     		ldr	r3, [r3]
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3244              		.loc 1 1772 7 view .LVU903
 3245 0086 9A42     		cmp	r2, r3
 3246 0088 03D1     		bne	.L247
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3247              		.loc 1 1778 6 is_stmt 1 view .LVU904
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3248              		.loc 1 1778 19 is_stmt 0 view .LVU905
 3249 008a 054B     		ldr	r3, .L252+8
 3250 008c 0022     		movs	r2, #0
 3251 008e 1A60     		str	r2, [r3]
 3252 0090 D9E7     		b	.L238
 3253              	.L247:
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3254              		.loc 1 1782 6 is_stmt 1 view .LVU906
 3255 0092 FFF7FEFF 		bl	vTaskSwitchContext
 3256              	.LVL260:
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3257              		.loc 1 1788 28 view .LVU907
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3258              		.loc 1 1790 2 is_stmt 0 view .LVU908
 3259 0096 D6E7     		b	.L238
 3260              	.L253:
 3261              		.align	2
 3262              	.L252:
 3263 0098 00000000 		.word	.LANCHOR0
 3264 009c 00000000 		.word	.LANCHOR10
 3265 00a0 00000000 		.word	.LANCHOR9
 3266 00a4 00000000 		.word	.LANCHOR15
 3267 00a8 00000000 		.word	.LANCHOR8
 3268              		.cfi_endproc
 3269              	.LFE9:
 3271              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3272              		.align	1
 3273              		.global	vTaskPlaceOnEventList
 3274              		.syntax unified
 3275              		.code	16
 3276              		.thumb_func
 3278              	vTaskPlaceOnEventList:
 3279              	.LVL261:
 3280              	.LFB23:
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3281              		.loc 1 3021 1 is_stmt 1 view -0
 3282              		.cfi_startproc
 3283              		@ args = 0, pretend = 0, frame = 0
 3284              		@ frame_needed = 0, uses_anonymous_args = 0
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3285              		.loc 1 3021 1 is_stmt 0 view .LVU910
 3286 0000 10B5     		push	{r4, lr}
 3287              	.LCFI26:
ARM GAS  /tmp/ccPYbq7S.s 			page 164


 3288              		.cfi_def_cfa_offset 8
 3289              		.cfi_offset 4, -8
 3290              		.cfi_offset 14, -4
 3291 0002 0C00     		movs	r4, r1
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3292              		.loc 1 3022 2 is_stmt 1 view .LVU911
 3293 0004 0028     		cmp	r0, #0
 3294 0006 09D0     		beq	.L257
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3295              		.loc 1 3022 29 discriminator 2 view .LVU912
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3296              		.loc 1 3031 2 discriminator 2 view .LVU913
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3297              		.loc 1 3031 43 is_stmt 0 discriminator 2 view .LVU914
 3298 0008 054B     		ldr	r3, .L258
 3299 000a 1968     		ldr	r1, [r3]
 3300              	.LVL262:
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3301              		.loc 1 3031 2 discriminator 2 view .LVU915
 3302 000c 1831     		adds	r1, r1, #24
 3303 000e FFF7FEFF 		bl	vListInsert
 3304              	.LVL263:
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3305              		.loc 1 3033 2 is_stmt 1 discriminator 2 view .LVU916
 3306 0012 0121     		movs	r1, #1
 3307 0014 2000     		movs	r0, r4
 3308 0016 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3309              	.LVL264:
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3310              		.loc 1 3034 1 is_stmt 0 discriminator 2 view .LVU917
 3311              		@ sp needed
 3312              	.LVL265:
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3313              		.loc 1 3034 1 discriminator 2 view .LVU918
 3314 001a 10BD     		pop	{r4, pc}
 3315              	.LVL266:
 3316              	.L257:
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3317              		.loc 1 3022 2 is_stmt 1 discriminator 1 view .LVU919
 3318              		.syntax divided
 3319              	@ 3022 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3320 001c 72B6     		 cpsid i 
 3321              	@ 0 "" 2
 3322              		.thumb
 3323              		.syntax unified
 3324              	.L256:
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3325              		.loc 1 3022 2 discriminator 1 view .LVU920
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3326              		.loc 1 3022 2 discriminator 1 view .LVU921
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3327              		.loc 1 3022 2 discriminator 1 view .LVU922
 3328 001e FEE7     		b	.L256
 3329              	.L259:
 3330              		.align	2
 3331              	.L258:
 3332 0020 00000000 		.word	.LANCHOR9
ARM GAS  /tmp/ccPYbq7S.s 			page 165


 3333              		.cfi_endproc
 3334              	.LFE23:
 3336              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3337              		.align	1
 3338              		.global	vTaskPlaceOnUnorderedEventList
 3339              		.syntax unified
 3340              		.code	16
 3341              		.thumb_func
 3343              	vTaskPlaceOnUnorderedEventList:
 3344              	.LVL267:
 3345              	.LFB24:
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3346              		.loc 1 3038 1 view -0
 3347              		.cfi_startproc
 3348              		@ args = 0, pretend = 0, frame = 0
 3349              		@ frame_needed = 0, uses_anonymous_args = 0
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3350              		.loc 1 3038 1 is_stmt 0 view .LVU924
 3351 0000 70B5     		push	{r4, r5, r6, lr}
 3352              	.LCFI27:
 3353              		.cfi_def_cfa_offset 16
 3354              		.cfi_offset 4, -16
 3355              		.cfi_offset 5, -12
 3356              		.cfi_offset 6, -8
 3357              		.cfi_offset 14, -4
 3358 0002 1400     		movs	r4, r2
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3359              		.loc 1 3039 2 is_stmt 1 view .LVU925
 3360 0004 0028     		cmp	r0, #0
 3361 0006 05D0     		beq	.L265
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3362              		.loc 1 3039 29 discriminator 2 view .LVU926
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3363              		.loc 1 3043 2 discriminator 2 view .LVU927
 3364 0008 0B4B     		ldr	r3, .L266
 3365 000a 1B68     		ldr	r3, [r3]
 3366 000c 002B     		cmp	r3, #0
 3367 000e 03D1     		bne	.L263
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3368              		.loc 1 3043 2 discriminator 1 view .LVU928
 3369              		.syntax divided
 3370              	@ 3043 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3371 0010 72B6     		 cpsid i 
 3372              	@ 0 "" 2
 3373              		.thumb
 3374              		.syntax unified
 3375              	.L264:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3376              		.loc 1 3043 2 discriminator 2 view .LVU929
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3377              		.loc 1 3043 2 discriminator 2 view .LVU930
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3378              		.loc 1 3043 2 discriminator 2 view .LVU931
 3379 0012 FEE7     		b	.L264
 3380              	.L265:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3381              		.loc 1 3039 2 discriminator 1 view .LVU932
ARM GAS  /tmp/ccPYbq7S.s 			page 166


 3382              		.syntax divided
 3383              	@ 3039 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3384 0014 72B6     		 cpsid i 
 3385              	@ 0 "" 2
 3386              		.thumb
 3387              		.syntax unified
 3388              	.L262:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3389              		.loc 1 3039 2 discriminator 1 view .LVU933
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3390              		.loc 1 3039 2 discriminator 1 view .LVU934
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3391              		.loc 1 3039 2 discriminator 1 view .LVU935
 3392 0016 FEE7     		b	.L262
 3393              	.L263:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3394              		.loc 1 3043 43 discriminator 2 view .LVU936
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3395              		.loc 1 3048 2 discriminator 2 view .LVU937
 3396 0018 084A     		ldr	r2, .L266+4
 3397              	.LVL268:
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3398              		.loc 1 3048 2 is_stmt 0 discriminator 2 view .LVU938
 3399 001a 1568     		ldr	r5, [r2]
 3400 001c 8023     		movs	r3, #128
 3401 001e 1B06     		lsls	r3, r3, #24
 3402 0020 1943     		orrs	r1, r3
 3403              	.LVL269:
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3404              		.loc 1 3048 2 discriminator 2 view .LVU939
 3405 0022 A961     		str	r1, [r5, #24]
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3406              		.loc 1 3055 2 is_stmt 1 discriminator 2 view .LVU940
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3407              		.loc 1 3055 46 is_stmt 0 discriminator 2 view .LVU941
 3408 0024 1168     		ldr	r1, [r2]
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3409              		.loc 1 3055 2 discriminator 2 view .LVU942
 3410 0026 1831     		adds	r1, r1, #24
 3411 0028 FFF7FEFF 		bl	vListInsertEnd
 3412              	.LVL270:
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3413              		.loc 1 3057 2 is_stmt 1 discriminator 2 view .LVU943
 3414 002c 0121     		movs	r1, #1
 3415 002e 2000     		movs	r0, r4
 3416 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3417              	.LVL271:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3418              		.loc 1 3058 1 is_stmt 0 discriminator 2 view .LVU944
 3419              		@ sp needed
 3420              	.LVL272:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3421              		.loc 1 3058 1 discriminator 2 view .LVU945
 3422 0034 70BD     		pop	{r4, r5, r6, pc}
 3423              	.L267:
 3424 0036 C046     		.align	2
 3425              	.L266:
ARM GAS  /tmp/ccPYbq7S.s 			page 167


 3426 0038 00000000 		.word	.LANCHOR15
 3427 003c 00000000 		.word	.LANCHOR9
 3428              		.cfi_endproc
 3429              	.LFE24:
 3431              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3432              		.align	1
 3433              		.global	xTaskRemoveFromEventList
 3434              		.syntax unified
 3435              		.code	16
 3436              		.thumb_func
 3438              	xTaskRemoveFromEventList:
 3439              	.LVL273:
 3440              	.LFB25:
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3441              		.loc 1 3095 1 is_stmt 1 view -0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 0, uses_anonymous_args = 0
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3445              		.loc 1 3095 1 is_stmt 0 view .LVU947
 3446 0000 70B5     		push	{r4, r5, r6, lr}
 3447              	.LCFI28:
 3448              		.cfi_def_cfa_offset 16
 3449              		.cfi_offset 4, -16
 3450              		.cfi_offset 5, -12
 3451              		.cfi_offset 6, -8
 3452              		.cfi_offset 14, -4
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3453              		.loc 1 3096 1 is_stmt 1 view .LVU948
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3454              		.loc 1 3097 1 view .LVU949
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3455              		.loc 1 3112 2 view .LVU950
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3456              		.loc 1 3112 19 is_stmt 0 view .LVU951
 3457 0002 C368     		ldr	r3, [r0, #12]
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3458              		.loc 1 3112 17 view .LVU952
 3459 0004 DC68     		ldr	r4, [r3, #12]
 3460              	.LVL274:
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3461              		.loc 1 3113 2 is_stmt 1 view .LVU953
 3462 0006 002C     		cmp	r4, #0
 3463 0008 26D0     		beq	.L276
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3464              		.loc 1 3113 32 discriminator 2 view .LVU954
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3465              		.loc 1 3114 2 discriminator 2 view .LVU955
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3466              		.loc 1 3114 11 is_stmt 0 discriminator 2 view .LVU956
 3467 000a 2500     		movs	r5, r4
 3468 000c 1835     		adds	r5, r5, #24
 3469 000e 2800     		movs	r0, r5
 3470              	.LVL275:
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3471              		.loc 1 3114 11 discriminator 2 view .LVU957
 3472 0010 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccPYbq7S.s 			page 168


 3473              	.LVL276:
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3474              		.loc 1 3116 2 is_stmt 1 discriminator 2 view .LVU958
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3475              		.loc 1 3116 27 is_stmt 0 discriminator 2 view .LVU959
 3476 0014 154B     		ldr	r3, .L277
 3477 0016 1B68     		ldr	r3, [r3]
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3478              		.loc 1 3116 4 discriminator 2 view .LVU960
 3479 0018 002B     		cmp	r3, #0
 3480 001a 1FD1     		bne	.L271
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3481              		.loc 1 3118 3 is_stmt 1 view .LVU961
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3482              		.loc 1 3118 12 is_stmt 0 view .LVU962
 3483 001c 251D     		adds	r5, r4, #4
 3484 001e 2800     		movs	r0, r5
 3485 0020 FFF7FEFF 		bl	uxListRemove
 3486              	.LVL277:
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3487              		.loc 1 3119 3 is_stmt 1 view .LVU963
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3488              		.loc 1 3119 3 view .LVU964
 3489 0024 E36A     		ldr	r3, [r4, #44]
 3490 0026 124A     		ldr	r2, .L277+4
 3491 0028 1268     		ldr	r2, [r2]
 3492 002a 9342     		cmp	r3, r2
 3493 002c 01D9     		bls	.L272
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3494              		.loc 1 3119 3 discriminator 1 view .LVU965
 3495 002e 104A     		ldr	r2, .L277+4
 3496 0030 1360     		str	r3, [r2]
 3497              	.L272:
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3498              		.loc 1 3119 3 discriminator 3 view .LVU966
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3499              		.loc 1 3119 3 discriminator 3 view .LVU967
 3500 0032 9800     		lsls	r0, r3, #2
 3501 0034 C018     		adds	r0, r0, r3
 3502 0036 8000     		lsls	r0, r0, #2
 3503 0038 0E4B     		ldr	r3, .L277+8
 3504 003a C018     		adds	r0, r0, r3
 3505 003c 2900     		movs	r1, r5
 3506 003e FFF7FEFF 		bl	vListInsertEnd
 3507              	.LVL278:
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3508              		.loc 1 3119 42 discriminator 3 view .LVU968
 3509              	.L273:
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3510              		.loc 1 3142 2 view .LVU969
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3511              		.loc 1 3142 20 is_stmt 0 view .LVU970
 3512 0042 E26A     		ldr	r2, [r4, #44]
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3513              		.loc 1 3142 47 view .LVU971
 3514 0044 0C4B     		ldr	r3, .L277+12
 3515 0046 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccPYbq7S.s 			page 169


 3516 0048 DB6A     		ldr	r3, [r3, #44]
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3517              		.loc 1 3142 4 view .LVU972
 3518 004a 9A42     		cmp	r2, r3
 3519 004c 0BD9     		bls	.L275
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3520              		.loc 1 3147 3 is_stmt 1 view .LVU973
 3521              	.LVL279:
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3522              		.loc 1 3151 3 view .LVU974
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3523              		.loc 1 3151 17 is_stmt 0 view .LVU975
 3524 004e 0B4B     		ldr	r3, .L277+16
 3525 0050 0122     		movs	r2, #1
 3526 0052 1A60     		str	r2, [r3]
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3527              		.loc 1 3147 11 view .LVU976
 3528 0054 0120     		movs	r0, #1
 3529              	.LVL280:
 3530              	.L268:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3531              		.loc 1 3159 1 view .LVU977
 3532              		@ sp needed
 3533              	.LVL281:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3534              		.loc 1 3159 1 view .LVU978
 3535 0056 70BD     		pop	{r4, r5, r6, pc}
 3536              	.LVL282:
 3537              	.L276:
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3538              		.loc 1 3113 2 is_stmt 1 discriminator 1 view .LVU979
 3539              		.syntax divided
 3540              	@ 3113 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3541 0058 72B6     		 cpsid i 
 3542              	@ 0 "" 2
 3543              		.thumb
 3544              		.syntax unified
 3545              	.L270:
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3546              		.loc 1 3113 2 discriminator 1 view .LVU980
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3547              		.loc 1 3113 2 discriminator 1 view .LVU981
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3548              		.loc 1 3113 2 discriminator 1 view .LVU982
 3549 005a FEE7     		b	.L270
 3550              	.LVL283:
 3551              	.L271:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3552              		.loc 1 3139 3 view .LVU983
 3553 005c 2900     		movs	r1, r5
 3554 005e 0848     		ldr	r0, .L277+20
 3555 0060 FFF7FEFF 		bl	vListInsertEnd
 3556              	.LVL284:
 3557 0064 EDE7     		b	.L273
 3558              	.L275:
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3559              		.loc 1 3155 11 is_stmt 0 view .LVU984
ARM GAS  /tmp/ccPYbq7S.s 			page 170


 3560 0066 0020     		movs	r0, #0
 3561              	.LVL285:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3562              		.loc 1 3158 2 is_stmt 1 view .LVU985
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3563              		.loc 1 3158 9 is_stmt 0 view .LVU986
 3564 0068 F5E7     		b	.L268
 3565              	.L278:
 3566 006a C046     		.align	2
 3567              	.L277:
 3568 006c 00000000 		.word	.LANCHOR15
 3569 0070 00000000 		.word	.LANCHOR12
 3570 0074 00000000 		.word	pxReadyTasksLists
 3571 0078 00000000 		.word	.LANCHOR9
 3572 007c 00000000 		.word	.LANCHOR19
 3573 0080 00000000 		.word	.LANCHOR1
 3574              		.cfi_endproc
 3575              	.LFE25:
 3577              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3578              		.align	1
 3579              		.global	vTaskRemoveFromUnorderedEventList
 3580              		.syntax unified
 3581              		.code	16
 3582              		.thumb_func
 3584              	vTaskRemoveFromUnorderedEventList:
 3585              	.LVL286:
 3586              	.LFB26:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3587              		.loc 1 3163 1 is_stmt 1 view -0
 3588              		.cfi_startproc
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3591              		.loc 1 3163 1 is_stmt 0 view .LVU988
 3592 0000 70B5     		push	{r4, r5, r6, lr}
 3593              	.LCFI29:
 3594              		.cfi_def_cfa_offset 16
 3595              		.cfi_offset 4, -16
 3596              		.cfi_offset 5, -12
 3597              		.cfi_offset 6, -8
 3598              		.cfi_offset 14, -4
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3599              		.loc 1 3164 1 is_stmt 1 view .LVU989
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3600              		.loc 1 3168 2 view .LVU990
 3601 0002 174B     		ldr	r3, .L287
 3602 0004 1B68     		ldr	r3, [r3]
 3603 0006 002B     		cmp	r3, #0
 3604 0008 01D1     		bne	.L280
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3605              		.loc 1 3168 2 discriminator 1 view .LVU991
 3606              		.syntax divided
 3607              	@ 3168 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3608 000a 72B6     		 cpsid i 
 3609              	@ 0 "" 2
 3610              		.thumb
 3611              		.syntax unified
ARM GAS  /tmp/ccPYbq7S.s 			page 171


 3612              	.L281:
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3613              		.loc 1 3168 2 discriminator 1 view .LVU992
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3614              		.loc 1 3168 2 discriminator 1 view .LVU993
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3615              		.loc 1 3168 2 discriminator 1 view .LVU994
 3616 000c FEE7     		b	.L281
 3617              	.L280:
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3618              		.loc 1 3168 49 discriminator 2 view .LVU995
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3619              		.loc 1 3171 2 discriminator 2 view .LVU996
 3620 000e 8023     		movs	r3, #128
 3621 0010 1B06     		lsls	r3, r3, #24
 3622 0012 1943     		orrs	r1, r3
 3623              	.LVL287:
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3624              		.loc 1 3171 2 is_stmt 0 discriminator 2 view .LVU997
 3625 0014 0160     		str	r1, [r0]
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3626              		.loc 1 3175 2 is_stmt 1 discriminator 2 view .LVU998
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3627              		.loc 1 3175 17 is_stmt 0 discriminator 2 view .LVU999
 3628 0016 C468     		ldr	r4, [r0, #12]
 3629              	.LVL288:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3630              		.loc 1 3176 2 is_stmt 1 discriminator 2 view .LVU1000
 3631 0018 002C     		cmp	r4, #0
 3632 001a 1ED0     		beq	.L286
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3633              		.loc 1 3176 32 discriminator 2 view .LVU1001
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3634              		.loc 1 3177 2 discriminator 2 view .LVU1002
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3635              		.loc 1 3177 11 is_stmt 0 discriminator 2 view .LVU1003
 3636 001c FFF7FEFF 		bl	uxListRemove
 3637              	.LVL289:
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3638              		.loc 1 3182 2 is_stmt 1 discriminator 2 view .LVU1004
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3639              		.loc 1 3182 11 is_stmt 0 discriminator 2 view .LVU1005
 3640 0020 251D     		adds	r5, r4, #4
 3641 0022 2800     		movs	r0, r5
 3642 0024 FFF7FEFF 		bl	uxListRemove
 3643              	.LVL290:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3644              		.loc 1 3183 2 is_stmt 1 discriminator 2 view .LVU1006
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3645              		.loc 1 3183 2 discriminator 2 view .LVU1007
 3646 0028 E36A     		ldr	r3, [r4, #44]
 3647 002a 0E4A     		ldr	r2, .L287+4
 3648 002c 1268     		ldr	r2, [r2]
 3649 002e 9342     		cmp	r3, r2
 3650 0030 01D9     		bls	.L284
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3651              		.loc 1 3183 2 discriminator 1 view .LVU1008
ARM GAS  /tmp/ccPYbq7S.s 			page 172


 3652 0032 0C4A     		ldr	r2, .L287+4
 3653 0034 1360     		str	r3, [r2]
 3654              	.L284:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3655              		.loc 1 3183 2 discriminator 3 view .LVU1009
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3656              		.loc 1 3183 2 discriminator 3 view .LVU1010
 3657 0036 9800     		lsls	r0, r3, #2
 3658 0038 C018     		adds	r0, r0, r3
 3659 003a 8000     		lsls	r0, r0, #2
 3660 003c 0A4B     		ldr	r3, .L287+8
 3661 003e C018     		adds	r0, r0, r3
 3662 0040 2900     		movs	r1, r5
 3663 0042 FFF7FEFF 		bl	vListInsertEnd
 3664              	.LVL291:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3665              		.loc 1 3183 41 discriminator 3 view .LVU1011
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3666              		.loc 1 3185 2 discriminator 3 view .LVU1012
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3667              		.loc 1 3185 20 is_stmt 0 discriminator 3 view .LVU1013
 3668 0046 E26A     		ldr	r2, [r4, #44]
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3669              		.loc 1 3185 47 discriminator 3 view .LVU1014
 3670 0048 084B     		ldr	r3, .L287+12
 3671 004a 1B68     		ldr	r3, [r3]
 3672 004c DB6A     		ldr	r3, [r3, #44]
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3673              		.loc 1 3185 4 discriminator 3 view .LVU1015
 3674 004e 9A42     		cmp	r2, r3
 3675 0050 02D9     		bls	.L279
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3676              		.loc 1 3191 3 is_stmt 1 view .LVU1016
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3677              		.loc 1 3191 17 is_stmt 0 view .LVU1017
 3678 0052 074B     		ldr	r3, .L287+16
 3679 0054 0122     		movs	r2, #1
 3680 0056 1A60     		str	r2, [r3]
 3681              	.L279:
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3682              		.loc 1 3193 1 view .LVU1018
 3683              		@ sp needed
 3684              	.LVL292:
 3685              	.LVL293:
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3686              		.loc 1 3193 1 view .LVU1019
 3687 0058 70BD     		pop	{r4, r5, r6, pc}
 3688              	.LVL294:
 3689              	.L286:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3690              		.loc 1 3176 2 is_stmt 1 discriminator 1 view .LVU1020
 3691              		.syntax divided
 3692              	@ 3176 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3693 005a 72B6     		 cpsid i 
 3694              	@ 0 "" 2
 3695              		.thumb
 3696              		.syntax unified
ARM GAS  /tmp/ccPYbq7S.s 			page 173


 3697              	.L283:
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3698              		.loc 1 3176 2 discriminator 2 view .LVU1021
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3699              		.loc 1 3176 2 discriminator 2 view .LVU1022
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3700              		.loc 1 3176 2 discriminator 2 view .LVU1023
 3701 005c FEE7     		b	.L283
 3702              	.L288:
 3703 005e C046     		.align	2
 3704              	.L287:
 3705 0060 00000000 		.word	.LANCHOR15
 3706 0064 00000000 		.word	.LANCHOR12
 3707 0068 00000000 		.word	pxReadyTasksLists
 3708 006c 00000000 		.word	.LANCHOR9
 3709 0070 00000000 		.word	.LANCHOR19
 3710              		.cfi_endproc
 3711              	.LFE26:
 3713              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3714              		.align	1
 3715              		.global	vTaskSetTimeOutState
 3716              		.syntax unified
 3717              		.code	16
 3718              		.thumb_func
 3720              	vTaskSetTimeOutState:
 3721              	.LVL295:
 3722              	.LFB27:
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3723              		.loc 1 3197 1 view -0
 3724              		.cfi_startproc
 3725              		@ args = 0, pretend = 0, frame = 0
 3726              		@ frame_needed = 0, uses_anonymous_args = 0
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3727              		.loc 1 3197 1 is_stmt 0 view .LVU1025
 3728 0000 10B5     		push	{r4, lr}
 3729              	.LCFI30:
 3730              		.cfi_def_cfa_offset 8
 3731              		.cfi_offset 4, -8
 3732              		.cfi_offset 14, -4
 3733 0002 041E     		subs	r4, r0, #0
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3734              		.loc 1 3198 2 is_stmt 1 view .LVU1026
 3735 0004 0AD0     		beq	.L292
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3736              		.loc 1 3198 27 discriminator 2 view .LVU1027
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3737              		.loc 1 3199 2 discriminator 2 view .LVU1028
 3738 0006 FFF7FEFF 		bl	vPortEnterCritical
 3739              	.LVL296:
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3740              		.loc 1 3201 3 discriminator 2 view .LVU1029
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3741              		.loc 1 3201 29 is_stmt 0 discriminator 2 view .LVU1030
 3742 000a 054B     		ldr	r3, .L293
 3743 000c 1B68     		ldr	r3, [r3]
 3744 000e 2360     		str	r3, [r4]
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccPYbq7S.s 			page 174


 3745              		.loc 1 3202 3 is_stmt 1 discriminator 2 view .LVU1031
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3746              		.loc 1 3202 30 is_stmt 0 discriminator 2 view .LVU1032
 3747 0010 044B     		ldr	r3, .L293+4
 3748 0012 1B68     		ldr	r3, [r3]
 3749 0014 6360     		str	r3, [r4, #4]
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3750              		.loc 1 3204 2 is_stmt 1 discriminator 2 view .LVU1033
 3751 0016 FFF7FEFF 		bl	vPortExitCritical
 3752              	.LVL297:
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3753              		.loc 1 3205 1 is_stmt 0 discriminator 2 view .LVU1034
 3754              		@ sp needed
 3755              	.LVL298:
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3756              		.loc 1 3205 1 discriminator 2 view .LVU1035
 3757 001a 10BD     		pop	{r4, pc}
 3758              	.LVL299:
 3759              	.L292:
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3760              		.loc 1 3198 2 is_stmt 1 discriminator 1 view .LVU1036
 3761              		.syntax divided
 3762              	@ 3198 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3763 001c 72B6     		 cpsid i 
 3764              	@ 0 "" 2
 3765              		.thumb
 3766              		.syntax unified
 3767              	.L291:
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3768              		.loc 1 3198 2 discriminator 1 view .LVU1037
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3769              		.loc 1 3198 2 discriminator 1 view .LVU1038
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3770              		.loc 1 3198 2 discriminator 1 view .LVU1039
 3771 001e FEE7     		b	.L291
 3772              	.L294:
 3773              		.align	2
 3774              	.L293:
 3775 0020 00000000 		.word	.LANCHOR17
 3776 0024 00000000 		.word	.LANCHOR14
 3777              		.cfi_endproc
 3778              	.LFE27:
 3780              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3781              		.align	1
 3782              		.global	vTaskInternalSetTimeOutState
 3783              		.syntax unified
 3784              		.code	16
 3785              		.thumb_func
 3787              	vTaskInternalSetTimeOutState:
 3788              	.LVL300:
 3789              	.LFB28:
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3790              		.loc 1 3209 1 view -0
 3791              		.cfi_startproc
 3792              		@ args = 0, pretend = 0, frame = 0
 3793              		@ frame_needed = 0, uses_anonymous_args = 0
 3794              		@ link register save eliminated.
ARM GAS  /tmp/ccPYbq7S.s 			page 175


3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3795              		.loc 1 3211 2 view .LVU1041
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3796              		.loc 1 3211 28 is_stmt 0 view .LVU1042
 3797 0000 034B     		ldr	r3, .L296
 3798 0002 1B68     		ldr	r3, [r3]
 3799 0004 0360     		str	r3, [r0]
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3800              		.loc 1 3212 2 is_stmt 1 view .LVU1043
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3801              		.loc 1 3212 29 is_stmt 0 view .LVU1044
 3802 0006 034B     		ldr	r3, .L296+4
 3803 0008 1B68     		ldr	r3, [r3]
 3804 000a 4360     		str	r3, [r0, #4]
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3805              		.loc 1 3213 1 view .LVU1045
 3806              		@ sp needed
 3807 000c 7047     		bx	lr
 3808              	.L297:
 3809 000e C046     		.align	2
 3810              	.L296:
 3811 0010 00000000 		.word	.LANCHOR17
 3812 0014 00000000 		.word	.LANCHOR14
 3813              		.cfi_endproc
 3814              	.LFE28:
 3816              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3817              		.align	1
 3818              		.global	xTaskCheckForTimeOut
 3819              		.syntax unified
 3820              		.code	16
 3821              		.thumb_func
 3823              	xTaskCheckForTimeOut:
 3824              	.LVL301:
 3825              	.LFB29:
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3826              		.loc 1 3217 1 is_stmt 1 view -0
 3827              		.cfi_startproc
 3828              		@ args = 0, pretend = 0, frame = 0
 3829              		@ frame_needed = 0, uses_anonymous_args = 0
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3830              		.loc 1 3217 1 is_stmt 0 view .LVU1047
 3831 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3832              	.LCFI31:
 3833              		.cfi_def_cfa_offset 24
 3834              		.cfi_offset 3, -24
 3835              		.cfi_offset 4, -20
 3836              		.cfi_offset 5, -16
 3837              		.cfi_offset 6, -12
 3838              		.cfi_offset 7, -8
 3839              		.cfi_offset 14, -4
 3840 0002 0400     		movs	r4, r0
 3841 0004 0D00     		movs	r5, r1
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3842              		.loc 1 3218 1 is_stmt 1 view .LVU1048
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3843              		.loc 1 3220 2 view .LVU1049
 3844 0006 0028     		cmp	r0, #0
ARM GAS  /tmp/ccPYbq7S.s 			page 176


 3845 0008 17D0     		beq	.L308
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3846              		.loc 1 3220 27 discriminator 2 view .LVU1050
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3847              		.loc 1 3221 2 discriminator 2 view .LVU1051
 3848 000a 0029     		cmp	r1, #0
 3849 000c 17D0     		beq	.L309
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3850              		.loc 1 3221 31 discriminator 2 view .LVU1052
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3851              		.loc 1 3223 2 discriminator 2 view .LVU1053
 3852 000e FFF7FEFF 		bl	vPortEnterCritical
 3853              	.LVL302:
 3854              	.LBB18:
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3855              		.loc 1 3226 3 discriminator 2 view .LVU1054
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3856              		.loc 1 3226 20 is_stmt 0 discriminator 2 view .LVU1055
 3857 0012 134B     		ldr	r3, .L311
 3858 0014 1968     		ldr	r1, [r3]
 3859              	.LVL303:
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3860              		.loc 1 3227 3 is_stmt 1 discriminator 2 view .LVU1056
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3861              		.loc 1 3227 62 is_stmt 0 discriminator 2 view .LVU1057
 3862 0016 6368     		ldr	r3, [r4, #4]
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3863              		.loc 1 3227 20 discriminator 2 view .LVU1058
 3864 0018 C81A     		subs	r0, r1, r3
 3865              	.LVL304:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3866              		.loc 1 3241 4 is_stmt 1 discriminator 2 view .LVU1059
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3867              		.loc 1 3241 8 is_stmt 0 discriminator 2 view .LVU1060
 3868 001a 2A68     		ldr	r2, [r5]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3869              		.loc 1 3241 6 discriminator 2 view .LVU1061
 3870 001c 561C     		adds	r6, r2, #1
 3871 001e 18D0     		beq	.L306
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3872              		.loc 1 3251 3 is_stmt 1 view .LVU1062
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3873              		.loc 1 3251 25 is_stmt 0 view .LVU1063
 3874 0020 104E     		ldr	r6, .L311+4
 3875 0022 3668     		ldr	r6, [r6]
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3876              		.loc 1 3251 5 view .LVU1064
 3877 0024 2768     		ldr	r7, [r4]
 3878 0026 B742     		cmp	r7, r6
 3879 0028 01D0     		beq	.L304
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3880              		.loc 1 3251 56 discriminator 1 view .LVU1065
 3881 002a 8B42     		cmp	r3, r1
 3882 002c 16D9     		bls	.L307
 3883              	.L304:
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3884              		.loc 1 3260 8 is_stmt 1 view .LVU1066
ARM GAS  /tmp/ccPYbq7S.s 			page 177


3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3885              		.loc 1 3260 10 is_stmt 0 view .LVU1067
 3886 002e 8242     		cmp	r2, r0
 3887 0030 07D8     		bhi	.L310
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3888              		.loc 1 3269 4 is_stmt 1 view .LVU1068
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3889              		.loc 1 3269 19 is_stmt 0 view .LVU1069
 3890 0032 0023     		movs	r3, #0
 3891 0034 2B60     		str	r3, [r5]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3892              		.loc 1 3270 4 is_stmt 1 view .LVU1070
 3893              	.LVL305:
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3894              		.loc 1 3270 12 is_stmt 0 view .LVU1071
 3895 0036 0124     		movs	r4, #1
 3896              	.LVL306:
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3897              		.loc 1 3270 12 view .LVU1072
 3898 0038 0CE0     		b	.L303
 3899              	.LVL307:
 3900              	.L308:
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3901              		.loc 1 3270 12 view .LVU1073
 3902              	.LBE18:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3903              		.loc 1 3220 2 is_stmt 1 discriminator 1 view .LVU1074
 3904              		.syntax divided
 3905              	@ 3220 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3906 003a 72B6     		 cpsid i 
 3907              	@ 0 "" 2
 3908              		.thumb
 3909              		.syntax unified
 3910              	.L300:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3911              		.loc 1 3220 2 discriminator 1 view .LVU1075
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3912              		.loc 1 3220 2 discriminator 1 view .LVU1076
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3913              		.loc 1 3220 2 discriminator 1 view .LVU1077
 3914 003c FEE7     		b	.L300
 3915              	.L309:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3916              		.loc 1 3221 2 discriminator 1 view .LVU1078
 3917              		.syntax divided
 3918              	@ 3221 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3919 003e 72B6     		 cpsid i 
 3920              	@ 0 "" 2
 3921              		.thumb
 3922              		.syntax unified
 3923              	.L302:
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3924              		.loc 1 3221 2 discriminator 2 view .LVU1079
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3925              		.loc 1 3221 2 discriminator 2 view .LVU1080
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3926              		.loc 1 3221 2 discriminator 2 view .LVU1081
ARM GAS  /tmp/ccPYbq7S.s 			page 178


 3927 0040 FEE7     		b	.L302
 3928              	.LVL308:
 3929              	.L310:
 3930              	.LBB19:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3931              		.loc 1 3263 4 view .LVU1082
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3932              		.loc 1 3263 19 is_stmt 0 view .LVU1083
 3933 0042 5B1A     		subs	r3, r3, r1
 3934 0044 9B18     		adds	r3, r3, r2
 3935 0046 2B60     		str	r3, [r5]
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3936              		.loc 1 3264 4 is_stmt 1 view .LVU1084
 3937 0048 2000     		movs	r0, r4
 3938              	.LVL309:
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3939              		.loc 1 3264 4 is_stmt 0 view .LVU1085
 3940 004a FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3941              	.LVL310:
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3942              		.loc 1 3265 4 is_stmt 1 view .LVU1086
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3943              		.loc 1 3265 12 is_stmt 0 view .LVU1087
 3944 004e 0024     		movs	r4, #0
 3945              	.LVL311:
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3946              		.loc 1 3265 12 view .LVU1088
 3947 0050 00E0     		b	.L303
 3948              	.LVL312:
 3949              	.L306:
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3950              		.loc 1 3246 13 view .LVU1089
 3951 0052 0024     		movs	r4, #0
 3952              	.LVL313:
 3953              	.L303:
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3954              		.loc 1 3246 13 view .LVU1090
 3955              	.LBE19:
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3956              		.loc 1 3273 2 is_stmt 1 view .LVU1091
 3957 0054 FFF7FEFF 		bl	vPortExitCritical
 3958              	.LVL314:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3959              		.loc 1 3275 2 view .LVU1092
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3960              		.loc 1 3276 1 is_stmt 0 view .LVU1093
 3961 0058 2000     		movs	r0, r4
 3962              		@ sp needed
 3963              	.LVL315:
 3964              	.LVL316:
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3965              		.loc 1 3276 1 view .LVU1094
 3966 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3967              	.LVL317:
 3968              	.L307:
 3969              	.LBB20:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccPYbq7S.s 			page 179


 3970              		.loc 1 3258 12 view .LVU1095
 3971 005c 0124     		movs	r4, #1
 3972              	.LVL318:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3973              		.loc 1 3258 12 view .LVU1096
 3974 005e F9E7     		b	.L303
 3975              	.L312:
 3976              		.align	2
 3977              	.L311:
 3978 0060 00000000 		.word	.LANCHOR14
 3979 0064 00000000 		.word	.LANCHOR17
 3980              	.LBE20:
 3981              		.cfi_endproc
 3982              	.LFE29:
 3984              		.section	.text.vTaskMissedYield,"ax",%progbits
 3985              		.align	1
 3986              		.global	vTaskMissedYield
 3987              		.syntax unified
 3988              		.code	16
 3989              		.thumb_func
 3991              	vTaskMissedYield:
 3992              	.LFB30:
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 3993              		.loc 1 3280 1 is_stmt 1 view -0
 3994              		.cfi_startproc
 3995              		@ args = 0, pretend = 0, frame = 0
 3996              		@ frame_needed = 0, uses_anonymous_args = 0
 3997              		@ link register save eliminated.
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3998              		.loc 1 3281 2 view .LVU1098
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3999              		.loc 1 3281 16 is_stmt 0 view .LVU1099
 4000 0000 014B     		ldr	r3, .L314
 4001 0002 0122     		movs	r2, #1
 4002 0004 1A60     		str	r2, [r3]
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4003              		.loc 1 3282 1 view .LVU1100
 4004              		@ sp needed
 4005 0006 7047     		bx	lr
 4006              	.L315:
 4007              		.align	2
 4008              	.L314:
 4009 0008 00000000 		.word	.LANCHOR19
 4010              		.cfi_endproc
 4011              	.LFE30:
 4013              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4014              		.align	1
 4015              		.global	xTaskGetCurrentTaskHandle
 4016              		.syntax unified
 4017              		.code	16
 4018              		.thumb_func
 4020              	xTaskGetCurrentTaskHandle:
 4021              	.LFB36:
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4022              		.loc 1 3907 2 is_stmt 1 view -0
 4023              		.cfi_startproc
 4024              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccPYbq7S.s 			page 180


 4025              		@ frame_needed = 0, uses_anonymous_args = 0
 4026              		@ link register save eliminated.
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4027              		.loc 1 3908 2 view .LVU1102
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4028              		.loc 1 3913 3 view .LVU1103
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4029              		.loc 1 3913 11 is_stmt 0 view .LVU1104
 4030 0000 014B     		ldr	r3, .L317
 4031 0002 1868     		ldr	r0, [r3]
 4032              	.LVL319:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4033              		.loc 1 3915 3 is_stmt 1 view .LVU1105
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4034              		.loc 1 3916 2 is_stmt 0 view .LVU1106
 4035              		@ sp needed
 4036 0004 7047     		bx	lr
 4037              	.L318:
 4038 0006 C046     		.align	2
 4039              	.L317:
 4040 0008 00000000 		.word	.LANCHOR9
 4041              		.cfi_endproc
 4042              	.LFE36:
 4044              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4045              		.align	1
 4046              		.global	xTaskGetSchedulerState
 4047              		.syntax unified
 4048              		.code	16
 4049              		.thumb_func
 4051              	xTaskGetSchedulerState:
 4052              	.LFB37:
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4053              		.loc 1 3924 2 is_stmt 1 view -0
 4054              		.cfi_startproc
 4055              		@ args = 0, pretend = 0, frame = 0
 4056              		@ frame_needed = 0, uses_anonymous_args = 0
 4057              		@ link register save eliminated.
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4058              		.loc 1 3925 2 view .LVU1108
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4059              		.loc 1 3927 3 view .LVU1109
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4060              		.loc 1 3927 25 is_stmt 0 view .LVU1110
 4061 0000 064B     		ldr	r3, .L324
 4062 0002 1B68     		ldr	r3, [r3]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4063              		.loc 1 3927 5 view .LVU1111
 4064 0004 002B     		cmp	r3, #0
 4065 0006 07D0     		beq	.L321
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4066              		.loc 1 3933 4 is_stmt 1 view .LVU1112
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4067              		.loc 1 3933 29 is_stmt 0 view .LVU1113
 4068 0008 054B     		ldr	r3, .L324+4
 4069 000a 1B68     		ldr	r3, [r3]
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4070              		.loc 1 3933 6 view .LVU1114
ARM GAS  /tmp/ccPYbq7S.s 			page 181


 4071 000c 002B     		cmp	r3, #0
 4072 000e 01D0     		beq	.L323
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4073              		.loc 1 3939 13 view .LVU1115
 4074 0010 0020     		movs	r0, #0
 4075              	.LVL320:
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4076              		.loc 1 3943 3 is_stmt 1 view .LVU1116
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4077              		.loc 1 3943 10 is_stmt 0 view .LVU1117
 4078 0012 02E0     		b	.L319
 4079              	.LVL321:
 4080              	.L323:
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4081              		.loc 1 3935 13 view .LVU1118
 4082 0014 0220     		movs	r0, #2
 4083 0016 00E0     		b	.L319
 4084              	.L321:
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4085              		.loc 1 3929 12 view .LVU1119
 4086 0018 0120     		movs	r0, #1
 4087              	.L319:
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4088              		.loc 1 3944 2 view .LVU1120
 4089              		@ sp needed
 4090 001a 7047     		bx	lr
 4091              	.L325:
 4092              		.align	2
 4093              	.L324:
 4094 001c 00000000 		.word	.LANCHOR10
 4095 0020 00000000 		.word	.LANCHOR15
 4096              		.cfi_endproc
 4097              	.LFE37:
 4099              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4100              		.align	1
 4101              		.global	xTaskPriorityInherit
 4102              		.syntax unified
 4103              		.code	16
 4104              		.thumb_func
 4106              	xTaskPriorityInherit:
 4107              	.LVL322:
 4108              	.LFB38:
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4109              		.loc 1 3952 2 is_stmt 1 view -0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 0
 4112              		@ frame_needed = 0, uses_anonymous_args = 0
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4113              		.loc 1 3952 2 is_stmt 0 view .LVU1122
 4114 0000 70B5     		push	{r4, r5, r6, lr}
 4115              	.LCFI32:
 4116              		.cfi_def_cfa_offset 16
 4117              		.cfi_offset 4, -16
 4118              		.cfi_offset 5, -12
 4119              		.cfi_offset 6, -8
 4120              		.cfi_offset 14, -4
 4121 0002 041E     		subs	r4, r0, #0
ARM GAS  /tmp/ccPYbq7S.s 			page 182


3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4122              		.loc 1 3953 2 is_stmt 1 view .LVU1123
 4123              	.LVL323:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4124              		.loc 1 3954 2 view .LVU1124
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4125              		.loc 1 3959 3 view .LVU1125
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4126              		.loc 1 3959 5 is_stmt 0 view .LVU1126
 4127 0004 3CD0     		beq	.L332
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4128              		.loc 1 3964 4 is_stmt 1 view .LVU1127
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4129              		.loc 1 3964 24 is_stmt 0 view .LVU1128
 4130 0006 C26A     		ldr	r2, [r0, #44]
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4131              		.loc 1 3964 51 view .LVU1129
 4132 0008 1F4B     		ldr	r3, .L335
 4133 000a 1B68     		ldr	r3, [r3]
 4134 000c DB6A     		ldr	r3, [r3, #44]
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4135              		.loc 1 3964 6 view .LVU1130
 4136 000e 9A42     		cmp	r2, r3
 4137 0010 2ED2     		bcs	.L328
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4138              		.loc 1 3969 5 is_stmt 1 view .LVU1131
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4139              		.loc 1 3969 7 is_stmt 0 view .LVU1132
 4140 0012 8369     		ldr	r3, [r0, #24]
 4141 0014 002B     		cmp	r3, #0
 4142 0016 05DB     		blt	.L329
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4143              		.loc 1 3971 6 is_stmt 1 view .LVU1133
 4144 0018 1B4B     		ldr	r3, .L335
 4145 001a 1B68     		ldr	r3, [r3]
 4146 001c D96A     		ldr	r1, [r3, #44]
 4147 001e 0723     		movs	r3, #7
 4148 0020 5B1A     		subs	r3, r3, r1
 4149 0022 8361     		str	r3, [r0, #24]
 4150              	.L329:
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4151              		.loc 1 3975 30 view .LVU1134
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4152              		.loc 1 3980 5 view .LVU1135
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4153              		.loc 1 3980 9 is_stmt 0 view .LVU1136
 4154 0024 9300     		lsls	r3, r2, #2
 4155 0026 9B18     		adds	r3, r3, r2
 4156 0028 9B00     		lsls	r3, r3, #2
 4157 002a 184A     		ldr	r2, .L335+4
 4158 002c 9B18     		adds	r3, r3, r2
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4159              		.loc 1 3980 7 view .LVU1137
 4160 002e 6269     		ldr	r2, [r4, #20]
 4161 0030 9A42     		cmp	r2, r3
 4162 0032 05D0     		beq	.L334
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccPYbq7S.s 			page 183


 4163              		.loc 1 3998 6 is_stmt 1 view .LVU1138
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4164              		.loc 1 3998 49 is_stmt 0 view .LVU1139
 4165 0034 144B     		ldr	r3, .L335
 4166 0036 1B68     		ldr	r3, [r3]
 4167 0038 DB6A     		ldr	r3, [r3, #44]
 4168 003a E362     		str	r3, [r4, #44]
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4169              		.loc 1 4004 13 view .LVU1140
 4170 003c 0120     		movs	r0, #1
 4171              	.LVL324:
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4172              		.loc 1 4004 13 view .LVU1141
 4173 003e 20E0     		b	.L326
 4174              	.LVL325:
 4175              	.L334:
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4176              		.loc 1 3982 6 is_stmt 1 view .LVU1142
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4177              		.loc 1 3982 10 is_stmt 0 view .LVU1143
 4178 0040 251D     		adds	r5, r4, #4
 4179 0042 2800     		movs	r0, r5
 4180              	.LVL326:
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4181              		.loc 1 3982 10 view .LVU1144
 4182 0044 FFF7FEFF 		bl	uxListRemove
 4183              	.LVL327:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4184              		.loc 1 3988 31 is_stmt 1 view .LVU1145
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4185              		.loc 1 3992 6 view .LVU1146
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4186              		.loc 1 3992 49 is_stmt 0 view .LVU1147
 4187 0048 0F4B     		ldr	r3, .L335
 4188 004a 1B68     		ldr	r3, [r3]
 4189 004c DB6A     		ldr	r3, [r3, #44]
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4190              		.loc 1 3992 35 view .LVU1148
 4191 004e E362     		str	r3, [r4, #44]
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4192              		.loc 1 3993 6 is_stmt 1 view .LVU1149
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4193              		.loc 1 3993 6 view .LVU1150
 4194 0050 0F4A     		ldr	r2, .L335+8
 4195 0052 1268     		ldr	r2, [r2]
 4196 0054 9342     		cmp	r3, r2
 4197 0056 01D9     		bls	.L331
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4198              		.loc 1 3993 6 discriminator 1 view .LVU1151
 4199 0058 0D4A     		ldr	r2, .L335+8
 4200 005a 1360     		str	r3, [r2]
 4201              	.L331:
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4202              		.loc 1 3993 6 discriminator 3 view .LVU1152
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4203              		.loc 1 3993 6 discriminator 3 view .LVU1153
 4204 005c 9800     		lsls	r0, r3, #2
ARM GAS  /tmp/ccPYbq7S.s 			page 184


 4205 005e C018     		adds	r0, r0, r3
 4206 0060 8000     		lsls	r0, r0, #2
 4207 0062 0A4B     		ldr	r3, .L335+4
 4208 0064 C018     		adds	r0, r0, r3
 4209 0066 2900     		movs	r1, r5
 4210 0068 FFF7FEFF 		bl	vListInsertEnd
 4211              	.LVL328:
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4212              		.loc 1 3993 47 discriminator 3 view .LVU1154
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4213              		.loc 1 4004 13 is_stmt 0 discriminator 3 view .LVU1155
 4214 006c 0120     		movs	r0, #1
 4215 006e 08E0     		b	.L326
 4216              	.LVL329:
 4217              	.L328:
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4218              		.loc 1 4008 5 is_stmt 1 view .LVU1156
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4219              		.loc 1 4008 25 is_stmt 0 view .LVU1157
 4220 0070 426C     		ldr	r2, [r0, #68]
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4221              		.loc 1 4008 56 view .LVU1158
 4222 0072 054B     		ldr	r3, .L335
 4223 0074 1B68     		ldr	r3, [r3]
 4224 0076 DB6A     		ldr	r3, [r3, #44]
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4225              		.loc 1 4008 7 view .LVU1159
 4226 0078 9A42     		cmp	r2, r3
 4227 007a 03D3     		bcc	.L333
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4228              		.loc 1 3954 13 view .LVU1160
 4229 007c 0020     		movs	r0, #0
 4230              	.LVL330:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4231              		.loc 1 3954 13 view .LVU1161
 4232 007e 00E0     		b	.L326
 4233              	.LVL331:
 4234              	.L332:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4235              		.loc 1 3954 13 view .LVU1162
 4236 0080 0020     		movs	r0, #0
 4237              	.LVL332:
 4238              	.L326:
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4239              		.loc 1 4031 2 view .LVU1163
 4240              		@ sp needed
 4241              	.LVL333:
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4242              		.loc 1 4031 2 view .LVU1164
 4243 0082 70BD     		pop	{r4, r5, r6, pc}
 4244              	.LVL334:
 4245              	.L333:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4246              		.loc 1 4017 14 view .LVU1165
 4247 0084 0120     		movs	r0, #1
 4248              	.LVL335:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/ccPYbq7S.s 			page 185


 4249              		.loc 1 4027 28 is_stmt 1 view .LVU1166
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4250              		.loc 1 4030 3 view .LVU1167
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4251              		.loc 1 4030 10 is_stmt 0 view .LVU1168
 4252 0086 FCE7     		b	.L326
 4253              	.L336:
 4254              		.align	2
 4255              	.L335:
 4256 0088 00000000 		.word	.LANCHOR9
 4257 008c 00000000 		.word	pxReadyTasksLists
 4258 0090 00000000 		.word	.LANCHOR12
 4259              		.cfi_endproc
 4260              	.LFE38:
 4262              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4263              		.align	1
 4264              		.global	xTaskPriorityDisinherit
 4265              		.syntax unified
 4266              		.code	16
 4267              		.thumb_func
 4269              	xTaskPriorityDisinherit:
 4270              	.LVL336:
 4271              	.LFB39:
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4272              		.loc 1 4039 2 is_stmt 1 view -0
 4273              		.cfi_startproc
 4274              		@ args = 0, pretend = 0, frame = 0
 4275              		@ frame_needed = 0, uses_anonymous_args = 0
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4276              		.loc 1 4039 2 is_stmt 0 view .LVU1170
 4277 0000 70B5     		push	{r4, r5, r6, lr}
 4278              	.LCFI33:
 4279              		.cfi_def_cfa_offset 16
 4280              		.cfi_offset 4, -16
 4281              		.cfi_offset 5, -12
 4282              		.cfi_offset 6, -8
 4283              		.cfi_offset 14, -4
 4284 0002 041E     		subs	r4, r0, #0
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4285              		.loc 1 4040 2 is_stmt 1 view .LVU1171
 4286              	.LVL337:
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4287              		.loc 1 4041 2 view .LVU1172
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4288              		.loc 1 4043 3 view .LVU1173
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4289              		.loc 1 4043 5 is_stmt 0 view .LVU1174
 4290 0004 2DD0     		beq	.L344
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4291              		.loc 1 4049 4 is_stmt 1 view .LVU1175
 4292 0006 194B     		ldr	r3, .L348
 4293 0008 1B68     		ldr	r3, [r3]
 4294 000a 8342     		cmp	r3, r0
 4295 000c 01D0     		beq	.L339
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4296              		.loc 1 4049 4 discriminator 1 view .LVU1176
 4297              		.syntax divided
ARM GAS  /tmp/ccPYbq7S.s 			page 186


 4298              	@ 4049 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4299 000e 72B6     		 cpsid i 
 4300              	@ 0 "" 2
 4301              		.thumb
 4302              		.syntax unified
 4303              	.L340:
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4304              		.loc 1 4049 4 discriminator 1 view .LVU1177
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4305              		.loc 1 4049 4 discriminator 1 view .LVU1178
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4306              		.loc 1 4049 4 discriminator 1 view .LVU1179
 4307 0010 FEE7     		b	.L340
 4308              	.L339:
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4309              		.loc 1 4049 41 discriminator 2 view .LVU1180
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4310              		.loc 1 4050 4 discriminator 2 view .LVU1181
 4311 0012 836C     		ldr	r3, [r0, #72]
 4312 0014 002B     		cmp	r3, #0
 4313 0016 01D1     		bne	.L341
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4314              		.loc 1 4050 4 discriminator 1 view .LVU1182
 4315              		.syntax divided
 4316              	@ 4050 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4317 0018 72B6     		 cpsid i 
 4318              	@ 0 "" 2
 4319              		.thumb
 4320              		.syntax unified
 4321              	.L342:
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4322              		.loc 1 4050 4 discriminator 2 view .LVU1183
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4323              		.loc 1 4050 4 discriminator 2 view .LVU1184
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4324              		.loc 1 4050 4 discriminator 2 view .LVU1185
 4325 001a FEE7     		b	.L342
 4326              	.L341:
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4327              		.loc 1 4050 40 discriminator 2 view .LVU1186
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4328              		.loc 1 4051 4 discriminator 2 view .LVU1187
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4329              		.loc 1 4051 28 is_stmt 0 discriminator 2 view .LVU1188
 4330 001c 013B     		subs	r3, r3, #1
 4331 001e 8364     		str	r3, [r0, #72]
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4332              		.loc 1 4055 4 is_stmt 1 discriminator 2 view .LVU1189
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4333              		.loc 1 4055 6 is_stmt 0 discriminator 2 view .LVU1190
 4334 0020 C26A     		ldr	r2, [r0, #44]
 4335 0022 416C     		ldr	r1, [r0, #68]
 4336 0024 8A42     		cmp	r2, r1
 4337 0026 1ED0     		beq	.L345
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4338              		.loc 1 4058 5 is_stmt 1 view .LVU1191
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccPYbq7S.s 			page 187


 4339              		.loc 1 4058 7 is_stmt 0 view .LVU1192
 4340 0028 002B     		cmp	r3, #0
 4341 002a 01D0     		beq	.L347
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4342              		.loc 1 4041 13 view .LVU1193
 4343 002c 0020     		movs	r0, #0
 4344              	.LVL338:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4345              		.loc 1 4107 28 is_stmt 1 view .LVU1194
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4346              		.loc 1 4110 3 view .LVU1195
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4347              		.loc 1 4110 10 is_stmt 0 view .LVU1196
 4348 002e 19E0     		b	.L337
 4349              	.LVL339:
 4350              	.L347:
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4351              		.loc 1 4065 6 is_stmt 1 view .LVU1197
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4352              		.loc 1 4065 10 is_stmt 0 view .LVU1198
 4353 0030 051D     		adds	r5, r0, #4
 4354 0032 2800     		movs	r0, r5
 4355              	.LVL340:
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4356              		.loc 1 4065 10 view .LVU1199
 4357 0034 FFF7FEFF 		bl	uxListRemove
 4358              	.LVL341:
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4359              		.loc 1 4071 31 is_stmt 1 view .LVU1200
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4360              		.loc 1 4076 67 view .LVU1201
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4361              		.loc 1 4077 6 view .LVU1202
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4362              		.loc 1 4077 31 is_stmt 0 view .LVU1203
 4363 0038 636C     		ldr	r3, [r4, #68]
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4364              		.loc 1 4077 24 view .LVU1204
 4365 003a E362     		str	r3, [r4, #44]
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4366              		.loc 1 4082 6 is_stmt 1 view .LVU1205
 4367 003c 0722     		movs	r2, #7
 4368 003e D21A     		subs	r2, r2, r3
 4369 0040 A261     		str	r2, [r4, #24]
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4370              		.loc 1 4083 6 view .LVU1206
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4371              		.loc 1 4083 6 view .LVU1207
 4372 0042 0B4A     		ldr	r2, .L348+4
 4373 0044 1268     		ldr	r2, [r2]
 4374 0046 9342     		cmp	r3, r2
 4375 0048 01D9     		bls	.L343
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4376              		.loc 1 4083 6 discriminator 1 view .LVU1208
 4377 004a 094A     		ldr	r2, .L348+4
 4378 004c 1360     		str	r3, [r2]
 4379              	.L343:
ARM GAS  /tmp/ccPYbq7S.s 			page 188


4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4380              		.loc 1 4083 6 discriminator 3 view .LVU1209
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4381              		.loc 1 4083 6 discriminator 3 view .LVU1210
 4382 004e 9800     		lsls	r0, r3, #2
 4383 0050 C018     		adds	r0, r0, r3
 4384 0052 8000     		lsls	r0, r0, #2
 4385 0054 074B     		ldr	r3, .L348+8
 4386 0056 C018     		adds	r0, r0, r3
 4387 0058 2900     		movs	r1, r5
 4388 005a FFF7FEFF 		bl	vListInsertEnd
 4389              	.LVL342:
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4390              		.loc 1 4083 36 discriminator 3 view .LVU1211
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4391              		.loc 1 4093 6 discriminator 3 view .LVU1212
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4392              		.loc 1 4093 14 is_stmt 0 discriminator 3 view .LVU1213
 4393 005e 0120     		movs	r0, #1
 4394 0060 00E0     		b	.L337
 4395              	.LVL343:
 4396              	.L344:
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4397              		.loc 1 4041 13 view .LVU1214
 4398 0062 0020     		movs	r0, #0
 4399              	.LVL344:
 4400              	.L337:
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4401              		.loc 1 4111 2 view .LVU1215
 4402              		@ sp needed
 4403              	.LVL345:
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4404              		.loc 1 4111 2 view .LVU1216
 4405 0064 70BD     		pop	{r4, r5, r6, pc}
 4406              	.LVL346:
 4407              	.L345:
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4408              		.loc 1 4041 13 view .LVU1217
 4409 0066 0020     		movs	r0, #0
 4410              	.LVL347:
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4411              		.loc 1 4041 13 view .LVU1218
 4412 0068 FCE7     		b	.L337
 4413              	.L349:
 4414 006a C046     		.align	2
 4415              	.L348:
 4416 006c 00000000 		.word	.LANCHOR9
 4417 0070 00000000 		.word	.LANCHOR12
 4418 0074 00000000 		.word	pxReadyTasksLists
 4419              		.cfi_endproc
 4420              	.LFE39:
 4422              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4423              		.align	1
 4424              		.global	vTaskPriorityDisinheritAfterTimeout
 4425              		.syntax unified
 4426              		.code	16
 4427              		.thumb_func
ARM GAS  /tmp/ccPYbq7S.s 			page 189


 4429              	vTaskPriorityDisinheritAfterTimeout:
 4430              	.LVL348:
 4431              	.LFB40:
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4432              		.loc 1 4119 2 is_stmt 1 view -0
 4433              		.cfi_startproc
 4434              		@ args = 0, pretend = 0, frame = 0
 4435              		@ frame_needed = 0, uses_anonymous_args = 0
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4436              		.loc 1 4119 2 is_stmt 0 view .LVU1220
 4437 0000 70B5     		push	{r4, r5, r6, lr}
 4438              	.LCFI34:
 4439              		.cfi_def_cfa_offset 16
 4440              		.cfi_offset 4, -16
 4441              		.cfi_offset 5, -12
 4442              		.cfi_offset 6, -8
 4443              		.cfi_offset 14, -4
 4444 0002 041E     		subs	r4, r0, #0
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4445              		.loc 1 4120 2 is_stmt 1 view .LVU1221
 4446              	.LVL349:
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4447              		.loc 1 4121 2 view .LVU1222
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4448              		.loc 1 4122 2 view .LVU1223
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4449              		.loc 1 4124 3 view .LVU1224
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4450              		.loc 1 4124 5 is_stmt 0 view .LVU1225
 4451 0004 0DD0     		beq	.L350
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4452              		.loc 1 4128 4 is_stmt 1 view .LVU1226
 4453 0006 836C     		ldr	r3, [r0, #72]
 4454 0008 002B     		cmp	r3, #0
 4455 000a 01D1     		bne	.L352
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4456              		.loc 1 4128 4 discriminator 1 view .LVU1227
 4457              		.syntax divided
 4458              	@ 4128 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4459 000c 72B6     		 cpsid i 
 4460              	@ 0 "" 2
 4461              		.thumb
 4462              		.syntax unified
 4463              	.L353:
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4464              		.loc 1 4128 4 discriminator 1 view .LVU1228
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4465              		.loc 1 4128 4 discriminator 1 view .LVU1229
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4466              		.loc 1 4128 4 discriminator 1 view .LVU1230
 4467 000e FEE7     		b	.L353
 4468              	.L352:
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4469              		.loc 1 4128 40 discriminator 2 view .LVU1231
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4470              		.loc 1 4134 4 discriminator 2 view .LVU1232
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccPYbq7S.s 			page 190


 4471              		.loc 1 4134 13 is_stmt 0 discriminator 2 view .LVU1233
 4472 0010 426C     		ldr	r2, [r0, #68]
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4473              		.loc 1 4134 6 discriminator 2 view .LVU1234
 4474 0012 8A42     		cmp	r2, r1
 4475 0014 00D2     		bcs	.L354
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4476              		.loc 1 4136 21 view .LVU1235
 4477 0016 0A00     		movs	r2, r1
 4478              	.L354:
 4479              	.LVL350:
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4480              		.loc 1 4144 4 is_stmt 1 view .LVU1236
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4481              		.loc 1 4144 13 is_stmt 0 view .LVU1237
 4482 0018 E16A     		ldr	r1, [r4, #44]
 4483              	.LVL351:
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4484              		.loc 1 4144 6 view .LVU1238
 4485 001a 9142     		cmp	r1, r2
 4486 001c 01D0     		beq	.L350
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4487              		.loc 1 4150 5 is_stmt 1 view .LVU1239
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4488              		.loc 1 4150 7 is_stmt 0 view .LVU1240
 4489 001e 012B     		cmp	r3, #1
 4490 0020 00D0     		beq	.L359
 4491              	.LVL352:
 4492              	.L350:
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4493              		.loc 1 4213 2 view .LVU1241
 4494              		@ sp needed
 4495              	.LVL353:
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4496              		.loc 1 4213 2 view .LVU1242
 4497 0022 70BD     		pop	{r4, r5, r6, pc}
 4498              	.LVL354:
 4499              	.L359:
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4500              		.loc 1 4155 6 is_stmt 1 view .LVU1243
 4501 0024 144B     		ldr	r3, .L361
 4502 0026 1B68     		ldr	r3, [r3]
 4503 0028 A342     		cmp	r3, r4
 4504 002a 22D0     		beq	.L360
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4505              		.loc 1 4155 43 discriminator 2 view .LVU1244
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4506              		.loc 1 4160 67 discriminator 2 view .LVU1245
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4507              		.loc 1 4161 6 discriminator 2 view .LVU1246
 4508              	.LVL355:
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4509              		.loc 1 4162 6 discriminator 2 view .LVU1247
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4510              		.loc 1 4162 24 is_stmt 0 discriminator 2 view .LVU1248
 4511 002c E262     		str	r2, [r4, #44]
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/ccPYbq7S.s 			page 191


 4512              		.loc 1 4166 6 is_stmt 1 discriminator 2 view .LVU1249
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4513              		.loc 1 4166 8 is_stmt 0 discriminator 2 view .LVU1250
 4514 002e A369     		ldr	r3, [r4, #24]
 4515 0030 002B     		cmp	r3, #0
 4516 0032 02DB     		blt	.L357
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4517              		.loc 1 4168 7 is_stmt 1 view .LVU1251
 4518 0034 0723     		movs	r3, #7
 4519 0036 9A1A     		subs	r2, r3, r2
 4520              	.LVL356:
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4521              		.loc 1 4168 7 is_stmt 0 view .LVU1252
 4522 0038 A261     		str	r2, [r4, #24]
 4523              	.L357:
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4524              		.loc 1 4172 31 is_stmt 1 view .LVU1253
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4525              		.loc 1 4181 6 view .LVU1254
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4526              		.loc 1 4181 10 is_stmt 0 view .LVU1255
 4527 003a 8B00     		lsls	r3, r1, #2
 4528 003c 5B18     		adds	r3, r3, r1
 4529 003e 9B00     		lsls	r3, r3, #2
 4530 0040 0E4A     		ldr	r2, .L361+4
 4531 0042 9B18     		adds	r3, r3, r2
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4532              		.loc 1 4181 8 view .LVU1256
 4533 0044 6269     		ldr	r2, [r4, #20]
 4534 0046 9A42     		cmp	r2, r3
 4535 0048 EBD1     		bne	.L350
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4536              		.loc 1 4183 7 is_stmt 1 view .LVU1257
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4537              		.loc 1 4183 11 is_stmt 0 view .LVU1258
 4538 004a 251D     		adds	r5, r4, #4
 4539 004c 2800     		movs	r0, r5
 4540              	.LVL357:
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4541              		.loc 1 4183 11 view .LVU1259
 4542 004e FFF7FEFF 		bl	uxListRemove
 4543              	.LVL358:
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4544              		.loc 1 4189 32 is_stmt 1 view .LVU1260
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4545              		.loc 1 4192 7 view .LVU1261
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4546              		.loc 1 4192 7 view .LVU1262
 4547 0052 E36A     		ldr	r3, [r4, #44]
 4548 0054 0A4A     		ldr	r2, .L361+8
 4549 0056 1268     		ldr	r2, [r2]
 4550 0058 9342     		cmp	r3, r2
 4551 005a 01D9     		bls	.L358
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4552              		.loc 1 4192 7 discriminator 1 view .LVU1263
 4553 005c 084A     		ldr	r2, .L361+8
 4554 005e 1360     		str	r3, [r2]
ARM GAS  /tmp/ccPYbq7S.s 			page 192


 4555              	.L358:
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4556              		.loc 1 4192 7 discriminator 3 view .LVU1264
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4557              		.loc 1 4192 7 discriminator 3 view .LVU1265
 4558 0060 9800     		lsls	r0, r3, #2
 4559 0062 C018     		adds	r0, r0, r3
 4560 0064 8000     		lsls	r0, r0, #2
 4561 0066 054B     		ldr	r3, .L361+4
 4562 0068 C018     		adds	r0, r0, r3
 4563 006a 2900     		movs	r1, r5
 4564 006c FFF7FEFF 		bl	vListInsertEnd
 4565              	.LVL359:
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4566              		.loc 1 4192 37 discriminator 3 view .LVU1266
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4567              		.loc 1 4211 28 discriminator 3 view .LVU1267
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4568              		.loc 1 4213 2 is_stmt 0 discriminator 3 view .LVU1268
 4569 0070 D7E7     		b	.L350
 4570              	.LVL360:
 4571              	.L360:
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4572              		.loc 1 4155 6 is_stmt 1 discriminator 1 view .LVU1269
 4573              		.syntax divided
 4574              	@ 4155 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4575 0072 72B6     		 cpsid i 
 4576              	@ 0 "" 2
 4577              		.thumb
 4578              		.syntax unified
 4579              	.L356:
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4580              		.loc 1 4155 6 discriminator 2 view .LVU1270
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4581              		.loc 1 4155 6 discriminator 2 view .LVU1271
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4582              		.loc 1 4155 6 discriminator 2 view .LVU1272
 4583 0074 FEE7     		b	.L356
 4584              	.L362:
 4585 0076 C046     		.align	2
 4586              	.L361:
 4587 0078 00000000 		.word	.LANCHOR9
 4588 007c 00000000 		.word	pxReadyTasksLists
 4589 0080 00000000 		.word	.LANCHOR12
 4590              		.cfi_endproc
 4591              	.LFE40:
 4593              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4594              		.align	1
 4595              		.global	uxTaskResetEventItemValue
 4596              		.syntax unified
 4597              		.code	16
 4598              		.thumb_func
 4600              	uxTaskResetEventItemValue:
 4601              	.LFB41:
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 4602              		.loc 1 4534 1 view -0
 4603              		.cfi_startproc
ARM GAS  /tmp/ccPYbq7S.s 			page 193


 4604              		@ args = 0, pretend = 0, frame = 0
 4605              		@ frame_needed = 0, uses_anonymous_args = 0
 4606              		@ link register save eliminated.
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4607              		.loc 1 4535 1 view .LVU1274
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4608              		.loc 1 4537 2 view .LVU1275
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4609              		.loc 1 4537 13 is_stmt 0 view .LVU1276
 4610 0000 044A     		ldr	r2, .L364
 4611 0002 1368     		ldr	r3, [r2]
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4612              		.loc 1 4537 11 view .LVU1277
 4613 0004 9869     		ldr	r0, [r3, #24]
 4614              	.LVL361:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4615              		.loc 1 4541 2 is_stmt 1 view .LVU1278
 4616 0006 1368     		ldr	r3, [r2]
 4617 0008 D96A     		ldr	r1, [r3, #44]
 4618 000a 1268     		ldr	r2, [r2]
 4619 000c 0723     		movs	r3, #7
 4620 000e 5B1A     		subs	r3, r3, r1
 4621 0010 9361     		str	r3, [r2, #24]
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4622              		.loc 1 4543 2 view .LVU1279
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4623              		.loc 1 4544 1 is_stmt 0 view .LVU1280
 4624              		@ sp needed
 4625 0012 7047     		bx	lr
 4626              	.L365:
 4627              		.align	2
 4628              	.L364:
 4629 0014 00000000 		.word	.LANCHOR9
 4630              		.cfi_endproc
 4631              	.LFE41:
 4633              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4634              		.align	1
 4635              		.global	pvTaskIncrementMutexHeldCount
 4636              		.syntax unified
 4637              		.code	16
 4638              		.thumb_func
 4640              	pvTaskIncrementMutexHeldCount:
 4641              	.LFB42:
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4642              		.loc 1 4550 2 is_stmt 1 view -0
 4643              		.cfi_startproc
 4644              		@ args = 0, pretend = 0, frame = 0
 4645              		@ frame_needed = 0, uses_anonymous_args = 0
 4646              		@ link register save eliminated.
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4647              		.loc 1 4553 3 view .LVU1282
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4648              		.loc 1 4553 20 is_stmt 0 view .LVU1283
 4649 0000 054B     		ldr	r3, .L368
 4650 0002 1B68     		ldr	r3, [r3]
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4651              		.loc 1 4553 5 view .LVU1284
ARM GAS  /tmp/ccPYbq7S.s 			page 194


 4652 0004 002B     		cmp	r3, #0
 4653 0006 04D0     		beq	.L367
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4654              		.loc 1 4555 4 is_stmt 1 view .LVU1285
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4655              		.loc 1 4555 18 is_stmt 0 view .LVU1286
 4656 0008 034B     		ldr	r3, .L368
 4657 000a 1A68     		ldr	r2, [r3]
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4658              		.loc 1 4555 35 view .LVU1287
 4659 000c 936C     		ldr	r3, [r2, #72]
 4660 000e 0133     		adds	r3, r3, #1
 4661 0010 9364     		str	r3, [r2, #72]
 4662              	.L367:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4663              		.loc 1 4558 3 is_stmt 1 view .LVU1288
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4664              		.loc 1 4558 10 is_stmt 0 view .LVU1289
 4665 0012 014B     		ldr	r3, .L368
 4666 0014 1868     		ldr	r0, [r3]
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4667              		.loc 1 4559 2 view .LVU1290
 4668              		@ sp needed
 4669 0016 7047     		bx	lr
 4670              	.L369:
 4671              		.align	2
 4672              	.L368:
 4673 0018 00000000 		.word	.LANCHOR9
 4674              		.cfi_endproc
 4675              	.LFE42:
 4677              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4678              		.align	1
 4679              		.global	ulTaskNotifyTake
 4680              		.syntax unified
 4681              		.code	16
 4682              		.thumb_func
 4684              	ulTaskNotifyTake:
 4685              	.LVL362:
 4686              	.LFB43:
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4687              		.loc 1 4567 2 is_stmt 1 view -0
 4688              		.cfi_startproc
 4689              		@ args = 0, pretend = 0, frame = 0
 4690              		@ frame_needed = 0, uses_anonymous_args = 0
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4691              		.loc 1 4567 2 is_stmt 0 view .LVU1292
 4692 0000 70B5     		push	{r4, r5, r6, lr}
 4693              	.LCFI35:
 4694              		.cfi_def_cfa_offset 16
 4695              		.cfi_offset 4, -16
 4696              		.cfi_offset 5, -12
 4697              		.cfi_offset 6, -8
 4698              		.cfi_offset 14, -4
 4699 0002 0500     		movs	r5, r0
 4700 0004 0C00     		movs	r4, r1
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4701              		.loc 1 4568 2 is_stmt 1 view .LVU1293
ARM GAS  /tmp/ccPYbq7S.s 			page 195


4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4702              		.loc 1 4570 3 view .LVU1294
 4703 0006 FFF7FEFF 		bl	vPortEnterCritical
 4704              	.LVL363:
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4705              		.loc 1 4573 4 view .LVU1295
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4706              		.loc 1 4573 20 is_stmt 0 view .LVU1296
 4707 000a 174B     		ldr	r3, .L375
 4708 000c 1B68     		ldr	r3, [r3]
 4709 000e DB6C     		ldr	r3, [r3, #76]
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4710              		.loc 1 4573 6 view .LVU1297
 4711 0010 002B     		cmp	r3, #0
 4712 0012 06D1     		bne	.L371
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4713              		.loc 1 4576 5 is_stmt 1 view .LVU1298
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4714              		.loc 1 4576 17 is_stmt 0 view .LVU1299
 4715 0014 144B     		ldr	r3, .L375
 4716 0016 1A68     		ldr	r2, [r3]
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4717              		.loc 1 4576 33 view .LVU1300
 4718 0018 5023     		movs	r3, #80
 4719 001a 0121     		movs	r1, #1
 4720 001c D154     		strb	r1, [r2, r3]
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4721              		.loc 1 4578 5 is_stmt 1 view .LVU1301
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4722              		.loc 1 4578 7 is_stmt 0 view .LVU1302
 4723 001e 002C     		cmp	r4, #0
 4724 0020 17D1     		bne	.L374
 4725              	.L371:
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4726              		.loc 1 4596 29 is_stmt 1 view .LVU1303
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4727              		.loc 1 4599 3 view .LVU1304
 4728 0022 FFF7FEFF 		bl	vPortExitCritical
 4729              	.LVL364:
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4730              		.loc 1 4601 3 view .LVU1305
 4731 0026 FFF7FEFF 		bl	vPortEnterCritical
 4732              	.LVL365:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4733              		.loc 1 4603 27 view .LVU1306
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4734              		.loc 1 4604 4 view .LVU1307
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4735              		.loc 1 4604 27 is_stmt 0 view .LVU1308
 4736 002a 0F4B     		ldr	r3, .L375
 4737 002c 1B68     		ldr	r3, [r3]
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4738              		.loc 1 4604 13 view .LVU1309
 4739 002e DC6C     		ldr	r4, [r3, #76]
 4740              	.LVL366:
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4741              		.loc 1 4606 4 is_stmt 1 view .LVU1310
ARM GAS  /tmp/ccPYbq7S.s 			page 196


4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4742              		.loc 1 4606 6 is_stmt 0 view .LVU1311
 4743 0030 002C     		cmp	r4, #0
 4744 0032 05D0     		beq	.L372
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4745              		.loc 1 4608 5 is_stmt 1 view .LVU1312
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4746              		.loc 1 4608 7 is_stmt 0 view .LVU1313
 4747 0034 002D     		cmp	r5, #0
 4748 0036 12D0     		beq	.L373
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4749              		.loc 1 4610 6 is_stmt 1 view .LVU1314
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4750              		.loc 1 4610 18 is_stmt 0 view .LVU1315
 4751 0038 0B4B     		ldr	r3, .L375
 4752 003a 1B68     		ldr	r3, [r3]
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4753              		.loc 1 4610 36 view .LVU1316
 4754 003c 0022     		movs	r2, #0
 4755 003e DA64     		str	r2, [r3, #76]
 4756              	.L372:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4757              		.loc 1 4619 29 is_stmt 1 view .LVU1317
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4758              		.loc 1 4622 4 view .LVU1318
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4759              		.loc 1 4622 16 is_stmt 0 view .LVU1319
 4760 0040 094B     		ldr	r3, .L375
 4761 0042 1A68     		ldr	r2, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4762              		.loc 1 4622 32 view .LVU1320
 4763 0044 5023     		movs	r3, #80
 4764 0046 0021     		movs	r1, #0
 4765 0048 D154     		strb	r1, [r2, r3]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4766              		.loc 1 4624 3 is_stmt 1 view .LVU1321
 4767 004a FFF7FEFF 		bl	vPortExitCritical
 4768              	.LVL367:
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4769              		.loc 1 4626 3 view .LVU1322
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4770              		.loc 1 4627 2 is_stmt 0 view .LVU1323
 4771 004e 2000     		movs	r0, r4
 4772              		@ sp needed
 4773              	.LVL368:
 4774              	.LVL369:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4775              		.loc 1 4627 2 view .LVU1324
 4776 0050 70BD     		pop	{r4, r5, r6, pc}
 4777              	.LVL370:
 4778              	.L374:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4779              		.loc 1 4580 6 is_stmt 1 view .LVU1325
 4780 0052 2000     		movs	r0, r4
 4781 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4782              	.LVL371:
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 197


 4783              		.loc 1 4581 35 view .LVU1326
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4784              		.loc 1 4587 6 view .LVU1327
 4785 0058 FFF7FEFF 		bl	vPortYield
 4786              	.LVL372:
 4787 005c E1E7     		b	.L371
 4788              	.LVL373:
 4789              	.L373:
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4790              		.loc 1 4614 6 view .LVU1328
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4791              		.loc 1 4614 18 is_stmt 0 view .LVU1329
 4792 005e 024B     		ldr	r3, .L375
 4793 0060 1B68     		ldr	r3, [r3]
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4794              		.loc 1 4614 47 view .LVU1330
 4795 0062 621E     		subs	r2, r4, #1
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4796              		.loc 1 4614 36 view .LVU1331
 4797 0064 DA64     		str	r2, [r3, #76]
 4798 0066 EBE7     		b	.L372
 4799              	.L376:
 4800              		.align	2
 4801              	.L375:
 4802 0068 00000000 		.word	.LANCHOR9
 4803              		.cfi_endproc
 4804              	.LFE43:
 4806              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4807              		.align	1
 4808              		.global	xTaskNotifyWait
 4809              		.syntax unified
 4810              		.code	16
 4811              		.thumb_func
 4813              	xTaskNotifyWait:
 4814              	.LVL374:
 4815              	.LFB44:
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4816              		.loc 1 4635 2 is_stmt 1 view -0
 4817              		.cfi_startproc
 4818              		@ args = 0, pretend = 0, frame = 0
 4819              		@ frame_needed = 0, uses_anonymous_args = 0
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4820              		.loc 1 4635 2 is_stmt 0 view .LVU1333
 4821 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4822              	.LCFI36:
 4823              		.cfi_def_cfa_offset 24
 4824              		.cfi_offset 3, -24
 4825              		.cfi_offset 4, -20
 4826              		.cfi_offset 5, -16
 4827              		.cfi_offset 6, -12
 4828              		.cfi_offset 7, -8
 4829              		.cfi_offset 14, -4
 4830 0002 0600     		movs	r6, r0
 4831 0004 0F00     		movs	r7, r1
 4832 0006 1400     		movs	r4, r2
 4833 0008 1D00     		movs	r5, r3
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 198


 4834              		.loc 1 4636 2 is_stmt 1 view .LVU1334
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4835              		.loc 1 4638 3 view .LVU1335
 4836 000a FFF7FEFF 		bl	vPortEnterCritical
 4837              	.LVL375:
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4838              		.loc 1 4641 4 view .LVU1336
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4839              		.loc 1 4641 20 is_stmt 0 view .LVU1337
 4840 000e 1C4B     		ldr	r3, .L384
 4841 0010 1A68     		ldr	r2, [r3]
 4842 0012 5023     		movs	r3, #80
 4843 0014 D35C     		ldrb	r3, [r2, r3]
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4844              		.loc 1 4641 6 view .LVU1338
 4845 0016 022B     		cmp	r3, #2
 4846 0018 0AD0     		beq	.L378
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4847              		.loc 1 4646 5 is_stmt 1 view .LVU1339
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4848              		.loc 1 4646 35 is_stmt 0 view .LVU1340
 4849 001a 194A     		ldr	r2, .L384
 4850 001c 1168     		ldr	r1, [r2]
 4851 001e CB6C     		ldr	r3, [r1, #76]
 4852 0020 B343     		bics	r3, r6
 4853 0022 CB64     		str	r3, [r1, #76]
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4854              		.loc 1 4649 5 is_stmt 1 view .LVU1341
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4855              		.loc 1 4649 17 is_stmt 0 view .LVU1342
 4856 0024 1268     		ldr	r2, [r2]
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4857              		.loc 1 4649 33 view .LVU1343
 4858 0026 5023     		movs	r3, #80
 4859 0028 0121     		movs	r1, #1
 4860 002a D154     		strb	r1, [r2, r3]
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4861              		.loc 1 4651 5 is_stmt 1 view .LVU1344
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4862              		.loc 1 4651 7 is_stmt 0 view .LVU1345
 4863 002c 002D     		cmp	r5, #0
 4864 002e 19D1     		bne	.L382
 4865              	.L378:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4866              		.loc 1 4669 29 is_stmt 1 view .LVU1346
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4867              		.loc 1 4672 3 view .LVU1347
 4868 0030 FFF7FEFF 		bl	vPortExitCritical
 4869              	.LVL376:
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4870              		.loc 1 4674 3 view .LVU1348
 4871 0034 FFF7FEFF 		bl	vPortEnterCritical
 4872              	.LVL377:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4873              		.loc 1 4676 27 view .LVU1349
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4874              		.loc 1 4678 4 view .LVU1350
ARM GAS  /tmp/ccPYbq7S.s 			page 199


4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4875              		.loc 1 4678 6 is_stmt 0 view .LVU1351
 4876 0038 002C     		cmp	r4, #0
 4877 003a 03D0     		beq	.L379
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4878              		.loc 1 4682 5 is_stmt 1 view .LVU1352
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4879              		.loc 1 4682 41 is_stmt 0 view .LVU1353
 4880 003c 104B     		ldr	r3, .L384
 4881 003e 1B68     		ldr	r3, [r3]
 4882 0040 DB6C     		ldr	r3, [r3, #76]
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4883              		.loc 1 4682 27 view .LVU1354
 4884 0042 2360     		str	r3, [r4]
 4885              	.L379:
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4886              		.loc 1 4689 4 is_stmt 1 view .LVU1355
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4887              		.loc 1 4689 20 is_stmt 0 view .LVU1356
 4888 0044 0E4B     		ldr	r3, .L384
 4889 0046 1A68     		ldr	r2, [r3]
 4890 0048 5023     		movs	r3, #80
 4891 004a D35C     		ldrb	r3, [r2, r3]
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4892              		.loc 1 4689 6 view .LVU1357
 4893 004c 022B     		cmp	r3, #2
 4894 004e 0FD0     		beq	.L383
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4895              		.loc 1 4692 13 view .LVU1358
 4896 0050 0024     		movs	r4, #0
 4897              	.LVL378:
 4898              	.L380:
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4899              		.loc 1 4702 4 is_stmt 1 view .LVU1359
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4900              		.loc 1 4702 16 is_stmt 0 view .LVU1360
 4901 0052 0B4B     		ldr	r3, .L384
 4902 0054 1A68     		ldr	r2, [r3]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4903              		.loc 1 4702 32 view .LVU1361
 4904 0056 5023     		movs	r3, #80
 4905 0058 0021     		movs	r1, #0
 4906 005a D154     		strb	r1, [r2, r3]
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4907              		.loc 1 4704 3 is_stmt 1 view .LVU1362
 4908 005c FFF7FEFF 		bl	vPortExitCritical
 4909              	.LVL379:
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4910              		.loc 1 4706 3 view .LVU1363
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4911              		.loc 1 4707 2 is_stmt 0 view .LVU1364
 4912 0060 2000     		movs	r0, r4
 4913              		@ sp needed
 4914              	.LVL380:
 4915              	.LVL381:
 4916              	.LVL382:
 4917              	.LVL383:
ARM GAS  /tmp/ccPYbq7S.s 			page 200


4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4918              		.loc 1 4707 2 view .LVU1365
 4919 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4920              	.LVL384:
 4921              	.L382:
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4922              		.loc 1 4653 6 is_stmt 1 view .LVU1366
 4923 0064 2800     		movs	r0, r5
 4924 0066 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4925              	.LVL385:
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4926              		.loc 1 4654 35 view .LVU1367
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4927              		.loc 1 4660 6 view .LVU1368
 4928 006a FFF7FEFF 		bl	vPortYield
 4929              	.LVL386:
 4930 006e DFE7     		b	.L378
 4931              	.L383:
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4932              		.loc 1 4698 5 view .LVU1369
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4933              		.loc 1 4698 35 is_stmt 0 view .LVU1370
 4934 0070 034B     		ldr	r3, .L384
 4935 0072 1A68     		ldr	r2, [r3]
 4936 0074 D36C     		ldr	r3, [r2, #76]
 4937 0076 BB43     		bics	r3, r7
 4938 0078 D364     		str	r3, [r2, #76]
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4939              		.loc 1 4699 5 is_stmt 1 view .LVU1371
 4940              	.LVL387:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4941              		.loc 1 4699 13 is_stmt 0 view .LVU1372
 4942 007a 0124     		movs	r4, #1
 4943              	.LVL388:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4944              		.loc 1 4699 13 view .LVU1373
 4945 007c E9E7     		b	.L380
 4946              	.L385:
 4947 007e C046     		.align	2
 4948              	.L384:
 4949 0080 00000000 		.word	.LANCHOR9
 4950              		.cfi_endproc
 4951              	.LFE44:
 4953              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4954              		.align	1
 4955              		.global	xTaskGenericNotify
 4956              		.syntax unified
 4957              		.code	16
 4958              		.thumb_func
 4960              	xTaskGenericNotify:
 4961              	.LVL389:
 4962              	.LFB45:
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4963              		.loc 1 4715 2 is_stmt 1 view -0
 4964              		.cfi_startproc
 4965              		@ args = 0, pretend = 0, frame = 0
 4966              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPYbq7S.s 			page 201


4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4967              		.loc 1 4715 2 is_stmt 0 view .LVU1375
 4968 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4969              	.LCFI37:
 4970              		.cfi_def_cfa_offset 24
 4971              		.cfi_offset 3, -24
 4972              		.cfi_offset 4, -20
 4973              		.cfi_offset 5, -16
 4974              		.cfi_offset 6, -12
 4975              		.cfi_offset 7, -8
 4976              		.cfi_offset 14, -4
 4977 0002 0400     		movs	r4, r0
 4978 0004 0E00     		movs	r6, r1
 4979 0006 1500     		movs	r5, r2
 4980 0008 1F00     		movs	r7, r3
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4981              		.loc 1 4716 2 is_stmt 1 view .LVU1376
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4982              		.loc 1 4717 2 view .LVU1377
 4983              	.LVL390:
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4984              		.loc 1 4718 2 view .LVU1378
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4985              		.loc 1 4720 3 view .LVU1379
 4986 000a 0028     		cmp	r0, #0
 4987 000c 10D0     		beq	.L405
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 4988              		.loc 1 4720 32 discriminator 2 view .LVU1380
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4989              		.loc 1 4721 3 discriminator 2 view .LVU1381
 4990              	.LVL391:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4991              		.loc 1 4723 3 discriminator 2 view .LVU1382
 4992 000e FFF7FEFF 		bl	vPortEnterCritical
 4993              	.LVL392:
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4994              		.loc 1 4725 4 discriminator 2 view .LVU1383
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4995              		.loc 1 4725 6 is_stmt 0 discriminator 2 view .LVU1384
 4996 0012 002F     		cmp	r7, #0
 4997 0014 01D0     		beq	.L389
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4998              		.loc 1 4727 5 is_stmt 1 view .LVU1385
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4999              		.loc 1 4727 42 is_stmt 0 view .LVU1386
 5000 0016 E36C     		ldr	r3, [r4, #76]
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5001              		.loc 1 4727 35 view .LVU1387
 5002 0018 3B60     		str	r3, [r7]
 5003              	.L389:
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5004              		.loc 1 4730 4 is_stmt 1 view .LVU1388
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5005              		.loc 1 4730 26 is_stmt 0 view .LVU1389
 5006 001a 5022     		movs	r2, #80
 5007 001c A35C     		ldrb	r3, [r4, r2]
 5008 001e DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccPYbq7S.s 			page 202


 5009              	.LVL393:
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5010              		.loc 1 4732 4 is_stmt 1 view .LVU1390
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5011              		.loc 1 4732 25 is_stmt 0 view .LVU1391
 5012 0020 0221     		movs	r1, #2
 5013 0022 A154     		strb	r1, [r4, r2]
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5014              		.loc 1 4734 4 is_stmt 1 view .LVU1392
 5015 0024 042D     		cmp	r5, #4
 5016 0026 17D8     		bhi	.L390
 5017 0028 AD00     		lsls	r5, r5, #2
 5018 002a 244A     		ldr	r2, .L407
 5019 002c 5259     		ldr	r2, [r2, r5]
 5020 002e 9746     		mov	pc, r2
 5021              		.section	.rodata.xTaskGenericNotify,"a",%progbits
 5022              		.align	2
 5023              	.L392:
 5024 0000 62000000 		.word	.L402
 5025 0004 34000000 		.word	.L395
 5026 0008 3E000000 		.word	.L394
 5027 000c 48000000 		.word	.L393
 5028 0010 4E000000 		.word	.L391
 5029              		.section	.text.xTaskGenericNotify
 5030              	.LVL394:
 5031              	.L405:
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5032              		.loc 1 4720 3 discriminator 1 view .LVU1393
 5033              		.syntax divided
 5034              	@ 4720 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5035 0030 72B6     		 cpsid i 
 5036              	@ 0 "" 2
 5037              		.thumb
 5038              		.syntax unified
 5039              	.L388:
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5040              		.loc 1 4720 3 discriminator 1 view .LVU1394
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5041              		.loc 1 4720 3 discriminator 1 view .LVU1395
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5042              		.loc 1 4720 3 discriminator 1 view .LVU1396
 5043 0032 FEE7     		b	.L388
 5044              	.LVL395:
 5045              	.L395:
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5046              		.loc 1 4737 6 view .LVU1397
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5047              		.loc 1 4737 29 is_stmt 0 view .LVU1398
 5048 0034 E26C     		ldr	r2, [r4, #76]
 5049 0036 1643     		orrs	r6, r2
 5050              	.LVL396:
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5051              		.loc 1 4737 29 view .LVU1399
 5052 0038 E664     		str	r6, [r4, #76]
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5053              		.loc 1 4738 6 is_stmt 1 view .LVU1400
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
ARM GAS  /tmp/ccPYbq7S.s 			page 203


 5054              		.loc 1 4717 13 is_stmt 0 view .LVU1401
 5055 003a 0125     		movs	r5, #1
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5056              		.loc 1 4738 6 view .LVU1402
 5057 003c 12E0     		b	.L396
 5058              	.LVL397:
 5059              	.L394:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5060              		.loc 1 4741 6 is_stmt 1 view .LVU1403
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5061              		.loc 1 4741 13 is_stmt 0 view .LVU1404
 5062 003e E26C     		ldr	r2, [r4, #76]
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5063              		.loc 1 4741 32 view .LVU1405
 5064 0040 0132     		adds	r2, r2, #1
 5065 0042 E264     		str	r2, [r4, #76]
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5066              		.loc 1 4742 6 is_stmt 1 view .LVU1406
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5067              		.loc 1 4717 13 is_stmt 0 view .LVU1407
 5068 0044 0125     		movs	r5, #1
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5069              		.loc 1 4742 6 view .LVU1408
 5070 0046 0DE0     		b	.L396
 5071              	.L393:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5072              		.loc 1 4745 6 is_stmt 1 view .LVU1409
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5073              		.loc 1 4745 29 is_stmt 0 view .LVU1410
 5074 0048 E664     		str	r6, [r4, #76]
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5075              		.loc 1 4746 6 is_stmt 1 view .LVU1411
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5076              		.loc 1 4717 13 is_stmt 0 view .LVU1412
 5077 004a 0125     		movs	r5, #1
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4746 6 view .LVU1413
 5079 004c 0AE0     		b	.L396
 5080              	.L391:
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5081              		.loc 1 4749 6 is_stmt 1 view .LVU1414
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5082              		.loc 1 4749 8 is_stmt 0 view .LVU1415
 5083 004e 022B     		cmp	r3, #2
 5084 0050 0ED0     		beq	.L403
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5085              		.loc 1 4751 7 is_stmt 1 view .LVU1416
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5086              		.loc 1 4751 30 is_stmt 0 view .LVU1417
 5087 0052 E664     		str	r6, [r4, #76]
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5088              		.loc 1 4717 13 view .LVU1418
 5089 0054 0125     		movs	r5, #1
 5090 0056 05E0     		b	.L396
 5091              	.L390:
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5092              		.loc 1 4769 6 is_stmt 1 view .LVU1419
ARM GAS  /tmp/ccPYbq7S.s 			page 204


 5093 0058 E26C     		ldr	r2, [r4, #76]
 5094 005a 0132     		adds	r2, r2, #1
 5095 005c 0AD0     		beq	.L404
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5096              		.loc 1 4769 6 discriminator 1 view .LVU1420
 5097              		.syntax divided
 5098              	@ 4769 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5099 005e 72B6     		 cpsid i 
 5100              	@ 0 "" 2
 5101              		.thumb
 5102              		.syntax unified
 5103              	.L397:
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5104              		.loc 1 4769 6 discriminator 2 view .LVU1421
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5105              		.loc 1 4769 6 discriminator 2 view .LVU1422
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5106              		.loc 1 4769 6 discriminator 2 view .LVU1423
 5107 0060 FEE7     		b	.L397
 5108              	.L402:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5109              		.loc 1 4734 4 is_stmt 0 view .LVU1424
 5110 0062 0125     		movs	r5, #1
 5111              	.LVL398:
 5112              	.L396:
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5113              		.loc 1 4774 22 is_stmt 1 view .LVU1425
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5114              		.loc 1 4778 4 view .LVU1426
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5115              		.loc 1 4778 6 is_stmt 0 view .LVU1427
 5116 0064 012B     		cmp	r3, #1
 5117 0066 07D0     		beq	.L406
 5118              	.LVL399:
 5119              	.L398:
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5120              		.loc 1 4815 29 is_stmt 1 view .LVU1428
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5121              		.loc 1 4818 3 view .LVU1429
 5122 0068 FFF7FEFF 		bl	vPortExitCritical
 5123              	.LVL400:
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5124              		.loc 1 4820 3 view .LVU1430
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5125              		.loc 1 4821 2 is_stmt 0 view .LVU1431
 5126 006c 2800     		movs	r0, r5
 5127              		@ sp needed
 5128              	.LVL401:
 5129              	.LVL402:
 5130              	.LVL403:
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5131              		.loc 1 4821 2 view .LVU1432
 5132 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5133              	.LVL404:
 5134              	.L403:
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5135              		.loc 1 4756 15 view .LVU1433
ARM GAS  /tmp/ccPYbq7S.s 			page 205


 5136 0070 0025     		movs	r5, #0
 5137 0072 F7E7     		b	.L396
 5138              	.L404:
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5139              		.loc 1 4717 13 view .LVU1434
 5140 0074 0125     		movs	r5, #1
 5141 0076 F5E7     		b	.L396
 5142              	.LVL405:
 5143              	.L406:
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5144              		.loc 1 4780 5 is_stmt 1 view .LVU1435
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5145              		.loc 1 4780 14 is_stmt 0 view .LVU1436
 5146 0078 261D     		adds	r6, r4, #4
 5147 007a 3000     		movs	r0, r6
 5148 007c FFF7FEFF 		bl	uxListRemove
 5149              	.LVL406:
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5150              		.loc 1 4781 5 is_stmt 1 view .LVU1437
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5151              		.loc 1 4781 5 view .LVU1438
 5152 0080 E36A     		ldr	r3, [r4, #44]
 5153 0082 0F4A     		ldr	r2, .L407+4
 5154 0084 1268     		ldr	r2, [r2]
 5155 0086 9342     		cmp	r3, r2
 5156 0088 01D9     		bls	.L399
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5157              		.loc 1 4781 5 discriminator 1 view .LVU1439
 5158 008a 0D4A     		ldr	r2, .L407+4
 5159 008c 1360     		str	r3, [r2]
 5160              	.L399:
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5161              		.loc 1 4781 5 discriminator 3 view .LVU1440
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5162              		.loc 1 4781 5 discriminator 3 view .LVU1441
 5163 008e 9800     		lsls	r0, r3, #2
 5164 0090 C018     		adds	r0, r0, r3
 5165 0092 8000     		lsls	r0, r0, #2
 5166 0094 0B4B     		ldr	r3, .L407+8
 5167 0096 C018     		adds	r0, r0, r3
 5168 0098 3100     		movs	r1, r6
 5169 009a FFF7FEFF 		bl	vListInsertEnd
 5170              	.LVL407:
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5171              		.loc 1 4781 35 discriminator 3 view .LVU1442
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5172              		.loc 1 4784 5 discriminator 3 view .LVU1443
 5173 009e A36A     		ldr	r3, [r4, #40]
 5174 00a0 002B     		cmp	r3, #0
 5175 00a2 01D0     		beq	.L400
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5176              		.loc 1 4784 5 discriminator 1 view .LVU1444
 5177              		.syntax divided
 5178              	@ 4784 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5179 00a4 72B6     		 cpsid i 
 5180              	@ 0 "" 2
 5181              		.thumb
ARM GAS  /tmp/ccPYbq7S.s 			page 206


 5182              		.syntax unified
 5183              	.L401:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5184              		.loc 1 4784 5 discriminator 3 view .LVU1445
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5185              		.loc 1 4784 5 discriminator 3 view .LVU1446
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5186              		.loc 1 4784 5 discriminator 3 view .LVU1447
 5187 00a6 FEE7     		b	.L401
 5188              	.L400:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5189              		.loc 1 4784 82 discriminator 2 view .LVU1448
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5190              		.loc 1 4802 5 discriminator 2 view .LVU1449
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5191              		.loc 1 4802 14 is_stmt 0 discriminator 2 view .LVU1450
 5192 00a8 E26A     		ldr	r2, [r4, #44]
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5193              		.loc 1 4802 41 discriminator 2 view .LVU1451
 5194 00aa 074B     		ldr	r3, .L407+12
 5195 00ac 1B68     		ldr	r3, [r3]
 5196 00ae DB6A     		ldr	r3, [r3, #44]
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5197              		.loc 1 4802 7 discriminator 2 view .LVU1452
 5198 00b0 9A42     		cmp	r2, r3
 5199 00b2 D9D9     		bls	.L398
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5200              		.loc 1 4806 6 is_stmt 1 view .LVU1453
 5201 00b4 FFF7FEFF 		bl	vPortYield
 5202              	.LVL408:
 5203 00b8 D6E7     		b	.L398
 5204              	.L408:
 5205 00ba C046     		.align	2
 5206              	.L407:
 5207 00bc 00000000 		.word	.L392
 5208 00c0 00000000 		.word	.LANCHOR12
 5209 00c4 00000000 		.word	pxReadyTasksLists
 5210 00c8 00000000 		.word	.LANCHOR9
 5211              		.cfi_endproc
 5212              	.LFE45:
 5214              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5215              		.align	1
 5216              		.global	xTaskGenericNotifyFromISR
 5217              		.syntax unified
 5218              		.code	16
 5219              		.thumb_func
 5221              	xTaskGenericNotifyFromISR:
 5222              	.LVL409:
 5223              	.LFB46:
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5224              		.loc 1 4829 2 view -0
 5225              		.cfi_startproc
 5226              		@ args = 4, pretend = 0, frame = 8
 5227              		@ frame_needed = 0, uses_anonymous_args = 0
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5228              		.loc 1 4829 2 is_stmt 0 view .LVU1455
 5229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccPYbq7S.s 			page 207


 5230              	.LCFI38:
 5231              		.cfi_def_cfa_offset 20
 5232              		.cfi_offset 4, -20
 5233              		.cfi_offset 5, -16
 5234              		.cfi_offset 6, -12
 5235              		.cfi_offset 7, -8
 5236              		.cfi_offset 14, -4
 5237 0002 83B0     		sub	sp, sp, #12
 5238              	.LCFI39:
 5239              		.cfi_def_cfa_offset 32
 5240 0004 0400     		movs	r4, r0
 5241 0006 0191     		str	r1, [sp, #4]
 5242 0008 1500     		movs	r5, r2
 5243 000a 1E00     		movs	r6, r3
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5244              		.loc 1 4830 2 is_stmt 1 view .LVU1456
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5245              		.loc 1 4831 2 view .LVU1457
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5246              		.loc 1 4832 2 view .LVU1458
 5247              	.LVL410:
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5248              		.loc 1 4833 2 view .LVU1459
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5249              		.loc 1 4835 3 view .LVU1460
 5250 000c 0028     		cmp	r0, #0
 5251 000e 11D0     		beq	.L431
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5252              		.loc 1 4835 32 discriminator 2 view .LVU1461
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5253              		.loc 1 4853 45 discriminator 2 view .LVU1462
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5254              		.loc 1 4855 3 discriminator 2 view .LVU1463
 5255              	.LVL411:
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5256              		.loc 1 4857 3 discriminator 2 view .LVU1464
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5257              		.loc 1 4857 28 is_stmt 0 discriminator 2 view .LVU1465
 5258 0010 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 5259              	.LVL412:
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5260              		.loc 1 4857 28 discriminator 2 view .LVU1466
 5261 0014 0700     		movs	r7, r0
 5262              	.LVL413:
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5263              		.loc 1 4859 4 is_stmt 1 discriminator 2 view .LVU1467
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5264              		.loc 1 4859 6 is_stmt 0 discriminator 2 view .LVU1468
 5265 0016 002E     		cmp	r6, #0
 5266 0018 01D0     		beq	.L412
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5267              		.loc 1 4861 5 is_stmt 1 view .LVU1469
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5268              		.loc 1 4861 42 is_stmt 0 view .LVU1470
 5269 001a E36C     		ldr	r3, [r4, #76]
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5270              		.loc 1 4861 35 view .LVU1471
ARM GAS  /tmp/ccPYbq7S.s 			page 208


 5271 001c 3360     		str	r3, [r6]
 5272              	.L412:
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5273              		.loc 1 4864 4 is_stmt 1 view .LVU1472
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5274              		.loc 1 4864 26 is_stmt 0 view .LVU1473
 5275 001e 5022     		movs	r2, #80
 5276 0020 A35C     		ldrb	r3, [r4, r2]
 5277 0022 DBB2     		uxtb	r3, r3
 5278              	.LVL414:
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5279              		.loc 1 4865 4 is_stmt 1 view .LVU1474
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5280              		.loc 1 4865 25 is_stmt 0 view .LVU1475
 5281 0024 0221     		movs	r1, #2
 5282 0026 A154     		strb	r1, [r4, r2]
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5283              		.loc 1 4867 4 is_stmt 1 view .LVU1476
 5284 0028 042D     		cmp	r5, #4
 5285 002a 1AD8     		bhi	.L413
 5286 002c AD00     		lsls	r5, r5, #2
 5287 002e 2E4A     		ldr	r2, .L432
 5288 0030 5259     		ldr	r2, [r2, r5]
 5289 0032 9746     		mov	pc, r2
 5290              		.section	.rodata.xTaskGenericNotifyFromISR,"a",%progbits
 5291              		.align	2
 5292              	.L415:
 5293 0000 6C000000 		.word	.L428
 5294 0004 38000000 		.word	.L418
 5295 0008 44000000 		.word	.L417
 5296 000c 4E000000 		.word	.L416
 5297 0010 56000000 		.word	.L414
 5298              		.section	.text.xTaskGenericNotifyFromISR
 5299              	.LVL415:
 5300              	.L431:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5301              		.loc 1 4835 3 discriminator 1 view .LVU1477
 5302              		.syntax divided
 5303              	@ 4835 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5304 0034 72B6     		 cpsid i 
 5305              	@ 0 "" 2
 5306              		.thumb
 5307              		.syntax unified
 5308              	.L411:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5309              		.loc 1 4835 3 discriminator 1 view .LVU1478
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5310              		.loc 1 4835 3 discriminator 1 view .LVU1479
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5311              		.loc 1 4835 3 discriminator 1 view .LVU1480
 5312 0036 FEE7     		b	.L411
 5313              	.LVL416:
 5314              	.L418:
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5315              		.loc 1 4870 6 view .LVU1481
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5316              		.loc 1 4870 29 is_stmt 0 view .LVU1482
ARM GAS  /tmp/ccPYbq7S.s 			page 209


 5317 0038 E26C     		ldr	r2, [r4, #76]
 5318 003a 019E     		ldr	r6, [sp, #4]
 5319              	.LVL417:
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5320              		.loc 1 4870 29 view .LVU1483
 5321 003c 1643     		orrs	r6, r2
 5322 003e E664     		str	r6, [r4, #76]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5323              		.loc 1 4871 6 is_stmt 1 view .LVU1484
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5324              		.loc 1 4832 13 is_stmt 0 view .LVU1485
 5325 0040 0125     		movs	r5, #1
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5326              		.loc 1 4871 6 view .LVU1486
 5327 0042 14E0     		b	.L419
 5328              	.LVL418:
 5329              	.L417:
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5330              		.loc 1 4874 6 is_stmt 1 view .LVU1487
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5331              		.loc 1 4874 13 is_stmt 0 view .LVU1488
 5332 0044 E26C     		ldr	r2, [r4, #76]
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5333              		.loc 1 4874 32 view .LVU1489
 5334 0046 0132     		adds	r2, r2, #1
 5335 0048 E264     		str	r2, [r4, #76]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5336              		.loc 1 4875 6 is_stmt 1 view .LVU1490
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5337              		.loc 1 4832 13 is_stmt 0 view .LVU1491
 5338 004a 0125     		movs	r5, #1
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5339              		.loc 1 4875 6 view .LVU1492
 5340 004c 0FE0     		b	.L419
 5341              	.L416:
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5342              		.loc 1 4878 6 is_stmt 1 view .LVU1493
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5343              		.loc 1 4878 29 is_stmt 0 view .LVU1494
 5344 004e 019A     		ldr	r2, [sp, #4]
 5345 0050 E264     		str	r2, [r4, #76]
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5346              		.loc 1 4879 6 is_stmt 1 view .LVU1495
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5347              		.loc 1 4832 13 is_stmt 0 view .LVU1496
 5348 0052 0125     		movs	r5, #1
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5349              		.loc 1 4879 6 view .LVU1497
 5350 0054 0BE0     		b	.L419
 5351              	.L414:
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5352              		.loc 1 4882 6 is_stmt 1 view .LVU1498
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5353              		.loc 1 4882 8 is_stmt 0 view .LVU1499
 5354 0056 022B     		cmp	r3, #2
 5355 0058 10D0     		beq	.L429
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccPYbq7S.s 			page 210


 5356              		.loc 1 4884 7 is_stmt 1 view .LVU1500
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5357              		.loc 1 4884 30 is_stmt 0 view .LVU1501
 5358 005a 019A     		ldr	r2, [sp, #4]
 5359 005c E264     		str	r2, [r4, #76]
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5360              		.loc 1 4832 13 view .LVU1502
 5361 005e 0125     		movs	r5, #1
 5362 0060 05E0     		b	.L419
 5363              	.L413:
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5364              		.loc 1 4902 6 is_stmt 1 view .LVU1503
 5365 0062 E26C     		ldr	r2, [r4, #76]
 5366 0064 0132     		adds	r2, r2, #1
 5367 0066 0BD0     		beq	.L430
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5368              		.loc 1 4902 6 discriminator 1 view .LVU1504
 5369              		.syntax divided
 5370              	@ 4902 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5371 0068 72B6     		 cpsid i 
 5372              	@ 0 "" 2
 5373              		.thumb
 5374              		.syntax unified
 5375              	.L420:
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5376              		.loc 1 4902 6 discriminator 2 view .LVU1505
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5377              		.loc 1 4902 6 discriminator 2 view .LVU1506
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5378              		.loc 1 4902 6 discriminator 2 view .LVU1507
 5379 006a FEE7     		b	.L420
 5380              	.L428:
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5381              		.loc 1 4867 4 is_stmt 0 view .LVU1508
 5382 006c 0125     		movs	r5, #1
 5383              	.LVL419:
 5384              	.L419:
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5385              		.loc 1 4906 31 is_stmt 1 view .LVU1509
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5386              		.loc 1 4910 4 view .LVU1510
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5387              		.loc 1 4910 6 is_stmt 0 view .LVU1511
 5388 006e 012B     		cmp	r3, #1
 5389 0070 2ED1     		bne	.L421
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5390              		.loc 1 4913 5 is_stmt 1 view .LVU1512
 5391 0072 A36A     		ldr	r3, [r4, #40]
 5392              	.LVL420:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5393              		.loc 1 4913 5 is_stmt 0 view .LVU1513
 5394 0074 002B     		cmp	r3, #0
 5395 0076 05D0     		beq	.L422
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5396              		.loc 1 4913 5 is_stmt 1 discriminator 1 view .LVU1514
 5397              		.syntax divided
 5398              	@ 4913 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
ARM GAS  /tmp/ccPYbq7S.s 			page 211


 5399 0078 72B6     		 cpsid i 
 5400              	@ 0 "" 2
 5401              		.thumb
 5402              		.syntax unified
 5403              	.L423:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5404              		.loc 1 4913 5 discriminator 3 view .LVU1515
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5405              		.loc 1 4913 5 discriminator 3 view .LVU1516
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5406              		.loc 1 4913 5 discriminator 3 view .LVU1517
 5407 007a FEE7     		b	.L423
 5408              	.LVL421:
 5409              	.L429:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5410              		.loc 1 4889 15 is_stmt 0 view .LVU1518
 5411 007c 0025     		movs	r5, #0
 5412 007e F6E7     		b	.L419
 5413              	.L430:
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5414              		.loc 1 4832 13 view .LVU1519
 5415 0080 0125     		movs	r5, #1
 5416 0082 F4E7     		b	.L419
 5417              	.LVL422:
 5418              	.L422:
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5419              		.loc 1 4913 82 is_stmt 1 discriminator 2 view .LVU1520
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5420              		.loc 1 4915 5 discriminator 2 view .LVU1521
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5421              		.loc 1 4915 30 is_stmt 0 discriminator 2 view .LVU1522
 5422 0084 194B     		ldr	r3, .L432+4
 5423 0086 1B68     		ldr	r3, [r3]
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5424              		.loc 1 4915 7 discriminator 2 view .LVU1523
 5425 0088 002B     		cmp	r3, #0
 5426 008a 27D1     		bne	.L424
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5427              		.loc 1 4917 6 is_stmt 1 view .LVU1524
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5428              		.loc 1 4917 15 is_stmt 0 view .LVU1525
 5429 008c 261D     		adds	r6, r4, #4
 5430 008e 3000     		movs	r0, r6
 5431              	.LVL423:
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5432              		.loc 1 4917 15 view .LVU1526
 5433 0090 FFF7FEFF 		bl	uxListRemove
 5434              	.LVL424:
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5435              		.loc 1 4918 6 is_stmt 1 view .LVU1527
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5436              		.loc 1 4918 6 view .LVU1528
 5437 0094 E36A     		ldr	r3, [r4, #44]
 5438 0096 164A     		ldr	r2, .L432+8
 5439 0098 1268     		ldr	r2, [r2]
 5440 009a 9342     		cmp	r3, r2
 5441 009c 01D9     		bls	.L425
ARM GAS  /tmp/ccPYbq7S.s 			page 212


4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5442              		.loc 1 4918 6 discriminator 1 view .LVU1529
 5443 009e 144A     		ldr	r2, .L432+8
 5444 00a0 1360     		str	r3, [r2]
 5445              	.L425:
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5446              		.loc 1 4918 6 discriminator 3 view .LVU1530
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5447              		.loc 1 4918 6 discriminator 3 view .LVU1531
 5448 00a2 9800     		lsls	r0, r3, #2
 5449 00a4 C018     		adds	r0, r0, r3
 5450 00a6 8000     		lsls	r0, r0, #2
 5451 00a8 124B     		ldr	r3, .L432+12
 5452 00aa C018     		adds	r0, r0, r3
 5453 00ac 3100     		movs	r1, r6
 5454 00ae FFF7FEFF 		bl	vListInsertEnd
 5455              	.LVL425:
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5456              		.loc 1 4918 36 discriminator 3 view .LVU1532
 5457              	.L426:
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5458              		.loc 1 4927 5 view .LVU1533
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5459              		.loc 1 4927 14 is_stmt 0 view .LVU1534
 5460 00b2 E26A     		ldr	r2, [r4, #44]
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5461              		.loc 1 4927 41 view .LVU1535
 5462 00b4 104B     		ldr	r3, .L432+16
 5463 00b6 1B68     		ldr	r3, [r3]
 5464 00b8 DB6A     		ldr	r3, [r3, #44]
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5465              		.loc 1 4927 7 view .LVU1536
 5466 00ba 9A42     		cmp	r2, r3
 5467 00bc 08D9     		bls	.L421
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5468              		.loc 1 4931 6 is_stmt 1 view .LVU1537
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5469              		.loc 1 4931 8 is_stmt 0 view .LVU1538
 5470 00be 089B     		ldr	r3, [sp, #32]
 5471 00c0 002B     		cmp	r3, #0
 5472 00c2 02D0     		beq	.L427
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5473              		.loc 1 4933 7 is_stmt 1 view .LVU1539
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5474              		.loc 1 4933 34 is_stmt 0 view .LVU1540
 5475 00c4 0123     		movs	r3, #1
 5476 00c6 089A     		ldr	r2, [sp, #32]
 5477 00c8 1360     		str	r3, [r2]
 5478              	.L427:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5479              		.loc 1 4939 6 is_stmt 1 view .LVU1541
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5480              		.loc 1 4939 20 is_stmt 0 view .LVU1542
 5481 00ca 0C4B     		ldr	r3, .L432+20
 5482 00cc 0122     		movs	r2, #1
 5483 00ce 1A60     		str	r2, [r3]
 5484              	.L421:
ARM GAS  /tmp/ccPYbq7S.s 			page 213


4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5485              		.loc 1 4943 30 is_stmt 1 view .LVU1543
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5486              		.loc 1 4947 3 view .LVU1544
 5487 00d0 3800     		movs	r0, r7
 5488 00d2 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5489              	.LVL426:
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5490              		.loc 1 4949 3 view .LVU1545
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5491              		.loc 1 4950 2 is_stmt 0 view .LVU1546
 5492 00d6 2800     		movs	r0, r5
 5493 00d8 03B0     		add	sp, sp, #12
 5494              		@ sp needed
 5495              	.LVL427:
 5496              	.LVL428:
 5497              	.LVL429:
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5498              		.loc 1 4950 2 view .LVU1547
 5499 00da F0BD     		pop	{r4, r5, r6, r7, pc}
 5500              	.LVL430:
 5501              	.L424:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5502              		.loc 1 4924 6 is_stmt 1 view .LVU1548
 5503 00dc 2100     		movs	r1, r4
 5504 00de 1831     		adds	r1, r1, #24
 5505 00e0 0748     		ldr	r0, .L432+24
 5506              	.LVL431:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5507              		.loc 1 4924 6 is_stmt 0 view .LVU1549
 5508 00e2 FFF7FEFF 		bl	vListInsertEnd
 5509              	.LVL432:
 5510 00e6 E4E7     		b	.L426
 5511              	.L433:
 5512              		.align	2
 5513              	.L432:
 5514 00e8 00000000 		.word	.L415
 5515 00ec 00000000 		.word	.LANCHOR15
 5516 00f0 00000000 		.word	.LANCHOR12
 5517 00f4 00000000 		.word	pxReadyTasksLists
 5518 00f8 00000000 		.word	.LANCHOR9
 5519 00fc 00000000 		.word	.LANCHOR19
 5520 0100 00000000 		.word	.LANCHOR1
 5521              		.cfi_endproc
 5522              	.LFE46:
 5524              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5525              		.align	1
 5526              		.global	vTaskNotifyGiveFromISR
 5527              		.syntax unified
 5528              		.code	16
 5529              		.thumb_func
 5531              	vTaskNotifyGiveFromISR:
 5532              	.LVL433:
 5533              	.LFB47:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5534              		.loc 1 4958 2 is_stmt 1 view -0
 5535              		.cfi_startproc
ARM GAS  /tmp/ccPYbq7S.s 			page 214


 5536              		@ args = 0, pretend = 0, frame = 0
 5537              		@ frame_needed = 0, uses_anonymous_args = 0
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5538              		.loc 1 4958 2 is_stmt 0 view .LVU1551
 5539 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5540              	.LCFI40:
 5541              		.cfi_def_cfa_offset 24
 5542              		.cfi_offset 3, -24
 5543              		.cfi_offset 4, -20
 5544              		.cfi_offset 5, -16
 5545              		.cfi_offset 6, -12
 5546              		.cfi_offset 7, -8
 5547              		.cfi_offset 14, -4
 5548 0002 0400     		movs	r4, r0
 5549 0004 0D00     		movs	r5, r1
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5550              		.loc 1 4959 2 is_stmt 1 view .LVU1552
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5551              		.loc 1 4960 2 view .LVU1553
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5552              		.loc 1 4961 2 view .LVU1554
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5553              		.loc 1 4963 3 view .LVU1555
 5554 0006 0028     		cmp	r0, #0
 5555 0008 10D0     		beq	.L444
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5556              		.loc 1 4963 32 discriminator 2 view .LVU1556
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5557              		.loc 1 4981 45 discriminator 2 view .LVU1557
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5558              		.loc 1 4983 3 discriminator 2 view .LVU1558
 5559              	.LVL434:
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5560              		.loc 1 4985 3 discriminator 2 view .LVU1559
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5561              		.loc 1 4985 28 is_stmt 0 discriminator 2 view .LVU1560
 5562 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 5563              	.LVL435:
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5564              		.loc 1 4985 28 discriminator 2 view .LVU1561
 5565 000e 0600     		movs	r6, r0
 5566              	.LVL436:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5567              		.loc 1 4987 4 is_stmt 1 discriminator 2 view .LVU1562
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5568              		.loc 1 4987 26 is_stmt 0 discriminator 2 view .LVU1563
 5569 0010 5023     		movs	r3, #80
 5570 0012 E25C     		ldrb	r2, [r4, r3]
 5571              	.LVL437:
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5572              		.loc 1 4988 4 is_stmt 1 discriminator 2 view .LVU1564
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5573              		.loc 1 4988 25 is_stmt 0 discriminator 2 view .LVU1565
 5574 0014 0221     		movs	r1, #2
 5575 0016 E154     		strb	r1, [r4, r3]
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5576              		.loc 1 4992 4 is_stmt 1 discriminator 2 view .LVU1566
ARM GAS  /tmp/ccPYbq7S.s 			page 215


4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5577              		.loc 1 4992 11 is_stmt 0 discriminator 2 view .LVU1567
 5578 0018 E36C     		ldr	r3, [r4, #76]
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5579              		.loc 1 4992 30 discriminator 2 view .LVU1568
 5580 001a 0133     		adds	r3, r3, #1
 5581 001c E364     		str	r3, [r4, #76]
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5582              		.loc 1 4994 36 is_stmt 1 discriminator 2 view .LVU1569
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5583              		.loc 1 4998 4 discriminator 2 view .LVU1570
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5584              		.loc 1 4998 6 is_stmt 0 discriminator 2 view .LVU1571
 5585 001e 012A     		cmp	r2, #1
 5586 0020 2AD1     		bne	.L437
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5587              		.loc 1 5001 5 is_stmt 1 view .LVU1572
 5588 0022 A36A     		ldr	r3, [r4, #40]
 5589 0024 002B     		cmp	r3, #0
 5590 0026 03D0     		beq	.L438
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5591              		.loc 1 5001 5 discriminator 1 view .LVU1573
 5592              		.syntax divided
 5593              	@ 5001 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5594 0028 72B6     		 cpsid i 
 5595              	@ 0 "" 2
 5596              		.thumb
 5597              		.syntax unified
 5598              	.L439:
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5599              		.loc 1 5001 5 discriminator 2 view .LVU1574
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5600              		.loc 1 5001 5 discriminator 2 view .LVU1575
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5601              		.loc 1 5001 5 discriminator 2 view .LVU1576
 5602 002a FEE7     		b	.L439
 5603              	.LVL438:
 5604              	.L444:
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5605              		.loc 1 4963 3 discriminator 1 view .LVU1577
 5606              		.syntax divided
 5607              	@ 4963 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5608 002c 72B6     		 cpsid i 
 5609              	@ 0 "" 2
 5610              		.thumb
 5611              		.syntax unified
 5612              	.L436:
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5613              		.loc 1 4963 3 discriminator 1 view .LVU1578
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5614              		.loc 1 4963 3 discriminator 1 view .LVU1579
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5615              		.loc 1 4963 3 discriminator 1 view .LVU1580
 5616 002e FEE7     		b	.L436
 5617              	.LVL439:
 5618              	.L438:
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccPYbq7S.s 			page 216


 5619              		.loc 1 5001 82 discriminator 2 view .LVU1581
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5620              		.loc 1 5003 5 discriminator 2 view .LVU1582
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5621              		.loc 1 5003 30 is_stmt 0 discriminator 2 view .LVU1583
 5622 0030 164B     		ldr	r3, .L445
 5623 0032 1B68     		ldr	r3, [r3]
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5624              		.loc 1 5003 7 discriminator 2 view .LVU1584
 5625 0034 002B     		cmp	r3, #0
 5626 0036 23D1     		bne	.L440
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5627              		.loc 1 5005 6 is_stmt 1 view .LVU1585
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5628              		.loc 1 5005 15 is_stmt 0 view .LVU1586
 5629 0038 271D     		adds	r7, r4, #4
 5630 003a 3800     		movs	r0, r7
 5631              	.LVL440:
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5632              		.loc 1 5005 15 view .LVU1587
 5633 003c FFF7FEFF 		bl	uxListRemove
 5634              	.LVL441:
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5635              		.loc 1 5006 6 is_stmt 1 view .LVU1588
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5636              		.loc 1 5006 6 view .LVU1589
 5637 0040 E36A     		ldr	r3, [r4, #44]
 5638 0042 134A     		ldr	r2, .L445+4
 5639 0044 1268     		ldr	r2, [r2]
 5640 0046 9342     		cmp	r3, r2
 5641 0048 01D9     		bls	.L441
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5642              		.loc 1 5006 6 discriminator 1 view .LVU1590
 5643 004a 114A     		ldr	r2, .L445+4
 5644 004c 1360     		str	r3, [r2]
 5645              	.L441:
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5646              		.loc 1 5006 6 discriminator 3 view .LVU1591
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5647              		.loc 1 5006 6 discriminator 3 view .LVU1592
 5648 004e 9800     		lsls	r0, r3, #2
 5649 0050 C018     		adds	r0, r0, r3
 5650 0052 8000     		lsls	r0, r0, #2
 5651 0054 0F4B     		ldr	r3, .L445+8
 5652 0056 C018     		adds	r0, r0, r3
 5653 0058 3900     		movs	r1, r7
 5654 005a FFF7FEFF 		bl	vListInsertEnd
 5655              	.LVL442:
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5656              		.loc 1 5006 36 discriminator 3 view .LVU1593
 5657              	.L442:
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5658              		.loc 1 5015 5 view .LVU1594
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5659              		.loc 1 5015 14 is_stmt 0 view .LVU1595
 5660 005e E26A     		ldr	r2, [r4, #44]
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/ccPYbq7S.s 			page 217


 5661              		.loc 1 5015 41 view .LVU1596
 5662 0060 0D4B     		ldr	r3, .L445+12
 5663 0062 1B68     		ldr	r3, [r3]
 5664 0064 DB6A     		ldr	r3, [r3, #44]
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5665              		.loc 1 5015 7 view .LVU1597
 5666 0066 9A42     		cmp	r2, r3
 5667 0068 06D9     		bls	.L437
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5668              		.loc 1 5019 6 is_stmt 1 view .LVU1598
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5669              		.loc 1 5019 8 is_stmt 0 view .LVU1599
 5670 006a 002D     		cmp	r5, #0
 5671 006c 01D0     		beq	.L443
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5672              		.loc 1 5021 7 is_stmt 1 view .LVU1600
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5673              		.loc 1 5021 34 is_stmt 0 view .LVU1601
 5674 006e 0123     		movs	r3, #1
 5675 0070 2B60     		str	r3, [r5]
 5676              	.L443:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5677              		.loc 1 5027 6 is_stmt 1 view .LVU1602
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5678              		.loc 1 5027 20 is_stmt 0 view .LVU1603
 5679 0072 0A4B     		ldr	r3, .L445+16
 5680 0074 0122     		movs	r2, #1
 5681 0076 1A60     		str	r2, [r3]
 5682              	.L437:
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5683              		.loc 1 5031 30 is_stmt 1 view .LVU1604
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5684              		.loc 1 5035 3 view .LVU1605
 5685 0078 3000     		movs	r0, r6
 5686 007a FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5687              	.LVL443:
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5688              		.loc 1 5036 2 is_stmt 0 view .LVU1606
 5689              		@ sp needed
 5690              	.LVL444:
 5691              	.LVL445:
 5692              	.LVL446:
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5693              		.loc 1 5036 2 view .LVU1607
 5694 007e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5695              	.LVL447:
 5696              	.L440:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5697              		.loc 1 5012 6 is_stmt 1 view .LVU1608
 5698 0080 2100     		movs	r1, r4
 5699 0082 1831     		adds	r1, r1, #24
 5700 0084 0648     		ldr	r0, .L445+20
 5701              	.LVL448:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5702              		.loc 1 5012 6 is_stmt 0 view .LVU1609
 5703 0086 FFF7FEFF 		bl	vListInsertEnd
 5704              	.LVL449:
ARM GAS  /tmp/ccPYbq7S.s 			page 218


5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5705              		.loc 1 5012 6 view .LVU1610
 5706 008a E8E7     		b	.L442
 5707              	.L446:
 5708              		.align	2
 5709              	.L445:
 5710 008c 00000000 		.word	.LANCHOR15
 5711 0090 00000000 		.word	.LANCHOR12
 5712 0094 00000000 		.word	pxReadyTasksLists
 5713 0098 00000000 		.word	.LANCHOR9
 5714 009c 00000000 		.word	.LANCHOR19
 5715 00a0 00000000 		.word	.LANCHOR1
 5716              		.cfi_endproc
 5717              	.LFE47:
 5719              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5720              		.align	1
 5721              		.global	xTaskNotifyStateClear
 5722              		.syntax unified
 5723              		.code	16
 5724              		.thumb_func
 5726              	xTaskNotifyStateClear:
 5727              	.LVL450:
 5728              	.LFB48:
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5729              		.loc 1 5045 2 is_stmt 1 view -0
 5730              		.cfi_startproc
 5731              		@ args = 0, pretend = 0, frame = 0
 5732              		@ frame_needed = 0, uses_anonymous_args = 0
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5733              		.loc 1 5045 2 is_stmt 0 view .LVU1612
 5734 0000 10B5     		push	{r4, lr}
 5735              	.LCFI41:
 5736              		.cfi_def_cfa_offset 8
 5737              		.cfi_offset 4, -8
 5738              		.cfi_offset 14, -4
 5739 0002 041E     		subs	r4, r0, #0
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5740              		.loc 1 5046 2 is_stmt 1 view .LVU1613
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5741              		.loc 1 5047 2 view .LVU1614
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5742              		.loc 1 5051 3 view .LVU1615
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5743              		.loc 1 5051 11 is_stmt 0 view .LVU1616
 5744 0004 0AD0     		beq	.L451
 5745              	.LVL451:
 5746              	.L448:
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5747              		.loc 1 5053 3 is_stmt 1 discriminator 4 view .LVU1617
 5748 0006 FFF7FEFF 		bl	vPortEnterCritical
 5749              	.LVL452:
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5750              		.loc 1 5055 4 discriminator 4 view .LVU1618
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5751              		.loc 1 5055 13 is_stmt 0 discriminator 4 view .LVU1619
 5752 000a 5023     		movs	r3, #80
 5753 000c E35C     		ldrb	r3, [r4, r3]
ARM GAS  /tmp/ccPYbq7S.s 			page 219


5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5754              		.loc 1 5055 6 discriminator 4 view .LVU1620
 5755 000e 022B     		cmp	r3, #2
 5756 0010 07D0     		beq	.L452
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5757              		.loc 1 5062 13 view .LVU1621
 5758 0012 0024     		movs	r4, #0
 5759              	.LVL453:
 5760              	.L449:
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5761              		.loc 1 5065 3 is_stmt 1 view .LVU1622
 5762 0014 FFF7FEFF 		bl	vPortExitCritical
 5763              	.LVL454:
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5764              		.loc 1 5067 3 view .LVU1623
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5765              		.loc 1 5068 2 is_stmt 0 view .LVU1624
 5766 0018 2000     		movs	r0, r4
 5767              		@ sp needed
 5768              	.LVL455:
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5769              		.loc 1 5068 2 view .LVU1625
 5770 001a 10BD     		pop	{r4, pc}
 5771              	.LVL456:
 5772              	.L451:
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5773              		.loc 1 5051 11 discriminator 1 view .LVU1626
 5774 001c 034B     		ldr	r3, .L453
 5775 001e 1C68     		ldr	r4, [r3]
 5776              	.LVL457:
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5777              		.loc 1 5051 11 discriminator 1 view .LVU1627
 5778 0020 F1E7     		b	.L448
 5779              	.LVL458:
 5780              	.L452:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5781              		.loc 1 5057 5 is_stmt 1 view .LVU1628
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5782              		.loc 1 5057 26 is_stmt 0 view .LVU1629
 5783 0022 4E33     		adds	r3, r3, #78
 5784 0024 0022     		movs	r2, #0
 5785 0026 E254     		strb	r2, [r4, r3]
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5786              		.loc 1 5058 5 is_stmt 1 view .LVU1630
 5787              	.LVL459:
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5788              		.loc 1 5058 13 is_stmt 0 view .LVU1631
 5789 0028 0124     		movs	r4, #1
 5790              	.LVL460:
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5791              		.loc 1 5058 13 view .LVU1632
 5792 002a F3E7     		b	.L449
 5793              	.L454:
 5794              		.align	2
 5795              	.L453:
 5796 002c 00000000 		.word	.LANCHOR9
 5797              		.cfi_endproc
ARM GAS  /tmp/ccPYbq7S.s 			page 220


 5798              	.LFE48:
 5800              		.global	pxCurrentTCB
 5801              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5802              		.align	2
 5803              		.set	.LANCHOR9,. + 0
 5806              	pxCurrentTCB:
 5807 0000 00000000 		.space	4
 5808              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5809              		.align	2
 5810              		.set	.LANCHOR2,. + 0
 5813              	pxDelayedTaskList:
 5814 0000 00000000 		.space	4
 5815              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5816              		.align	2
 5817              		.set	.LANCHOR7,. + 0
 5820              	pxOverflowDelayedTaskList:
 5821 0000 00000000 		.space	4
 5822              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5823              		.align	2
 5826              	pxReadyTasksLists:
 5827 0000 00000000 		.space	140
 5827      00000000 
 5827      00000000 
 5827      00000000 
 5827      00000000 
 5828              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5829              		.align	2
 5830              		.set	.LANCHOR8,. + 0
 5833              	uxCurrentNumberOfTasks:
 5834 0000 00000000 		.space	4
 5835              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5836              		.align	2
 5837              		.set	.LANCHOR13,. + 0
 5840              	uxDeletedTasksWaitingCleanUp:
 5841 0000 00000000 		.space	4
 5842              		.section	.bss.uxPendedTicks,"aw",%nobits
 5843              		.align	2
 5844              		.set	.LANCHOR18,. + 0
 5847              	uxPendedTicks:
 5848 0000 00000000 		.space	4
 5849              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5850              		.align	2
 5851              		.set	.LANCHOR15,. + 0
 5854              	uxSchedulerSuspended:
 5855 0000 00000000 		.space	4
 5856              		.section	.bss.uxTaskNumber,"aw",%nobits
 5857              		.align	2
 5858              		.set	.LANCHOR11,. + 0
 5861              	uxTaskNumber:
 5862 0000 00000000 		.space	4
 5863              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5864              		.align	2
 5865              		.set	.LANCHOR12,. + 0
 5868              	uxTopReadyPriority:
 5869 0000 00000000 		.space	4
 5870              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5871              		.align	2
ARM GAS  /tmp/ccPYbq7S.s 			page 221


 5872              		.set	.LANCHOR4,. + 0
 5875              	xDelayedTaskList1:
 5876 0000 00000000 		.space	20
 5876      00000000 
 5876      00000000 
 5876      00000000 
 5876      00000000 
 5877              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5878              		.align	2
 5879              		.set	.LANCHOR5,. + 0
 5882              	xDelayedTaskList2:
 5883 0000 00000000 		.space	20
 5883      00000000 
 5883      00000000 
 5883      00000000 
 5883      00000000 
 5884              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 5885              		.align	2
 5886              		.set	.LANCHOR16,. + 0
 5889              	xIdleTaskHandle:
 5890 0000 00000000 		.space	4
 5891              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 5892              		.align	2
 5893              		.set	.LANCHOR3,. + 0
 5896              	xNextTaskUnblockTime:
 5897 0000 00000000 		.space	4
 5898              		.section	.bss.xNumOfOverflows,"aw",%nobits
 5899              		.align	2
 5900              		.set	.LANCHOR17,. + 0
 5903              	xNumOfOverflows:
 5904 0000 00000000 		.space	4
 5905              		.section	.bss.xPendingReadyList,"aw",%nobits
 5906              		.align	2
 5907              		.set	.LANCHOR1,. + 0
 5910              	xPendingReadyList:
 5911 0000 00000000 		.space	20
 5911      00000000 
 5911      00000000 
 5911      00000000 
 5911      00000000 
 5912              		.section	.bss.xSchedulerRunning,"aw",%nobits
 5913              		.align	2
 5914              		.set	.LANCHOR10,. + 0
 5917              	xSchedulerRunning:
 5918 0000 00000000 		.space	4
 5919              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 5920              		.align	2
 5921              		.set	.LANCHOR0,. + 0
 5924              	xSuspendedTaskList:
 5925 0000 00000000 		.space	20
 5925      00000000 
 5925      00000000 
 5925      00000000 
 5925      00000000 
 5926              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 5927              		.align	2
 5928              		.set	.LANCHOR6,. + 0
ARM GAS  /tmp/ccPYbq7S.s 			page 222


 5931              	xTasksWaitingTermination:
 5932 0000 00000000 		.space	20
 5932      00000000 
 5932      00000000 
 5932      00000000 
 5932      00000000 
 5933              		.section	.bss.xTickCount,"aw",%nobits
 5934              		.align	2
 5935              		.set	.LANCHOR14,. + 0
 5938              	xTickCount:
 5939 0000 00000000 		.space	4
 5940              		.section	.bss.xYieldPending,"aw",%nobits
 5941              		.align	2
 5942              		.set	.LANCHOR19,. + 0
 5945              	xYieldPending:
 5946 0000 00000000 		.space	4
 5947              		.text
 5948              	.Letext0:
 5949              		.file 2 "/opt/gcc-arm-none-eabi-10.3-2021.10/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 5950              		.file 3 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
 5951              		.file 4 "/opt/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 5952              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 5953              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 5954              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 5955              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 5956              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 5957              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccPYbq7S.s 			page 223


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccPYbq7S.s:18     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccPYbq7S.s:23     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccPYbq7S.s:101    .text.prvTaskIsTaskSuspended:000000000000002c $d
     /tmp/ccPYbq7S.s:107    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccPYbq7S.s:112    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccPYbq7S.s:160    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/ccPYbq7S.s:166    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccPYbq7S.s:171    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccPYbq7S.s:361    .text.prvInitialiseNewTask:000000000000009c $d
     /tmp/ccPYbq7S.s:366    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccPYbq7S.s:371    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccPYbq7S.s:448    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/ccPYbq7S.s:5826   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccPYbq7S.s:460    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccPYbq7S.s:465    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccPYbq7S.s:601    .text.prvAddNewTaskToReadyList:0000000000000088 $d
     /tmp/ccPYbq7S.s:611    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccPYbq7S.s:616    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccPYbq7S.s:685    .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccPYbq7S.s:690    .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccPYbq7S.s:754    .text.prvCheckTasksWaitingTermination:0000000000000038 $d
     /tmp/ccPYbq7S.s:761    .text.prvIdleTask:0000000000000000 $t
     /tmp/ccPYbq7S.s:766    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccPYbq7S.s:802    .text.prvIdleTask:0000000000000014 $d
     /tmp/ccPYbq7S.s:807    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccPYbq7S.s:812    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccPYbq7S.s:923    .text.prvAddCurrentTaskToDelayedList:0000000000000064 $d
     /tmp/ccPYbq7S.s:933    .text.xTaskCreateStatic:0000000000000000 $t
     /tmp/ccPYbq7S.s:939    .text.xTaskCreateStatic:0000000000000000 xTaskCreateStatic
     /tmp/ccPYbq7S.s:1061   .text.xTaskCreate:0000000000000000 $t
     /tmp/ccPYbq7S.s:1067   .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccPYbq7S.s:1196   .text.vTaskDelete:0000000000000000 $t
     /tmp/ccPYbq7S.s:1202   .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccPYbq7S.s:1350   .text.vTaskDelete:0000000000000084 $d
     /tmp/ccPYbq7S.s:1361   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccPYbq7S.s:1367   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccPYbq7S.s:1417   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/ccPYbq7S.s:1422   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccPYbq7S.s:1428   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccPYbq7S.s:1480   .text.uxTaskPriorityGetFromISR:000000000000001c $d
     /tmp/ccPYbq7S.s:1485   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccPYbq7S.s:1491   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccPYbq7S.s:1709   .text.vTaskPrioritySet:00000000000000b0 $d
     /tmp/ccPYbq7S.s:1716   .text.vTaskResume:0000000000000000 $t
     /tmp/ccPYbq7S.s:1722   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccPYbq7S.s:1835   .text.vTaskResume:0000000000000060 $d
     /tmp/ccPYbq7S.s:1842   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccPYbq7S.s:1848   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccPYbq7S.s:1988   .text.xTaskResumeFromISR:0000000000000074 $d
     /tmp/ccPYbq7S.s:1997   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d
     /tmp/ccPYbq7S.s:2001   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccPYbq7S.s:2007   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccPYbq7S.s:2098   .text.vTaskStartScheduler:0000000000000050 $d
     /tmp/ccPYbq7S.s:2108   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccPYbq7S.s:2114   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
ARM GAS  /tmp/ccPYbq7S.s 			page 224


     /tmp/ccPYbq7S.s:2146   .text.vTaskEndScheduler:0000000000000010 $d
     /tmp/ccPYbq7S.s:2151   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccPYbq7S.s:2157   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccPYbq7S.s:2176   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/ccPYbq7S.s:2181   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccPYbq7S.s:2187   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccPYbq7S.s:2209   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/ccPYbq7S.s:2214   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccPYbq7S.s:2220   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccPYbq7S.s:2245   .text.xTaskGetTickCountFromISR:0000000000000008 $d
     /tmp/ccPYbq7S.s:2250   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccPYbq7S.s:2256   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccPYbq7S.s:2273   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccPYbq7S.s:2278   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccPYbq7S.s:2284   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccPYbq7S.s:2335   .text.pcTaskGetName:0000000000000018 $d
     /tmp/ccPYbq7S.s:2340   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccPYbq7S.s:2346   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccPYbq7S.s:2607   .text.xTaskIncrementTick:00000000000000e8 $d
     /tmp/ccPYbq7S.s:2622   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccPYbq7S.s:2628   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccPYbq7S.s:2849   .text.xTaskResumeAll:00000000000000c8 $d
     /tmp/ccPYbq7S.s:2861   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccPYbq7S.s:2867   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccPYbq7S.s:2938   .text.vTaskDelay:000000000000002c $d
     /tmp/ccPYbq7S.s:2943   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccPYbq7S.s:2949   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccPYbq7S.s:3075   .text.vTaskSwitchContext:0000000000000074 $d
     /tmp/ccPYbq7S.s:3086   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccPYbq7S.s:3092   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccPYbq7S.s:3263   .text.vTaskSuspend:0000000000000098 $d
     /tmp/ccPYbq7S.s:3272   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccPYbq7S.s:3278   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccPYbq7S.s:3332   .text.vTaskPlaceOnEventList:0000000000000020 $d
     /tmp/ccPYbq7S.s:3337   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccPYbq7S.s:3343   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccPYbq7S.s:3426   .text.vTaskPlaceOnUnorderedEventList:0000000000000038 $d
     /tmp/ccPYbq7S.s:3432   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccPYbq7S.s:3438   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccPYbq7S.s:3568   .text.xTaskRemoveFromEventList:000000000000006c $d
     /tmp/ccPYbq7S.s:3578   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccPYbq7S.s:3584   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccPYbq7S.s:3705   .text.vTaskRemoveFromUnorderedEventList:0000000000000060 $d
     /tmp/ccPYbq7S.s:3714   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccPYbq7S.s:3720   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccPYbq7S.s:3775   .text.vTaskSetTimeOutState:0000000000000020 $d
     /tmp/ccPYbq7S.s:3781   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccPYbq7S.s:3787   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccPYbq7S.s:3811   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/ccPYbq7S.s:3817   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccPYbq7S.s:3823   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccPYbq7S.s:3978   .text.xTaskCheckForTimeOut:0000000000000060 $d
     /tmp/ccPYbq7S.s:3985   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccPYbq7S.s:3991   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccPYbq7S.s:4009   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/ccPYbq7S.s:4014   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccPYbq7S.s:4020   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
ARM GAS  /tmp/ccPYbq7S.s 			page 225


     /tmp/ccPYbq7S.s:4040   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/ccPYbq7S.s:4045   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccPYbq7S.s:4051   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccPYbq7S.s:4094   .text.xTaskGetSchedulerState:000000000000001c $d
     /tmp/ccPYbq7S.s:4100   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccPYbq7S.s:4106   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccPYbq7S.s:4256   .text.xTaskPriorityInherit:0000000000000088 $d
     /tmp/ccPYbq7S.s:4263   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccPYbq7S.s:4269   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccPYbq7S.s:4416   .text.xTaskPriorityDisinherit:000000000000006c $d
     /tmp/ccPYbq7S.s:4423   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccPYbq7S.s:4429   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccPYbq7S.s:4587   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000078 $d
     /tmp/ccPYbq7S.s:4594   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccPYbq7S.s:4600   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccPYbq7S.s:4629   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/ccPYbq7S.s:4634   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccPYbq7S.s:4640   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccPYbq7S.s:4673   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/ccPYbq7S.s:4678   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccPYbq7S.s:4684   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccPYbq7S.s:4802   .text.ulTaskNotifyTake:0000000000000068 $d
     /tmp/ccPYbq7S.s:4807   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccPYbq7S.s:4813   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccPYbq7S.s:4949   .text.xTaskNotifyWait:0000000000000080 $d
     /tmp/ccPYbq7S.s:4954   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccPYbq7S.s:4960   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccPYbq7S.s:5022   .rodata.xTaskGenericNotify:0000000000000000 $d
     /tmp/ccPYbq7S.s:5207   .text.xTaskGenericNotify:00000000000000bc $d
     /tmp/ccPYbq7S.s:5215   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccPYbq7S.s:5221   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccPYbq7S.s:5291   .rodata.xTaskGenericNotifyFromISR:0000000000000000 $d
     /tmp/ccPYbq7S.s:5514   .text.xTaskGenericNotifyFromISR:00000000000000e8 $d
     /tmp/ccPYbq7S.s:5525   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccPYbq7S.s:5531   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccPYbq7S.s:5710   .text.vTaskNotifyGiveFromISR:000000000000008c $d
     /tmp/ccPYbq7S.s:5720   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccPYbq7S.s:5726   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccPYbq7S.s:5796   .text.xTaskNotifyStateClear:000000000000002c $d
     /tmp/ccPYbq7S.s:5806   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccPYbq7S.s:5802   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccPYbq7S.s:5809   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccPYbq7S.s:5813   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccPYbq7S.s:5816   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccPYbq7S.s:5820   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccPYbq7S.s:5823   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccPYbq7S.s:5829   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccPYbq7S.s:5833   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccPYbq7S.s:5836   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccPYbq7S.s:5840   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccPYbq7S.s:5843   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccPYbq7S.s:5847   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccPYbq7S.s:5850   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccPYbq7S.s:5854   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccPYbq7S.s:5857   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccPYbq7S.s:5861   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccPYbq7S.s:5864   .bss.uxTopReadyPriority:0000000000000000 $d
ARM GAS  /tmp/ccPYbq7S.s 			page 226


     /tmp/ccPYbq7S.s:5868   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccPYbq7S.s:5871   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccPYbq7S.s:5875   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccPYbq7S.s:5878   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccPYbq7S.s:5882   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccPYbq7S.s:5885   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccPYbq7S.s:5889   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccPYbq7S.s:5892   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccPYbq7S.s:5896   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccPYbq7S.s:5899   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccPYbq7S.s:5903   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccPYbq7S.s:5906   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccPYbq7S.s:5910   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccPYbq7S.s:5913   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccPYbq7S.s:5917   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccPYbq7S.s:5920   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccPYbq7S.s:5924   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccPYbq7S.s:5927   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccPYbq7S.s:5931   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccPYbq7S.s:5934   .bss.xTickCount:0000000000000000 $d
     /tmp/ccPYbq7S.s:5938   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccPYbq7S.s:5941   .bss.xYieldPending:0000000000000000 $d
     /tmp/ccPYbq7S.s:5945   .bss.xYieldPending:0000000000000000 xYieldPending

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortYield
vPortFree
uxListRemove
vListInsert
pvPortMalloc
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
